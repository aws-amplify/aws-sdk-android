/*
 * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package com.amazonaws.services.awsopsworkscm.model;

import java.io.Serializable;

/**
 * <p>
 * Describes a configuration management server.
 * </p>
 */
public class Server implements Serializable {
    /**
     * <p>
     * Associate a public IP address with a server that you are launching.
     * </p>
     */
    private Boolean associatePublicIpAddress;

    /**
     * <p>
     * The number of automated backups to keep.
     * </p>
     */
    private Integer backupRetentionCount;

    /**
     * <p>
     * The name of the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String serverName;

    /**
     * <p>
     * Time stamp of server creation. Example
     * <code>2016-07-29T13:38:47.520Z</code>
     * </p>
     */
    private java.util.Date createdAt;

    /**
     * <p>
     * The ARN of the CloudFormation stack that was used to create the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String cloudFormationStackArn;

    /**
     * <p>
     * An optional public endpoint of a server, such as
     * <code>https://aws.my-company.com</code>. You cannot access the server by
     * using the <code>Endpoint</code> value if the server has a
     * <code>CustomDomain</code> specified.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 253<br/>
     * <b>Pattern:
     * </b>^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9
     * -]{1,62}[A-Za-z0-9])$<br/>
     */
    private String customDomain;

    /**
     * <p>
     * Disables automated backups. The number of stored backups is dependent on
     * the value of PreferredBackupCount.
     * </p>
     */
    private Boolean disableAutomatedBackup;

    /**
     * <p>
     * A DNS name that can be used to access the engine. Example:
     * <code>myserver-asdfghjkl.us-east-1.opsworks.io</code>. You cannot access
     * the server by using the <code>Endpoint</code> value if the server has a
     * <code>CustomDomain</code> specified.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String endpoint;

    /**
     * <p>
     * The engine type of the server. Valid values in this release include
     * <code>ChefAutomate</code> and <code>Puppet</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String engine;

    /**
     * <p>
     * The engine model of the server. Valid values in this release include
     * <code>Monolithic</code> for Puppet and <code>Single</code> for Chef.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String engineModel;

    /**
     * <p>
     * The response of a createServer() request returns the master credential to
     * access the server in EngineAttributes. These credentials are not stored
     * by AWS OpsWorks CM; they are returned only as part of the result of
     * createServer().
     * </p>
     * <p class="title">
     * <b>Attributes returned in a createServer response for Chef</b>
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>CHEF_AUTOMATE_PIVOTAL_KEY</code>: A base64-encoded RSA private key
     * that is generated by AWS OpsWorks for Chef Automate. This private key is
     * required to access the Chef API.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>CHEF_STARTER_KIT</code>: A base64-encoded ZIP file. The ZIP file
     * contains a Chef starter kit, which includes a README, a configuration
     * file, and the required RSA private key. Save this file, unzip it, and
     * then change to the directory where you've unzipped the file contents.
     * From this directory, you can run Knife commands.
     * </p>
     * </li>
     * </ul>
     * <p class="title">
     * <b>Attributes returned in a createServer response for Puppet</b>
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>PUPPET_STARTER_KIT</code>: A base64-encoded ZIP file. The ZIP file
     * contains a Puppet starter kit, including a README and a required private
     * key. Save this file, unzip it, and then change to the directory where
     * you've unzipped the file contents.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>PUPPET_ADMIN_PASSWORD</code>: An administrator password that you
     * can use to sign in to the Puppet Enterprise console after the server is
     * online.
     * </p>
     * </li>
     * </ul>
     */
    private java.util.List<EngineAttribute> engineAttributes;

    /**
     * <p>
     * The engine version of the server. For a Chef server, the valid value for
     * EngineVersion is currently <code>12</code>. For a Puppet server, the
     * valid value is <code>2017</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String engineVersion;

    /**
     * <p>
     * The instance profile ARN of the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String instanceProfileArn;

    /**
     * <p>
     * The instance type for the server, as specified in the CloudFormation
     * stack. This might not be the same instance type that is shown in the EC2
     * console.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String instanceType;

    /**
     * <p>
     * The key pair associated with the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String keyPair;

    /**
     * <p>
     * The status of the most recent server maintenance run. Shows
     * <code>SUCCESS</code> or <code>FAILED</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>SUCCESS, FAILED
     */
    private String maintenanceStatus;

    /**
     * <p>
     * The preferred maintenance period specified for the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern:
     * </b>^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
     * <br/>
     */
    private String preferredMaintenanceWindow;

    /**
     * <p>
     * The preferred backup period specified for the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern:
     * </b>^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
     * <br/>
     */
    private String preferredBackupWindow;

    /**
     * <p>
     * The security group IDs for the server, as specified in the CloudFormation
     * stack. These might not be the same security groups that are shown in the
     * EC2 console.
     * </p>
     */
    private java.util.List<String> securityGroupIds;

    /**
     * <p>
     * The service role ARN used to create the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String serviceRoleArn;

    /**
     * <p>
     * The server's status. This field displays the states of actions in
     * progress, such as creating, running, or backing up the server, as well as
     * the server's health state.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>BACKING_UP, CONNECTION_LOST, CREATING, DELETING,
     * MODIFYING, FAILED, HEALTHY, RUNNING, RESTORING, SETUP, UNDER_MAINTENANCE,
     * UNHEALTHY, TERMINATED
     */
    private String status;

    /**
     * <p>
     * Depending on the server status, this field has either a human-readable
     * message (such as a create or backup error), or an escaped block of JSON
     * (used for health check results).
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String statusReason;

    /**
     * <p>
     * The subnet IDs specified in a CreateServer request.
     * </p>
     */
    private java.util.List<String> subnetIds;

    /**
     * <p>
     * The ARN of the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     */
    private String serverArn;

    /**
     * <p>
     * Associate a public IP address with a server that you are launching.
     * </p>
     *
     * @return <p>
     *         Associate a public IP address with a server that you are
     *         launching.
     *         </p>
     */
    public Boolean isAssociatePublicIpAddress() {
        return associatePublicIpAddress;
    }

    /**
     * <p>
     * Associate a public IP address with a server that you are launching.
     * </p>
     *
     * @return <p>
     *         Associate a public IP address with a server that you are
     *         launching.
     *         </p>
     */
    public Boolean getAssociatePublicIpAddress() {
        return associatePublicIpAddress;
    }

    /**
     * <p>
     * Associate a public IP address with a server that you are launching.
     * </p>
     *
     * @param associatePublicIpAddress <p>
     *            Associate a public IP address with a server that you are
     *            launching.
     *            </p>
     */
    public void setAssociatePublicIpAddress(Boolean associatePublicIpAddress) {
        this.associatePublicIpAddress = associatePublicIpAddress;
    }

    /**
     * <p>
     * Associate a public IP address with a server that you are launching.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param associatePublicIpAddress <p>
     *            Associate a public IP address with a server that you are
     *            launching.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withAssociatePublicIpAddress(Boolean associatePublicIpAddress) {
        this.associatePublicIpAddress = associatePublicIpAddress;
        return this;
    }

    /**
     * <p>
     * The number of automated backups to keep.
     * </p>
     *
     * @return <p>
     *         The number of automated backups to keep.
     *         </p>
     */
    public Integer getBackupRetentionCount() {
        return backupRetentionCount;
    }

    /**
     * <p>
     * The number of automated backups to keep.
     * </p>
     *
     * @param backupRetentionCount <p>
     *            The number of automated backups to keep.
     *            </p>
     */
    public void setBackupRetentionCount(Integer backupRetentionCount) {
        this.backupRetentionCount = backupRetentionCount;
    }

    /**
     * <p>
     * The number of automated backups to keep.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param backupRetentionCount <p>
     *            The number of automated backups to keep.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withBackupRetentionCount(Integer backupRetentionCount) {
        this.backupRetentionCount = backupRetentionCount;
        return this;
    }

    /**
     * <p>
     * The name of the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         The name of the server.
     *         </p>
     */
    public String getServerName() {
        return serverName;
    }

    /**
     * <p>
     * The name of the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param serverName <p>
     *            The name of the server.
     *            </p>
     */
    public void setServerName(String serverName) {
        this.serverName = serverName;
    }

    /**
     * <p>
     * The name of the server.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param serverName <p>
     *            The name of the server.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withServerName(String serverName) {
        this.serverName = serverName;
        return this;
    }

    /**
     * <p>
     * Time stamp of server creation. Example
     * <code>2016-07-29T13:38:47.520Z</code>
     * </p>
     *
     * @return <p>
     *         Time stamp of server creation. Example
     *         <code>2016-07-29T13:38:47.520Z</code>
     *         </p>
     */
    public java.util.Date getCreatedAt() {
        return createdAt;
    }

    /**
     * <p>
     * Time stamp of server creation. Example
     * <code>2016-07-29T13:38:47.520Z</code>
     * </p>
     *
     * @param createdAt <p>
     *            Time stamp of server creation. Example
     *            <code>2016-07-29T13:38:47.520Z</code>
     *            </p>
     */
    public void setCreatedAt(java.util.Date createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * <p>
     * Time stamp of server creation. Example
     * <code>2016-07-29T13:38:47.520Z</code>
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param createdAt <p>
     *            Time stamp of server creation. Example
     *            <code>2016-07-29T13:38:47.520Z</code>
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withCreatedAt(java.util.Date createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * <p>
     * The ARN of the CloudFormation stack that was used to create the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         The ARN of the CloudFormation stack that was used to create the
     *         server.
     *         </p>
     */
    public String getCloudFormationStackArn() {
        return cloudFormationStackArn;
    }

    /**
     * <p>
     * The ARN of the CloudFormation stack that was used to create the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param cloudFormationStackArn <p>
     *            The ARN of the CloudFormation stack that was used to create
     *            the server.
     *            </p>
     */
    public void setCloudFormationStackArn(String cloudFormationStackArn) {
        this.cloudFormationStackArn = cloudFormationStackArn;
    }

    /**
     * <p>
     * The ARN of the CloudFormation stack that was used to create the server.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param cloudFormationStackArn <p>
     *            The ARN of the CloudFormation stack that was used to create
     *            the server.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withCloudFormationStackArn(String cloudFormationStackArn) {
        this.cloudFormationStackArn = cloudFormationStackArn;
        return this;
    }

    /**
     * <p>
     * An optional public endpoint of a server, such as
     * <code>https://aws.my-company.com</code>. You cannot access the server by
     * using the <code>Endpoint</code> value if the server has a
     * <code>CustomDomain</code> specified.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 253<br/>
     * <b>Pattern:
     * </b>^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9
     * -]{1,62}[A-Za-z0-9])$<br/>
     *
     * @return <p>
     *         An optional public endpoint of a server, such as
     *         <code>https://aws.my-company.com</code>. You cannot access the
     *         server by using the <code>Endpoint</code> value if the server has
     *         a <code>CustomDomain</code> specified.
     *         </p>
     */
    public String getCustomDomain() {
        return customDomain;
    }

    /**
     * <p>
     * An optional public endpoint of a server, such as
     * <code>https://aws.my-company.com</code>. You cannot access the server by
     * using the <code>Endpoint</code> value if the server has a
     * <code>CustomDomain</code> specified.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 253<br/>
     * <b>Pattern:
     * </b>^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9
     * -]{1,62}[A-Za-z0-9])$<br/>
     *
     * @param customDomain <p>
     *            An optional public endpoint of a server, such as
     *            <code>https://aws.my-company.com</code>. You cannot access the
     *            server by using the <code>Endpoint</code> value if the server
     *            has a <code>CustomDomain</code> specified.
     *            </p>
     */
    public void setCustomDomain(String customDomain) {
        this.customDomain = customDomain;
    }

    /**
     * <p>
     * An optional public endpoint of a server, such as
     * <code>https://aws.my-company.com</code>. You cannot access the server by
     * using the <code>Endpoint</code> value if the server has a
     * <code>CustomDomain</code> specified.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 253<br/>
     * <b>Pattern:
     * </b>^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9
     * -]{1,62}[A-Za-z0-9])$<br/>
     *
     * @param customDomain <p>
     *            An optional public endpoint of a server, such as
     *            <code>https://aws.my-company.com</code>. You cannot access the
     *            server by using the <code>Endpoint</code> value if the server
     *            has a <code>CustomDomain</code> specified.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withCustomDomain(String customDomain) {
        this.customDomain = customDomain;
        return this;
    }

    /**
     * <p>
     * Disables automated backups. The number of stored backups is dependent on
     * the value of PreferredBackupCount.
     * </p>
     *
     * @return <p>
     *         Disables automated backups. The number of stored backups is
     *         dependent on the value of PreferredBackupCount.
     *         </p>
     */
    public Boolean isDisableAutomatedBackup() {
        return disableAutomatedBackup;
    }

    /**
     * <p>
     * Disables automated backups. The number of stored backups is dependent on
     * the value of PreferredBackupCount.
     * </p>
     *
     * @return <p>
     *         Disables automated backups. The number of stored backups is
     *         dependent on the value of PreferredBackupCount.
     *         </p>
     */
    public Boolean getDisableAutomatedBackup() {
        return disableAutomatedBackup;
    }

    /**
     * <p>
     * Disables automated backups. The number of stored backups is dependent on
     * the value of PreferredBackupCount.
     * </p>
     *
     * @param disableAutomatedBackup <p>
     *            Disables automated backups. The number of stored backups is
     *            dependent on the value of PreferredBackupCount.
     *            </p>
     */
    public void setDisableAutomatedBackup(Boolean disableAutomatedBackup) {
        this.disableAutomatedBackup = disableAutomatedBackup;
    }

    /**
     * <p>
     * Disables automated backups. The number of stored backups is dependent on
     * the value of PreferredBackupCount.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param disableAutomatedBackup <p>
     *            Disables automated backups. The number of stored backups is
     *            dependent on the value of PreferredBackupCount.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withDisableAutomatedBackup(Boolean disableAutomatedBackup) {
        this.disableAutomatedBackup = disableAutomatedBackup;
        return this;
    }

    /**
     * <p>
     * A DNS name that can be used to access the engine. Example:
     * <code>myserver-asdfghjkl.us-east-1.opsworks.io</code>. You cannot access
     * the server by using the <code>Endpoint</code> value if the server has a
     * <code>CustomDomain</code> specified.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         A DNS name that can be used to access the engine. Example:
     *         <code>myserver-asdfghjkl.us-east-1.opsworks.io</code>. You cannot
     *         access the server by using the <code>Endpoint</code> value if the
     *         server has a <code>CustomDomain</code> specified.
     *         </p>
     */
    public String getEndpoint() {
        return endpoint;
    }

    /**
     * <p>
     * A DNS name that can be used to access the engine. Example:
     * <code>myserver-asdfghjkl.us-east-1.opsworks.io</code>. You cannot access
     * the server by using the <code>Endpoint</code> value if the server has a
     * <code>CustomDomain</code> specified.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param endpoint <p>
     *            A DNS name that can be used to access the engine. Example:
     *            <code>myserver-asdfghjkl.us-east-1.opsworks.io</code>. You
     *            cannot access the server by using the <code>Endpoint</code>
     *            value if the server has a <code>CustomDomain</code> specified.
     *            </p>
     */
    public void setEndpoint(String endpoint) {
        this.endpoint = endpoint;
    }

    /**
     * <p>
     * A DNS name that can be used to access the engine. Example:
     * <code>myserver-asdfghjkl.us-east-1.opsworks.io</code>. You cannot access
     * the server by using the <code>Endpoint</code> value if the server has a
     * <code>CustomDomain</code> specified.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param endpoint <p>
     *            A DNS name that can be used to access the engine. Example:
     *            <code>myserver-asdfghjkl.us-east-1.opsworks.io</code>. You
     *            cannot access the server by using the <code>Endpoint</code>
     *            value if the server has a <code>CustomDomain</code> specified.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * <p>
     * The engine type of the server. Valid values in this release include
     * <code>ChefAutomate</code> and <code>Puppet</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         The engine type of the server. Valid values in this release
     *         include <code>ChefAutomate</code> and <code>Puppet</code>.
     *         </p>
     */
    public String getEngine() {
        return engine;
    }

    /**
     * <p>
     * The engine type of the server. Valid values in this release include
     * <code>ChefAutomate</code> and <code>Puppet</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param engine <p>
     *            The engine type of the server. Valid values in this release
     *            include <code>ChefAutomate</code> and <code>Puppet</code>.
     *            </p>
     */
    public void setEngine(String engine) {
        this.engine = engine;
    }

    /**
     * <p>
     * The engine type of the server. Valid values in this release include
     * <code>ChefAutomate</code> and <code>Puppet</code>.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param engine <p>
     *            The engine type of the server. Valid values in this release
     *            include <code>ChefAutomate</code> and <code>Puppet</code>.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withEngine(String engine) {
        this.engine = engine;
        return this;
    }

    /**
     * <p>
     * The engine model of the server. Valid values in this release include
     * <code>Monolithic</code> for Puppet and <code>Single</code> for Chef.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         The engine model of the server. Valid values in this release
     *         include <code>Monolithic</code> for Puppet and
     *         <code>Single</code> for Chef.
     *         </p>
     */
    public String getEngineModel() {
        return engineModel;
    }

    /**
     * <p>
     * The engine model of the server. Valid values in this release include
     * <code>Monolithic</code> for Puppet and <code>Single</code> for Chef.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param engineModel <p>
     *            The engine model of the server. Valid values in this release
     *            include <code>Monolithic</code> for Puppet and
     *            <code>Single</code> for Chef.
     *            </p>
     */
    public void setEngineModel(String engineModel) {
        this.engineModel = engineModel;
    }

    /**
     * <p>
     * The engine model of the server. Valid values in this release include
     * <code>Monolithic</code> for Puppet and <code>Single</code> for Chef.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param engineModel <p>
     *            The engine model of the server. Valid values in this release
     *            include <code>Monolithic</code> for Puppet and
     *            <code>Single</code> for Chef.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withEngineModel(String engineModel) {
        this.engineModel = engineModel;
        return this;
    }

    /**
     * <p>
     * The response of a createServer() request returns the master credential to
     * access the server in EngineAttributes. These credentials are not stored
     * by AWS OpsWorks CM; they are returned only as part of the result of
     * createServer().
     * </p>
     * <p class="title">
     * <b>Attributes returned in a createServer response for Chef</b>
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>CHEF_AUTOMATE_PIVOTAL_KEY</code>: A base64-encoded RSA private key
     * that is generated by AWS OpsWorks for Chef Automate. This private key is
     * required to access the Chef API.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>CHEF_STARTER_KIT</code>: A base64-encoded ZIP file. The ZIP file
     * contains a Chef starter kit, which includes a README, a configuration
     * file, and the required RSA private key. Save this file, unzip it, and
     * then change to the directory where you've unzipped the file contents.
     * From this directory, you can run Knife commands.
     * </p>
     * </li>
     * </ul>
     * <p class="title">
     * <b>Attributes returned in a createServer response for Puppet</b>
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>PUPPET_STARTER_KIT</code>: A base64-encoded ZIP file. The ZIP file
     * contains a Puppet starter kit, including a README and a required private
     * key. Save this file, unzip it, and then change to the directory where
     * you've unzipped the file contents.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>PUPPET_ADMIN_PASSWORD</code>: An administrator password that you
     * can use to sign in to the Puppet Enterprise console after the server is
     * online.
     * </p>
     * </li>
     * </ul>
     *
     * @return <p>
     *         The response of a createServer() request returns the master
     *         credential to access the server in EngineAttributes. These
     *         credentials are not stored by AWS OpsWorks CM; they are returned
     *         only as part of the result of createServer().
     *         </p>
     *         <p class="title">
     *         <b>Attributes returned in a createServer response for Chef</b>
     *         </p>
     *         <ul>
     *         <li>
     *         <p>
     *         <code>CHEF_AUTOMATE_PIVOTAL_KEY</code>: A base64-encoded RSA
     *         private key that is generated by AWS OpsWorks for Chef Automate.
     *         This private key is required to access the Chef API.
     *         </p>
     *         </li>
     *         <li>
     *         <p>
     *         <code>CHEF_STARTER_KIT</code>: A base64-encoded ZIP file. The ZIP
     *         file contains a Chef starter kit, which includes a README, a
     *         configuration file, and the required RSA private key. Save this
     *         file, unzip it, and then change to the directory where you've
     *         unzipped the file contents. From this directory, you can run
     *         Knife commands.
     *         </p>
     *         </li>
     *         </ul>
     *         <p class="title">
     *         <b>Attributes returned in a createServer response for Puppet</b>
     *         </p>
     *         <ul>
     *         <li>
     *         <p>
     *         <code>PUPPET_STARTER_KIT</code>: A base64-encoded ZIP file. The
     *         ZIP file contains a Puppet starter kit, including a README and a
     *         required private key. Save this file, unzip it, and then change
     *         to the directory where you've unzipped the file contents.
     *         </p>
     *         </li>
     *         <li>
     *         <p>
     *         <code>PUPPET_ADMIN_PASSWORD</code>: An administrator password
     *         that you can use to sign in to the Puppet Enterprise console
     *         after the server is online.
     *         </p>
     *         </li>
     *         </ul>
     */
    public java.util.List<EngineAttribute> getEngineAttributes() {
        return engineAttributes;
    }

    /**
     * <p>
     * The response of a createServer() request returns the master credential to
     * access the server in EngineAttributes. These credentials are not stored
     * by AWS OpsWorks CM; they are returned only as part of the result of
     * createServer().
     * </p>
     * <p class="title">
     * <b>Attributes returned in a createServer response for Chef</b>
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>CHEF_AUTOMATE_PIVOTAL_KEY</code>: A base64-encoded RSA private key
     * that is generated by AWS OpsWorks for Chef Automate. This private key is
     * required to access the Chef API.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>CHEF_STARTER_KIT</code>: A base64-encoded ZIP file. The ZIP file
     * contains a Chef starter kit, which includes a README, a configuration
     * file, and the required RSA private key. Save this file, unzip it, and
     * then change to the directory where you've unzipped the file contents.
     * From this directory, you can run Knife commands.
     * </p>
     * </li>
     * </ul>
     * <p class="title">
     * <b>Attributes returned in a createServer response for Puppet</b>
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>PUPPET_STARTER_KIT</code>: A base64-encoded ZIP file. The ZIP file
     * contains a Puppet starter kit, including a README and a required private
     * key. Save this file, unzip it, and then change to the directory where
     * you've unzipped the file contents.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>PUPPET_ADMIN_PASSWORD</code>: An administrator password that you
     * can use to sign in to the Puppet Enterprise console after the server is
     * online.
     * </p>
     * </li>
     * </ul>
     *
     * @param engineAttributes <p>
     *            The response of a createServer() request returns the master
     *            credential to access the server in EngineAttributes. These
     *            credentials are not stored by AWS OpsWorks CM; they are
     *            returned only as part of the result of createServer().
     *            </p>
     *            <p class="title">
     *            <b>Attributes returned in a createServer response for Chef</b>
     *            </p>
     *            <ul>
     *            <li>
     *            <p>
     *            <code>CHEF_AUTOMATE_PIVOTAL_KEY</code>: A base64-encoded RSA
     *            private key that is generated by AWS OpsWorks for Chef
     *            Automate. This private key is required to access the Chef API.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>CHEF_STARTER_KIT</code>: A base64-encoded ZIP file. The
     *            ZIP file contains a Chef starter kit, which includes a README,
     *            a configuration file, and the required RSA private key. Save
     *            this file, unzip it, and then change to the directory where
     *            you've unzipped the file contents. From this directory, you
     *            can run Knife commands.
     *            </p>
     *            </li>
     *            </ul>
     *            <p class="title">
     *            <b>Attributes returned in a createServer response for
     *            Puppet</b>
     *            </p>
     *            <ul>
     *            <li>
     *            <p>
     *            <code>PUPPET_STARTER_KIT</code>: A base64-encoded ZIP file.
     *            The ZIP file contains a Puppet starter kit, including a README
     *            and a required private key. Save this file, unzip it, and then
     *            change to the directory where you've unzipped the file
     *            contents.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>PUPPET_ADMIN_PASSWORD</code>: An administrator password
     *            that you can use to sign in to the Puppet Enterprise console
     *            after the server is online.
     *            </p>
     *            </li>
     *            </ul>
     */
    public void setEngineAttributes(java.util.Collection<EngineAttribute> engineAttributes) {
        if (engineAttributes == null) {
            this.engineAttributes = null;
            return;
        }

        this.engineAttributes = new java.util.ArrayList<EngineAttribute>(engineAttributes);
    }

    /**
     * <p>
     * The response of a createServer() request returns the master credential to
     * access the server in EngineAttributes. These credentials are not stored
     * by AWS OpsWorks CM; they are returned only as part of the result of
     * createServer().
     * </p>
     * <p class="title">
     * <b>Attributes returned in a createServer response for Chef</b>
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>CHEF_AUTOMATE_PIVOTAL_KEY</code>: A base64-encoded RSA private key
     * that is generated by AWS OpsWorks for Chef Automate. This private key is
     * required to access the Chef API.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>CHEF_STARTER_KIT</code>: A base64-encoded ZIP file. The ZIP file
     * contains a Chef starter kit, which includes a README, a configuration
     * file, and the required RSA private key. Save this file, unzip it, and
     * then change to the directory where you've unzipped the file contents.
     * From this directory, you can run Knife commands.
     * </p>
     * </li>
     * </ul>
     * <p class="title">
     * <b>Attributes returned in a createServer response for Puppet</b>
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>PUPPET_STARTER_KIT</code>: A base64-encoded ZIP file. The ZIP file
     * contains a Puppet starter kit, including a README and a required private
     * key. Save this file, unzip it, and then change to the directory where
     * you've unzipped the file contents.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>PUPPET_ADMIN_PASSWORD</code>: An administrator password that you
     * can use to sign in to the Puppet Enterprise console after the server is
     * online.
     * </p>
     * </li>
     * </ul>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param engineAttributes <p>
     *            The response of a createServer() request returns the master
     *            credential to access the server in EngineAttributes. These
     *            credentials are not stored by AWS OpsWorks CM; they are
     *            returned only as part of the result of createServer().
     *            </p>
     *            <p class="title">
     *            <b>Attributes returned in a createServer response for Chef</b>
     *            </p>
     *            <ul>
     *            <li>
     *            <p>
     *            <code>CHEF_AUTOMATE_PIVOTAL_KEY</code>: A base64-encoded RSA
     *            private key that is generated by AWS OpsWorks for Chef
     *            Automate. This private key is required to access the Chef API.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>CHEF_STARTER_KIT</code>: A base64-encoded ZIP file. The
     *            ZIP file contains a Chef starter kit, which includes a README,
     *            a configuration file, and the required RSA private key. Save
     *            this file, unzip it, and then change to the directory where
     *            you've unzipped the file contents. From this directory, you
     *            can run Knife commands.
     *            </p>
     *            </li>
     *            </ul>
     *            <p class="title">
     *            <b>Attributes returned in a createServer response for
     *            Puppet</b>
     *            </p>
     *            <ul>
     *            <li>
     *            <p>
     *            <code>PUPPET_STARTER_KIT</code>: A base64-encoded ZIP file.
     *            The ZIP file contains a Puppet starter kit, including a README
     *            and a required private key. Save this file, unzip it, and then
     *            change to the directory where you've unzipped the file
     *            contents.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>PUPPET_ADMIN_PASSWORD</code>: An administrator password
     *            that you can use to sign in to the Puppet Enterprise console
     *            after the server is online.
     *            </p>
     *            </li>
     *            </ul>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withEngineAttributes(EngineAttribute... engineAttributes) {
        if (getEngineAttributes() == null) {
            this.engineAttributes = new java.util.ArrayList<EngineAttribute>(
                    engineAttributes.length);
        }
        for (EngineAttribute value : engineAttributes) {
            this.engineAttributes.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The response of a createServer() request returns the master credential to
     * access the server in EngineAttributes. These credentials are not stored
     * by AWS OpsWorks CM; they are returned only as part of the result of
     * createServer().
     * </p>
     * <p class="title">
     * <b>Attributes returned in a createServer response for Chef</b>
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>CHEF_AUTOMATE_PIVOTAL_KEY</code>: A base64-encoded RSA private key
     * that is generated by AWS OpsWorks for Chef Automate. This private key is
     * required to access the Chef API.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>CHEF_STARTER_KIT</code>: A base64-encoded ZIP file. The ZIP file
     * contains a Chef starter kit, which includes a README, a configuration
     * file, and the required RSA private key. Save this file, unzip it, and
     * then change to the directory where you've unzipped the file contents.
     * From this directory, you can run Knife commands.
     * </p>
     * </li>
     * </ul>
     * <p class="title">
     * <b>Attributes returned in a createServer response for Puppet</b>
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>PUPPET_STARTER_KIT</code>: A base64-encoded ZIP file. The ZIP file
     * contains a Puppet starter kit, including a README and a required private
     * key. Save this file, unzip it, and then change to the directory where
     * you've unzipped the file contents.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>PUPPET_ADMIN_PASSWORD</code>: An administrator password that you
     * can use to sign in to the Puppet Enterprise console after the server is
     * online.
     * </p>
     * </li>
     * </ul>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param engineAttributes <p>
     *            The response of a createServer() request returns the master
     *            credential to access the server in EngineAttributes. These
     *            credentials are not stored by AWS OpsWorks CM; they are
     *            returned only as part of the result of createServer().
     *            </p>
     *            <p class="title">
     *            <b>Attributes returned in a createServer response for Chef</b>
     *            </p>
     *            <ul>
     *            <li>
     *            <p>
     *            <code>CHEF_AUTOMATE_PIVOTAL_KEY</code>: A base64-encoded RSA
     *            private key that is generated by AWS OpsWorks for Chef
     *            Automate. This private key is required to access the Chef API.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>CHEF_STARTER_KIT</code>: A base64-encoded ZIP file. The
     *            ZIP file contains a Chef starter kit, which includes a README,
     *            a configuration file, and the required RSA private key. Save
     *            this file, unzip it, and then change to the directory where
     *            you've unzipped the file contents. From this directory, you
     *            can run Knife commands.
     *            </p>
     *            </li>
     *            </ul>
     *            <p class="title">
     *            <b>Attributes returned in a createServer response for
     *            Puppet</b>
     *            </p>
     *            <ul>
     *            <li>
     *            <p>
     *            <code>PUPPET_STARTER_KIT</code>: A base64-encoded ZIP file.
     *            The ZIP file contains a Puppet starter kit, including a README
     *            and a required private key. Save this file, unzip it, and then
     *            change to the directory where you've unzipped the file
     *            contents.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>PUPPET_ADMIN_PASSWORD</code>: An administrator password
     *            that you can use to sign in to the Puppet Enterprise console
     *            after the server is online.
     *            </p>
     *            </li>
     *            </ul>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withEngineAttributes(java.util.Collection<EngineAttribute> engineAttributes) {
        setEngineAttributes(engineAttributes);
        return this;
    }

    /**
     * <p>
     * The engine version of the server. For a Chef server, the valid value for
     * EngineVersion is currently <code>12</code>. For a Puppet server, the
     * valid value is <code>2017</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         The engine version of the server. For a Chef server, the valid
     *         value for EngineVersion is currently <code>12</code>. For a
     *         Puppet server, the valid value is <code>2017</code>.
     *         </p>
     */
    public String getEngineVersion() {
        return engineVersion;
    }

    /**
     * <p>
     * The engine version of the server. For a Chef server, the valid value for
     * EngineVersion is currently <code>12</code>. For a Puppet server, the
     * valid value is <code>2017</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param engineVersion <p>
     *            The engine version of the server. For a Chef server, the valid
     *            value for EngineVersion is currently <code>12</code>. For a
     *            Puppet server, the valid value is <code>2017</code>.
     *            </p>
     */
    public void setEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
    }

    /**
     * <p>
     * The engine version of the server. For a Chef server, the valid value for
     * EngineVersion is currently <code>12</code>. For a Puppet server, the
     * valid value is <code>2017</code>.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param engineVersion <p>
     *            The engine version of the server. For a Chef server, the valid
     *            value for EngineVersion is currently <code>12</code>. For a
     *            Puppet server, the valid value is <code>2017</code>.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }

    /**
     * <p>
     * The instance profile ARN of the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         The instance profile ARN of the server.
     *         </p>
     */
    public String getInstanceProfileArn() {
        return instanceProfileArn;
    }

    /**
     * <p>
     * The instance profile ARN of the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param instanceProfileArn <p>
     *            The instance profile ARN of the server.
     *            </p>
     */
    public void setInstanceProfileArn(String instanceProfileArn) {
        this.instanceProfileArn = instanceProfileArn;
    }

    /**
     * <p>
     * The instance profile ARN of the server.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param instanceProfileArn <p>
     *            The instance profile ARN of the server.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withInstanceProfileArn(String instanceProfileArn) {
        this.instanceProfileArn = instanceProfileArn;
        return this;
    }

    /**
     * <p>
     * The instance type for the server, as specified in the CloudFormation
     * stack. This might not be the same instance type that is shown in the EC2
     * console.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         The instance type for the server, as specified in the
     *         CloudFormation stack. This might not be the same instance type
     *         that is shown in the EC2 console.
     *         </p>
     */
    public String getInstanceType() {
        return instanceType;
    }

    /**
     * <p>
     * The instance type for the server, as specified in the CloudFormation
     * stack. This might not be the same instance type that is shown in the EC2
     * console.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param instanceType <p>
     *            The instance type for the server, as specified in the
     *            CloudFormation stack. This might not be the same instance type
     *            that is shown in the EC2 console.
     *            </p>
     */
    public void setInstanceType(String instanceType) {
        this.instanceType = instanceType;
    }

    /**
     * <p>
     * The instance type for the server, as specified in the CloudFormation
     * stack. This might not be the same instance type that is shown in the EC2
     * console.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param instanceType <p>
     *            The instance type for the server, as specified in the
     *            CloudFormation stack. This might not be the same instance type
     *            that is shown in the EC2 console.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withInstanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }

    /**
     * <p>
     * The key pair associated with the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         The key pair associated with the server.
     *         </p>
     */
    public String getKeyPair() {
        return keyPair;
    }

    /**
     * <p>
     * The key pair associated with the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param keyPair <p>
     *            The key pair associated with the server.
     *            </p>
     */
    public void setKeyPair(String keyPair) {
        this.keyPair = keyPair;
    }

    /**
     * <p>
     * The key pair associated with the server.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param keyPair <p>
     *            The key pair associated with the server.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withKeyPair(String keyPair) {
        this.keyPair = keyPair;
        return this;
    }

    /**
     * <p>
     * The status of the most recent server maintenance run. Shows
     * <code>SUCCESS</code> or <code>FAILED</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>SUCCESS, FAILED
     *
     * @return <p>
     *         The status of the most recent server maintenance run. Shows
     *         <code>SUCCESS</code> or <code>FAILED</code>.
     *         </p>
     * @see MaintenanceStatus
     */
    public String getMaintenanceStatus() {
        return maintenanceStatus;
    }

    /**
     * <p>
     * The status of the most recent server maintenance run. Shows
     * <code>SUCCESS</code> or <code>FAILED</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>SUCCESS, FAILED
     *
     * @param maintenanceStatus <p>
     *            The status of the most recent server maintenance run. Shows
     *            <code>SUCCESS</code> or <code>FAILED</code>.
     *            </p>
     * @see MaintenanceStatus
     */
    public void setMaintenanceStatus(String maintenanceStatus) {
        this.maintenanceStatus = maintenanceStatus;
    }

    /**
     * <p>
     * The status of the most recent server maintenance run. Shows
     * <code>SUCCESS</code> or <code>FAILED</code>.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>SUCCESS, FAILED
     *
     * @param maintenanceStatus <p>
     *            The status of the most recent server maintenance run. Shows
     *            <code>SUCCESS</code> or <code>FAILED</code>.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     * @see MaintenanceStatus
     */
    public Server withMaintenanceStatus(String maintenanceStatus) {
        this.maintenanceStatus = maintenanceStatus;
        return this;
    }

    /**
     * <p>
     * The status of the most recent server maintenance run. Shows
     * <code>SUCCESS</code> or <code>FAILED</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>SUCCESS, FAILED
     *
     * @param maintenanceStatus <p>
     *            The status of the most recent server maintenance run. Shows
     *            <code>SUCCESS</code> or <code>FAILED</code>.
     *            </p>
     * @see MaintenanceStatus
     */
    public void setMaintenanceStatus(MaintenanceStatus maintenanceStatus) {
        this.maintenanceStatus = maintenanceStatus.toString();
    }

    /**
     * <p>
     * The status of the most recent server maintenance run. Shows
     * <code>SUCCESS</code> or <code>FAILED</code>.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>SUCCESS, FAILED
     *
     * @param maintenanceStatus <p>
     *            The status of the most recent server maintenance run. Shows
     *            <code>SUCCESS</code> or <code>FAILED</code>.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     * @see MaintenanceStatus
     */
    public Server withMaintenanceStatus(MaintenanceStatus maintenanceStatus) {
        this.maintenanceStatus = maintenanceStatus.toString();
        return this;
    }

    /**
     * <p>
     * The preferred maintenance period specified for the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern:
     * </b>^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
     * <br/>
     *
     * @return <p>
     *         The preferred maintenance period specified for the server.
     *         </p>
     */
    public String getPreferredMaintenanceWindow() {
        return preferredMaintenanceWindow;
    }

    /**
     * <p>
     * The preferred maintenance period specified for the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern:
     * </b>^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
     * <br/>
     *
     * @param preferredMaintenanceWindow <p>
     *            The preferred maintenance period specified for the server.
     *            </p>
     */
    public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    }

    /**
     * <p>
     * The preferred maintenance period specified for the server.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern:
     * </b>^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
     * <br/>
     *
     * @param preferredMaintenanceWindow <p>
     *            The preferred maintenance period specified for the server.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        return this;
    }

    /**
     * <p>
     * The preferred backup period specified for the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern:
     * </b>^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
     * <br/>
     *
     * @return <p>
     *         The preferred backup period specified for the server.
     *         </p>
     */
    public String getPreferredBackupWindow() {
        return preferredBackupWindow;
    }

    /**
     * <p>
     * The preferred backup period specified for the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern:
     * </b>^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
     * <br/>
     *
     * @param preferredBackupWindow <p>
     *            The preferred backup period specified for the server.
     *            </p>
     */
    public void setPreferredBackupWindow(String preferredBackupWindow) {
        this.preferredBackupWindow = preferredBackupWindow;
    }

    /**
     * <p>
     * The preferred backup period specified for the server.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern:
     * </b>^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
     * <br/>
     *
     * @param preferredBackupWindow <p>
     *            The preferred backup period specified for the server.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withPreferredBackupWindow(String preferredBackupWindow) {
        this.preferredBackupWindow = preferredBackupWindow;
        return this;
    }

    /**
     * <p>
     * The security group IDs for the server, as specified in the CloudFormation
     * stack. These might not be the same security groups that are shown in the
     * EC2 console.
     * </p>
     *
     * @return <p>
     *         The security group IDs for the server, as specified in the
     *         CloudFormation stack. These might not be the same security groups
     *         that are shown in the EC2 console.
     *         </p>
     */
    public java.util.List<String> getSecurityGroupIds() {
        return securityGroupIds;
    }

    /**
     * <p>
     * The security group IDs for the server, as specified in the CloudFormation
     * stack. These might not be the same security groups that are shown in the
     * EC2 console.
     * </p>
     *
     * @param securityGroupIds <p>
     *            The security group IDs for the server, as specified in the
     *            CloudFormation stack. These might not be the same security
     *            groups that are shown in the EC2 console.
     *            </p>
     */
    public void setSecurityGroupIds(java.util.Collection<String> securityGroupIds) {
        if (securityGroupIds == null) {
            this.securityGroupIds = null;
            return;
        }

        this.securityGroupIds = new java.util.ArrayList<String>(securityGroupIds);
    }

    /**
     * <p>
     * The security group IDs for the server, as specified in the CloudFormation
     * stack. These might not be the same security groups that are shown in the
     * EC2 console.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param securityGroupIds <p>
     *            The security group IDs for the server, as specified in the
     *            CloudFormation stack. These might not be the same security
     *            groups that are shown in the EC2 console.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withSecurityGroupIds(String... securityGroupIds) {
        if (getSecurityGroupIds() == null) {
            this.securityGroupIds = new java.util.ArrayList<String>(securityGroupIds.length);
        }
        for (String value : securityGroupIds) {
            this.securityGroupIds.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The security group IDs for the server, as specified in the CloudFormation
     * stack. These might not be the same security groups that are shown in the
     * EC2 console.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param securityGroupIds <p>
     *            The security group IDs for the server, as specified in the
     *            CloudFormation stack. These might not be the same security
     *            groups that are shown in the EC2 console.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withSecurityGroupIds(java.util.Collection<String> securityGroupIds) {
        setSecurityGroupIds(securityGroupIds);
        return this;
    }

    /**
     * <p>
     * The service role ARN used to create the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         The service role ARN used to create the server.
     *         </p>
     */
    public String getServiceRoleArn() {
        return serviceRoleArn;
    }

    /**
     * <p>
     * The service role ARN used to create the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param serviceRoleArn <p>
     *            The service role ARN used to create the server.
     *            </p>
     */
    public void setServiceRoleArn(String serviceRoleArn) {
        this.serviceRoleArn = serviceRoleArn;
    }

    /**
     * <p>
     * The service role ARN used to create the server.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param serviceRoleArn <p>
     *            The service role ARN used to create the server.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withServiceRoleArn(String serviceRoleArn) {
        this.serviceRoleArn = serviceRoleArn;
        return this;
    }

    /**
     * <p>
     * The server's status. This field displays the states of actions in
     * progress, such as creating, running, or backing up the server, as well as
     * the server's health state.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>BACKING_UP, CONNECTION_LOST, CREATING, DELETING,
     * MODIFYING, FAILED, HEALTHY, RUNNING, RESTORING, SETUP, UNDER_MAINTENANCE,
     * UNHEALTHY, TERMINATED
     *
     * @return <p>
     *         The server's status. This field displays the states of actions in
     *         progress, such as creating, running, or backing up the server, as
     *         well as the server's health state.
     *         </p>
     * @see ServerStatus
     */
    public String getStatus() {
        return status;
    }

    /**
     * <p>
     * The server's status. This field displays the states of actions in
     * progress, such as creating, running, or backing up the server, as well as
     * the server's health state.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>BACKING_UP, CONNECTION_LOST, CREATING, DELETING,
     * MODIFYING, FAILED, HEALTHY, RUNNING, RESTORING, SETUP, UNDER_MAINTENANCE,
     * UNHEALTHY, TERMINATED
     *
     * @param status <p>
     *            The server's status. This field displays the states of actions
     *            in progress, such as creating, running, or backing up the
     *            server, as well as the server's health state.
     *            </p>
     * @see ServerStatus
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * <p>
     * The server's status. This field displays the states of actions in
     * progress, such as creating, running, or backing up the server, as well as
     * the server's health state.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>BACKING_UP, CONNECTION_LOST, CREATING, DELETING,
     * MODIFYING, FAILED, HEALTHY, RUNNING, RESTORING, SETUP, UNDER_MAINTENANCE,
     * UNHEALTHY, TERMINATED
     *
     * @param status <p>
     *            The server's status. This field displays the states of actions
     *            in progress, such as creating, running, or backing up the
     *            server, as well as the server's health state.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     * @see ServerStatus
     */
    public Server withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * <p>
     * The server's status. This field displays the states of actions in
     * progress, such as creating, running, or backing up the server, as well as
     * the server's health state.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>BACKING_UP, CONNECTION_LOST, CREATING, DELETING,
     * MODIFYING, FAILED, HEALTHY, RUNNING, RESTORING, SETUP, UNDER_MAINTENANCE,
     * UNHEALTHY, TERMINATED
     *
     * @param status <p>
     *            The server's status. This field displays the states of actions
     *            in progress, such as creating, running, or backing up the
     *            server, as well as the server's health state.
     *            </p>
     * @see ServerStatus
     */
    public void setStatus(ServerStatus status) {
        this.status = status.toString();
    }

    /**
     * <p>
     * The server's status. This field displays the states of actions in
     * progress, such as creating, running, or backing up the server, as well as
     * the server's health state.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>BACKING_UP, CONNECTION_LOST, CREATING, DELETING,
     * MODIFYING, FAILED, HEALTHY, RUNNING, RESTORING, SETUP, UNDER_MAINTENANCE,
     * UNHEALTHY, TERMINATED
     *
     * @param status <p>
     *            The server's status. This field displays the states of actions
     *            in progress, such as creating, running, or backing up the
     *            server, as well as the server's health state.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     * @see ServerStatus
     */
    public Server withStatus(ServerStatus status) {
        this.status = status.toString();
        return this;
    }

    /**
     * <p>
     * Depending on the server status, this field has either a human-readable
     * message (such as a create or backup error), or an escaped block of JSON
     * (used for health check results).
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         Depending on the server status, this field has either a
     *         human-readable message (such as a create or backup error), or an
     *         escaped block of JSON (used for health check results).
     *         </p>
     */
    public String getStatusReason() {
        return statusReason;
    }

    /**
     * <p>
     * Depending on the server status, this field has either a human-readable
     * message (such as a create or backup error), or an escaped block of JSON
     * (used for health check results).
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param statusReason <p>
     *            Depending on the server status, this field has either a
     *            human-readable message (such as a create or backup error), or
     *            an escaped block of JSON (used for health check results).
     *            </p>
     */
    public void setStatusReason(String statusReason) {
        this.statusReason = statusReason;
    }

    /**
     * <p>
     * Depending on the server status, this field has either a human-readable
     * message (such as a create or backup error), or an escaped block of JSON
     * (used for health check results).
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param statusReason <p>
     *            Depending on the server status, this field has either a
     *            human-readable message (such as a create or backup error), or
     *            an escaped block of JSON (used for health check results).
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withStatusReason(String statusReason) {
        this.statusReason = statusReason;
        return this;
    }

    /**
     * <p>
     * The subnet IDs specified in a CreateServer request.
     * </p>
     *
     * @return <p>
     *         The subnet IDs specified in a CreateServer request.
     *         </p>
     */
    public java.util.List<String> getSubnetIds() {
        return subnetIds;
    }

    /**
     * <p>
     * The subnet IDs specified in a CreateServer request.
     * </p>
     *
     * @param subnetIds <p>
     *            The subnet IDs specified in a CreateServer request.
     *            </p>
     */
    public void setSubnetIds(java.util.Collection<String> subnetIds) {
        if (subnetIds == null) {
            this.subnetIds = null;
            return;
        }

        this.subnetIds = new java.util.ArrayList<String>(subnetIds);
    }

    /**
     * <p>
     * The subnet IDs specified in a CreateServer request.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param subnetIds <p>
     *            The subnet IDs specified in a CreateServer request.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withSubnetIds(String... subnetIds) {
        if (getSubnetIds() == null) {
            this.subnetIds = new java.util.ArrayList<String>(subnetIds.length);
        }
        for (String value : subnetIds) {
            this.subnetIds.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The subnet IDs specified in a CreateServer request.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param subnetIds <p>
     *            The subnet IDs specified in a CreateServer request.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withSubnetIds(java.util.Collection<String> subnetIds) {
        setSubnetIds(subnetIds);
        return this;
    }

    /**
     * <p>
     * The ARN of the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @return <p>
     *         The ARN of the server.
     *         </p>
     */
    public String getServerArn() {
        return serverArn;
    }

    /**
     * <p>
     * The ARN of the server.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param serverArn <p>
     *            The ARN of the server.
     *            </p>
     */
    public void setServerArn(String serverArn) {
        this.serverArn = serverArn;
    }

    /**
     * <p>
     * The ARN of the server.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b> - 10000<br/>
     * <b>Pattern: </b>(?s).*<br/>
     *
     * @param serverArn <p>
     *            The ARN of the server.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public Server withServerArn(String serverArn) {
        this.serverArn = serverArn;
        return this;
    }

    /**
     * Returns a string representation of this object; useful for testing and
     * debugging.
     *
     * @return A string representation of this object.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("{");
        if (getAssociatePublicIpAddress() != null)
            sb.append("AssociatePublicIpAddress: " + getAssociatePublicIpAddress() + ",");
        if (getBackupRetentionCount() != null)
            sb.append("BackupRetentionCount: " + getBackupRetentionCount() + ",");
        if (getServerName() != null)
            sb.append("ServerName: " + getServerName() + ",");
        if (getCreatedAt() != null)
            sb.append("CreatedAt: " + getCreatedAt() + ",");
        if (getCloudFormationStackArn() != null)
            sb.append("CloudFormationStackArn: " + getCloudFormationStackArn() + ",");
        if (getCustomDomain() != null)
            sb.append("CustomDomain: " + getCustomDomain() + ",");
        if (getDisableAutomatedBackup() != null)
            sb.append("DisableAutomatedBackup: " + getDisableAutomatedBackup() + ",");
        if (getEndpoint() != null)
            sb.append("Endpoint: " + getEndpoint() + ",");
        if (getEngine() != null)
            sb.append("Engine: " + getEngine() + ",");
        if (getEngineModel() != null)
            sb.append("EngineModel: " + getEngineModel() + ",");
        if (getEngineAttributes() != null)
            sb.append("EngineAttributes: " + getEngineAttributes() + ",");
        if (getEngineVersion() != null)
            sb.append("EngineVersion: " + getEngineVersion() + ",");
        if (getInstanceProfileArn() != null)
            sb.append("InstanceProfileArn: " + getInstanceProfileArn() + ",");
        if (getInstanceType() != null)
            sb.append("InstanceType: " + getInstanceType() + ",");
        if (getKeyPair() != null)
            sb.append("KeyPair: " + getKeyPair() + ",");
        if (getMaintenanceStatus() != null)
            sb.append("MaintenanceStatus: " + getMaintenanceStatus() + ",");
        if (getPreferredMaintenanceWindow() != null)
            sb.append("PreferredMaintenanceWindow: " + getPreferredMaintenanceWindow() + ",");
        if (getPreferredBackupWindow() != null)
            sb.append("PreferredBackupWindow: " + getPreferredBackupWindow() + ",");
        if (getSecurityGroupIds() != null)
            sb.append("SecurityGroupIds: " + getSecurityGroupIds() + ",");
        if (getServiceRoleArn() != null)
            sb.append("ServiceRoleArn: " + getServiceRoleArn() + ",");
        if (getStatus() != null)
            sb.append("Status: " + getStatus() + ",");
        if (getStatusReason() != null)
            sb.append("StatusReason: " + getStatusReason() + ",");
        if (getSubnetIds() != null)
            sb.append("SubnetIds: " + getSubnetIds() + ",");
        if (getServerArn() != null)
            sb.append("ServerArn: " + getServerArn());
        sb.append("}");
        return sb.toString();
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int hashCode = 1;

        hashCode = prime
                * hashCode
                + ((getAssociatePublicIpAddress() == null) ? 0 : getAssociatePublicIpAddress()
                        .hashCode());
        hashCode = prime * hashCode
                + ((getBackupRetentionCount() == null) ? 0 : getBackupRetentionCount().hashCode());
        hashCode = prime * hashCode + ((getServerName() == null) ? 0 : getServerName().hashCode());
        hashCode = prime * hashCode + ((getCreatedAt() == null) ? 0 : getCreatedAt().hashCode());
        hashCode = prime
                * hashCode
                + ((getCloudFormationStackArn() == null) ? 0 : getCloudFormationStackArn()
                        .hashCode());
        hashCode = prime * hashCode
                + ((getCustomDomain() == null) ? 0 : getCustomDomain().hashCode());
        hashCode = prime
                * hashCode
                + ((getDisableAutomatedBackup() == null) ? 0 : getDisableAutomatedBackup()
                        .hashCode());
        hashCode = prime * hashCode + ((getEndpoint() == null) ? 0 : getEndpoint().hashCode());
        hashCode = prime * hashCode + ((getEngine() == null) ? 0 : getEngine().hashCode());
        hashCode = prime * hashCode
                + ((getEngineModel() == null) ? 0 : getEngineModel().hashCode());
        hashCode = prime * hashCode
                + ((getEngineAttributes() == null) ? 0 : getEngineAttributes().hashCode());
        hashCode = prime * hashCode
                + ((getEngineVersion() == null) ? 0 : getEngineVersion().hashCode());
        hashCode = prime * hashCode
                + ((getInstanceProfileArn() == null) ? 0 : getInstanceProfileArn().hashCode());
        hashCode = prime * hashCode
                + ((getInstanceType() == null) ? 0 : getInstanceType().hashCode());
        hashCode = prime * hashCode + ((getKeyPair() == null) ? 0 : getKeyPair().hashCode());
        hashCode = prime * hashCode
                + ((getMaintenanceStatus() == null) ? 0 : getMaintenanceStatus().hashCode());
        hashCode = prime
                * hashCode
                + ((getPreferredMaintenanceWindow() == null) ? 0 : getPreferredMaintenanceWindow()
                        .hashCode());
        hashCode = prime
                * hashCode
                + ((getPreferredBackupWindow() == null) ? 0 : getPreferredBackupWindow().hashCode());
        hashCode = prime * hashCode
                + ((getSecurityGroupIds() == null) ? 0 : getSecurityGroupIds().hashCode());
        hashCode = prime * hashCode
                + ((getServiceRoleArn() == null) ? 0 : getServiceRoleArn().hashCode());
        hashCode = prime * hashCode + ((getStatus() == null) ? 0 : getStatus().hashCode());
        hashCode = prime * hashCode
                + ((getStatusReason() == null) ? 0 : getStatusReason().hashCode());
        hashCode = prime * hashCode + ((getSubnetIds() == null) ? 0 : getSubnetIds().hashCode());
        hashCode = prime * hashCode + ((getServerArn() == null) ? 0 : getServerArn().hashCode());
        return hashCode;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;

        if (obj instanceof Server == false)
            return false;
        Server other = (Server) obj;

        if (other.getAssociatePublicIpAddress() == null
                ^ this.getAssociatePublicIpAddress() == null)
            return false;
        if (other.getAssociatePublicIpAddress() != null
                && other.getAssociatePublicIpAddress().equals(this.getAssociatePublicIpAddress()) == false)
            return false;
        if (other.getBackupRetentionCount() == null ^ this.getBackupRetentionCount() == null)
            return false;
        if (other.getBackupRetentionCount() != null
                && other.getBackupRetentionCount().equals(this.getBackupRetentionCount()) == false)
            return false;
        if (other.getServerName() == null ^ this.getServerName() == null)
            return false;
        if (other.getServerName() != null
                && other.getServerName().equals(this.getServerName()) == false)
            return false;
        if (other.getCreatedAt() == null ^ this.getCreatedAt() == null)
            return false;
        if (other.getCreatedAt() != null
                && other.getCreatedAt().equals(this.getCreatedAt()) == false)
            return false;
        if (other.getCloudFormationStackArn() == null ^ this.getCloudFormationStackArn() == null)
            return false;
        if (other.getCloudFormationStackArn() != null
                && other.getCloudFormationStackArn().equals(this.getCloudFormationStackArn()) == false)
            return false;
        if (other.getCustomDomain() == null ^ this.getCustomDomain() == null)
            return false;
        if (other.getCustomDomain() != null
                && other.getCustomDomain().equals(this.getCustomDomain()) == false)
            return false;
        if (other.getDisableAutomatedBackup() == null ^ this.getDisableAutomatedBackup() == null)
            return false;
        if (other.getDisableAutomatedBackup() != null
                && other.getDisableAutomatedBackup().equals(this.getDisableAutomatedBackup()) == false)
            return false;
        if (other.getEndpoint() == null ^ this.getEndpoint() == null)
            return false;
        if (other.getEndpoint() != null && other.getEndpoint().equals(this.getEndpoint()) == false)
            return false;
        if (other.getEngine() == null ^ this.getEngine() == null)
            return false;
        if (other.getEngine() != null && other.getEngine().equals(this.getEngine()) == false)
            return false;
        if (other.getEngineModel() == null ^ this.getEngineModel() == null)
            return false;
        if (other.getEngineModel() != null
                && other.getEngineModel().equals(this.getEngineModel()) == false)
            return false;
        if (other.getEngineAttributes() == null ^ this.getEngineAttributes() == null)
            return false;
        if (other.getEngineAttributes() != null
                && other.getEngineAttributes().equals(this.getEngineAttributes()) == false)
            return false;
        if (other.getEngineVersion() == null ^ this.getEngineVersion() == null)
            return false;
        if (other.getEngineVersion() != null
                && other.getEngineVersion().equals(this.getEngineVersion()) == false)
            return false;
        if (other.getInstanceProfileArn() == null ^ this.getInstanceProfileArn() == null)
            return false;
        if (other.getInstanceProfileArn() != null
                && other.getInstanceProfileArn().equals(this.getInstanceProfileArn()) == false)
            return false;
        if (other.getInstanceType() == null ^ this.getInstanceType() == null)
            return false;
        if (other.getInstanceType() != null
                && other.getInstanceType().equals(this.getInstanceType()) == false)
            return false;
        if (other.getKeyPair() == null ^ this.getKeyPair() == null)
            return false;
        if (other.getKeyPair() != null && other.getKeyPair().equals(this.getKeyPair()) == false)
            return false;
        if (other.getMaintenanceStatus() == null ^ this.getMaintenanceStatus() == null)
            return false;
        if (other.getMaintenanceStatus() != null
                && other.getMaintenanceStatus().equals(this.getMaintenanceStatus()) == false)
            return false;
        if (other.getPreferredMaintenanceWindow() == null
                ^ this.getPreferredMaintenanceWindow() == null)
            return false;
        if (other.getPreferredMaintenanceWindow() != null
                && other.getPreferredMaintenanceWindow().equals(
                        this.getPreferredMaintenanceWindow()) == false)
            return false;
        if (other.getPreferredBackupWindow() == null ^ this.getPreferredBackupWindow() == null)
            return false;
        if (other.getPreferredBackupWindow() != null
                && other.getPreferredBackupWindow().equals(this.getPreferredBackupWindow()) == false)
            return false;
        if (other.getSecurityGroupIds() == null ^ this.getSecurityGroupIds() == null)
            return false;
        if (other.getSecurityGroupIds() != null
                && other.getSecurityGroupIds().equals(this.getSecurityGroupIds()) == false)
            return false;
        if (other.getServiceRoleArn() == null ^ this.getServiceRoleArn() == null)
            return false;
        if (other.getServiceRoleArn() != null
                && other.getServiceRoleArn().equals(this.getServiceRoleArn()) == false)
            return false;
        if (other.getStatus() == null ^ this.getStatus() == null)
            return false;
        if (other.getStatus() != null && other.getStatus().equals(this.getStatus()) == false)
            return false;
        if (other.getStatusReason() == null ^ this.getStatusReason() == null)
            return false;
        if (other.getStatusReason() != null
                && other.getStatusReason().equals(this.getStatusReason()) == false)
            return false;
        if (other.getSubnetIds() == null ^ this.getSubnetIds() == null)
            return false;
        if (other.getSubnetIds() != null
                && other.getSubnetIds().equals(this.getSubnetIds()) == false)
            return false;
        if (other.getServerArn() == null ^ this.getServerArn() == null)
            return false;
        if (other.getServerArn() != null
                && other.getServerArn().equals(this.getServerArn()) == false)
            return false;
        return true;
    }
}
