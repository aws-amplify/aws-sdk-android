# Android CircleCI 2.0 configuration file
#
version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: build the whole project
          command: bash gradlew build -x test

  unittest:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx1024m
    steps:
      - checkout

      - run:
          name: test
          command : |
            mkdir -p ~/.gradle && echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties
      - run:
          name: run unit tests
          command: |
            bash ./gradlew --stop
            python3 CircleciScripts/run_unittest.py test_results
      - run:
          name : check unit test result 
          command : bash CircleciScripts/check_test_result.sh test_results
          
      - store_artifacts:
          path: test_results

  release_tag:
    working_directory: ~/code
    docker:
      - image:  circleci/golang:1.11
    steps:
      - checkout
      - run:
          name: install github-release
          command: go get github.com/aktau/github-release          
      - run:
          name: release the tag
          command: |
            export release_tag=${CIRCLE_TAG}
            export version=$(echo "$release_tag" | sed 's|.*v\([0-9\.]*\).*|\1|')
            export tagdescription=$(sed -n "/## \[Release $version\]/,/## \[Release [0-9]*\.[0-9]*\.[0-9]\]/p"  CHANGELOG.md | sed '1d' | sed '$d')
            echo "$tagdescription" | github-release release  -s ${GH_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME}  -t $release_tag   --name  "$tagname" -d - 

  release_javadoc:
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m     
    steps:
      - checkout   

      - run:
          name: install aws cli
          command: |
            sudo pip install awscli

      - run:
          name: download third party libararies 
          command: |
            aws s3 sync  s3://android-circleci-payload/third-party/  ./libs                

      - run:
          name: set version
          command: |
            export release_tag=${CIRCLE_TAG}
            export release_version=$(echo "$release_tag" | sed 's|.*v\([0-9\.]*\).*|\1|')
            echo "version:$release_version"
      - run:
          name: generate documents
          command: |
            currentfolder=$(pwd)
            python3 CircleciScripts/generatejavadoc.py CircleciScripts/ReleaseConfiguration.json /Users/sdechunq/Documents/github/android/bk/aws-sdk-android/  build/javadoc libs "$release_version"
      - run:
          name: copy documents
          command: |
            git config --local user.name "${GITHUB_USER}"
            git checkout  gh-pages
            cp -R build/javadoc/*   docs/reference/

      - run:
          name: check in documents
          command: |
            git add docs/reference
            git commit -m "AWS SDK for Android $release_version"
            git push -q https://${GITHUB_TOKEN}@github.com/aws-amplify/aws-sdk-android.git  

  tag_doc:
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m     
    steps:
      - checkout   
      - run:
          name: Add documentation tags to gh-pages
          command: |
            git checkout  gh-pages
            git tag -a ${CIRCLE_TAG}_api_docs  -m "Add documentation tags to version ${CIRCLE_TAG}"            
            git push --tags -q https://${GITHUB_TOKEN}@github.com/sunchunqiang/aws-sdk-android.git     

  release_maven:
    macos: 
      xcode: "10.1.0"

    steps:
      - checkout    
      - run:
          name: install android sdk tools
          command: |
            brew tap caskroom/cask
            brew cask install android-sdk
      - run:
          name: install aws cli
          command: |
            sudo pip install awscli
      - run:
          name: install android build tools
          command: |
            sudo yes | /usr/local/bin/sdkmanager "platforms;android-21" "platforms;android-27" "build-tools;27.0.1"  "extras;google;m2repository" "extras;android;m2repository"          
            /usr/local/bin/sdkmanager --update
      - run:
          name: Set environment
          command: |
            echo ~
            ls /usr/local/share/android-sdk
            ANDROID_HOME="/usr/local/share/android-sdk"
            echo 'export ANDROID_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo "Home: ${HOME}"
            echo "JAVA_HOME: $JAVA_HOME"
            echo "ANDROID_HOME: $ANDROID_HOME"
            echo "PATH: $PATH"                    
            echo 'export ANDROID_PLATFORM="27"' >> $BASH_ENV
            echo 'export ANDROID_BUILDTOOL_VERSION="27.0.1"' >> $BASH_ENV
      - run:
          name: Instal gpg
          command: |
            brew install gnupg

      - run:
          name: download gpghome
          command: |
            aws s3 cp s3://android-circleci-payload/gpghome/gpghome.zip gpghome.zip
            unzip -a gpghome.zip
            echo "gpghome contents:"
            ls gpghome

      - run:
         name: install maven
         command: |
            brew update 
            brew install maven

      - run:
          name: publish to maven
          command: |
            echo "${HOME}"
            echo "$JAVA_HOME"
            echo "$ANDROID_HOME"
            echo "$M2_HOME"
            bash CircleciScripts/maven-release.sh


workflows:
  version: 2

  
  release_sdk:
    jobs: 
      - build:
          filters:
            branches:
              ignore: /.*/            
            tags:
              only: /^release_v[0-9]+.[0-9]+.[0-9]+$/

      - unittest:
          requires:
            - build         
          filters:
            branches:
              ignore: /.*/            
            tags:
              only: /^release_v[0-9]+.[0-9]+.[0-9]+$/

      - release_tag:
          requires:
            - unittest
          filters:
            branches:
              ignore: /.*/            
            tags:
              only: /^release_v[0-9]+.[0-9]+.[0-9]+$/

      - release_maven:    
          requires:
            - release_tag  
          filters:
            branches:
              ignore: /.*/            
            tags:
              only: /^release_v[0-9]+.[0-9]+.[0-9]+$/

      - release_javadoc:    
          requires:
            - release_tag  
          filters:
            branches:
              ignore: /.*/            
            tags:
              only: /^release_v[0-9]+.[0-9]+.[0-9]+$/

      - tag_doc:    
          requires:
            - release_javadoc  
          filters:
            branches:
              ignore: /.*/            
            tags:
              only: /^release_v[0-9]+.[0-9]+.[0-9]+$/