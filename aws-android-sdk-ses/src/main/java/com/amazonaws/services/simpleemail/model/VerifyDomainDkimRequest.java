/*
 * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package com.amazonaws.services.simpleemail.model;

import java.io.Serializable;

import com.amazonaws.AmazonWebServiceRequest;

/**
 * <p>
 * Returns a set of DKIM tokens for a domain identity.
 * </p>
 * <important>
 * <p>
 * When you execute the <code>VerifyDomainDkim</code> operation, the domain that
 * you specify is added to the list of identities that are associated with your
 * account. This is true even if you haven't already associated the domain with
 * your account by using the <code>VerifyDomainIdentity</code> operation.
 * However, you can't send email from the domain until you either successfully
 * <a href=
 * "https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-domains.html"
 * >verify it</a> or you successfully <a
 * href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html"
 * >set up DKIM for it</a>.
 * </p>
 * </important>
 * <p>
 * You use the tokens that are generated by this operation to create CNAME
 * records. When Amazon SES detects that you've added these records to the DNS
 * configuration for a domain, you can start sending email from that domain. You
 * can start sending email even if you haven't added the TXT record provided by
 * the VerifyDomainIdentity operation to the DNS configuration for your domain.
 * All email that you send from the domain is authenticated using DKIM.
 * </p>
 * <p>
 * To create the CNAME records for DKIM authentication, use the following
 * values:
 * </p>
 * <ul>
 * <li>
 * <p>
 * <b>Name</b>: <i>token</i>._domainkey.<i>example.com</i>
 * </p>
 * </li>
 * <li>
 * <p>
 * <b>Type</b>: CNAME
 * </p>
 * </li>
 * <li>
 * <p>
 * <b>Value</b>: <i>token</i>.dkim.amazonses.com
 * </p>
 * </li>
 * </ul>
 * <p>
 * In the preceding example, replace <i>token</i> with one of the tokens that
 * are generated when you execute this operation. Replace <i>example.com</i>
 * with your domain. Repeat this process for each token that's generated by this
 * operation.
 * </p>
 * <p>
 * You can execute this operation no more than once per second.
 * </p>
 */
public class VerifyDomainDkimRequest extends AmazonWebServiceRequest implements Serializable {
    /**
     * <p>
     * The name of the domain to be verified for Easy DKIM signing.
     * </p>
     */
    private String domain;

    /**
     * <p>
     * The name of the domain to be verified for Easy DKIM signing.
     * </p>
     *
     * @return <p>
     *         The name of the domain to be verified for Easy DKIM signing.
     *         </p>
     */
    public String getDomain() {
        return domain;
    }

    /**
     * <p>
     * The name of the domain to be verified for Easy DKIM signing.
     * </p>
     *
     * @param domain <p>
     *            The name of the domain to be verified for Easy DKIM signing.
     *            </p>
     */
    public void setDomain(String domain) {
        this.domain = domain;
    }

    /**
     * <p>
     * The name of the domain to be verified for Easy DKIM signing.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param domain <p>
     *            The name of the domain to be verified for Easy DKIM signing.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public VerifyDomainDkimRequest withDomain(String domain) {
        this.domain = domain;
        return this;
    }

    /**
     * Returns a string representation of this object; useful for testing and
     * debugging.
     *
     * @return A string representation of this object.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("{");
        if (getDomain() != null)
            sb.append("Domain: " + getDomain());
        sb.append("}");
        return sb.toString();
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int hashCode = 1;

        hashCode = prime * hashCode + ((getDomain() == null) ? 0 : getDomain().hashCode());
        return hashCode;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;

        if (obj instanceof VerifyDomainDkimRequest == false)
            return false;
        VerifyDomainDkimRequest other = (VerifyDomainDkimRequest) obj;

        if (other.getDomain() == null ^ this.getDomain() == null)
            return false;
        if (other.getDomain() != null && other.getDomain().equals(this.getDomain()) == false)
            return false;
        return true;
    }
}
