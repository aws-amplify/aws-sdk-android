/*
 * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package com.amazonaws.services.cloudformation.model;

import java.io.Serializable;

/**
 * <p>
 * The StackEvent data type.
 * </p>
 */
public class StackEvent implements Serializable {
    /**
     * <p>
     * The unique ID name of the instance of the stack.
     * </p>
     */
    private String stackId;

    /**
     * <p>
     * The unique ID of this event.
     * </p>
     */
    private String eventId;

    /**
     * <p>
     * The name associated with a stack.
     * </p>
     */
    private String stackName;

    /**
     * <p>
     * The logical name of the resource specified in the template.
     * </p>
     */
    private String logicalResourceId;

    /**
     * <p>
     * The name or unique identifier associated with the physical instance of
     * the resource.
     * </p>
     */
    private String physicalResourceId;

    /**
     * <p>
     * Type of resource. (For more information, go to <a href=
     * "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html"
     * > AWS Resource Types Reference</a> in the AWS CloudFormation User Guide.)
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b>1 - 256<br/>
     */
    private String resourceType;

    /**
     * <p>
     * Time the status was updated.
     * </p>
     */
    private java.util.Date timestamp;

    /**
     * <p>
     * Current status of the resource.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>CREATE_IN_PROGRESS, CREATE_FAILED,
     * CREATE_COMPLETE, DELETE_IN_PROGRESS, DELETE_FAILED, DELETE_COMPLETE,
     * DELETE_SKIPPED, UPDATE_IN_PROGRESS, UPDATE_FAILED, UPDATE_COMPLETE,
     * IMPORT_FAILED, IMPORT_COMPLETE, IMPORT_IN_PROGRESS,
     * IMPORT_ROLLBACK_IN_PROGRESS, IMPORT_ROLLBACK_FAILED,
     * IMPORT_ROLLBACK_COMPLETE
     */
    private String resourceStatus;

    /**
     * <p>
     * Success/failure message associated with the resource.
     * </p>
     */
    private String resourceStatusReason;

    /**
     * <p>
     * BLOB of the properties used to create the resource.
     * </p>
     */
    private String resourceProperties;

    /**
     * <p>
     * The token passed to the operation that generated this event.
     * </p>
     * <p>
     * All events triggered by a given stack operation are assigned the same
     * client request token, which you can use to track operations. For example,
     * if you execute a <code>CreateStack</code> operation with the token
     * <code>token1</code>, then all the <code>StackEvents</code> generated by
     * that operation will have <code>ClientRequestToken</code> set as
     * <code>token1</code>.
     * </p>
     * <p>
     * In the console, stack operations display the client request token on the
     * Events tab. Stack operations that are initiated from the console use the
     * token format <i>Console-StackOperation-ID</i>, which helps you easily
     * identify the stack operation . For example, if you create a stack using
     * the console, each stack event would be assigned the same token in the
     * following format:
     * <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b>1 - 128<br/>
     * <b>Pattern: </b>[a-zA-Z0-9][-a-zA-Z0-9]*<br/>
     */
    private String clientRequestToken;

    /**
     * <p>
     * The unique ID name of the instance of the stack.
     * </p>
     *
     * @return <p>
     *         The unique ID name of the instance of the stack.
     *         </p>
     */
    public String getStackId() {
        return stackId;
    }

    /**
     * <p>
     * The unique ID name of the instance of the stack.
     * </p>
     *
     * @param stackId <p>
     *            The unique ID name of the instance of the stack.
     *            </p>
     */
    public void setStackId(String stackId) {
        this.stackId = stackId;
    }

    /**
     * <p>
     * The unique ID name of the instance of the stack.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param stackId <p>
     *            The unique ID name of the instance of the stack.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public StackEvent withStackId(String stackId) {
        this.stackId = stackId;
        return this;
    }

    /**
     * <p>
     * The unique ID of this event.
     * </p>
     *
     * @return <p>
     *         The unique ID of this event.
     *         </p>
     */
    public String getEventId() {
        return eventId;
    }

    /**
     * <p>
     * The unique ID of this event.
     * </p>
     *
     * @param eventId <p>
     *            The unique ID of this event.
     *            </p>
     */
    public void setEventId(String eventId) {
        this.eventId = eventId;
    }

    /**
     * <p>
     * The unique ID of this event.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param eventId <p>
     *            The unique ID of this event.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public StackEvent withEventId(String eventId) {
        this.eventId = eventId;
        return this;
    }

    /**
     * <p>
     * The name associated with a stack.
     * </p>
     *
     * @return <p>
     *         The name associated with a stack.
     *         </p>
     */
    public String getStackName() {
        return stackName;
    }

    /**
     * <p>
     * The name associated with a stack.
     * </p>
     *
     * @param stackName <p>
     *            The name associated with a stack.
     *            </p>
     */
    public void setStackName(String stackName) {
        this.stackName = stackName;
    }

    /**
     * <p>
     * The name associated with a stack.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param stackName <p>
     *            The name associated with a stack.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public StackEvent withStackName(String stackName) {
        this.stackName = stackName;
        return this;
    }

    /**
     * <p>
     * The logical name of the resource specified in the template.
     * </p>
     *
     * @return <p>
     *         The logical name of the resource specified in the template.
     *         </p>
     */
    public String getLogicalResourceId() {
        return logicalResourceId;
    }

    /**
     * <p>
     * The logical name of the resource specified in the template.
     * </p>
     *
     * @param logicalResourceId <p>
     *            The logical name of the resource specified in the template.
     *            </p>
     */
    public void setLogicalResourceId(String logicalResourceId) {
        this.logicalResourceId = logicalResourceId;
    }

    /**
     * <p>
     * The logical name of the resource specified in the template.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param logicalResourceId <p>
     *            The logical name of the resource specified in the template.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public StackEvent withLogicalResourceId(String logicalResourceId) {
        this.logicalResourceId = logicalResourceId;
        return this;
    }

    /**
     * <p>
     * The name or unique identifier associated with the physical instance of
     * the resource.
     * </p>
     *
     * @return <p>
     *         The name or unique identifier associated with the physical
     *         instance of the resource.
     *         </p>
     */
    public String getPhysicalResourceId() {
        return physicalResourceId;
    }

    /**
     * <p>
     * The name or unique identifier associated with the physical instance of
     * the resource.
     * </p>
     *
     * @param physicalResourceId <p>
     *            The name or unique identifier associated with the physical
     *            instance of the resource.
     *            </p>
     */
    public void setPhysicalResourceId(String physicalResourceId) {
        this.physicalResourceId = physicalResourceId;
    }

    /**
     * <p>
     * The name or unique identifier associated with the physical instance of
     * the resource.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param physicalResourceId <p>
     *            The name or unique identifier associated with the physical
     *            instance of the resource.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public StackEvent withPhysicalResourceId(String physicalResourceId) {
        this.physicalResourceId = physicalResourceId;
        return this;
    }

    /**
     * <p>
     * Type of resource. (For more information, go to <a href=
     * "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html"
     * > AWS Resource Types Reference</a> in the AWS CloudFormation User Guide.)
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b>1 - 256<br/>
     *
     * @return <p>
     *         Type of resource. (For more information, go to <a href=
     *         "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html"
     *         > AWS Resource Types Reference</a> in the AWS CloudFormation User
     *         Guide.)
     *         </p>
     */
    public String getResourceType() {
        return resourceType;
    }

    /**
     * <p>
     * Type of resource. (For more information, go to <a href=
     * "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html"
     * > AWS Resource Types Reference</a> in the AWS CloudFormation User Guide.)
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b>1 - 256<br/>
     *
     * @param resourceType <p>
     *            Type of resource. (For more information, go to <a href=
     *            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html"
     *            > AWS Resource Types Reference</a> in the AWS CloudFormation
     *            User Guide.)
     *            </p>
     */
    public void setResourceType(String resourceType) {
        this.resourceType = resourceType;
    }

    /**
     * <p>
     * Type of resource. (For more information, go to <a href=
     * "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html"
     * > AWS Resource Types Reference</a> in the AWS CloudFormation User Guide.)
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b>1 - 256<br/>
     *
     * @param resourceType <p>
     *            Type of resource. (For more information, go to <a href=
     *            "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html"
     *            > AWS Resource Types Reference</a> in the AWS CloudFormation
     *            User Guide.)
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public StackEvent withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }

    /**
     * <p>
     * Time the status was updated.
     * </p>
     *
     * @return <p>
     *         Time the status was updated.
     *         </p>
     */
    public java.util.Date getTimestamp() {
        return timestamp;
    }

    /**
     * <p>
     * Time the status was updated.
     * </p>
     *
     * @param timestamp <p>
     *            Time the status was updated.
     *            </p>
     */
    public void setTimestamp(java.util.Date timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * <p>
     * Time the status was updated.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param timestamp <p>
     *            Time the status was updated.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public StackEvent withTimestamp(java.util.Date timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * <p>
     * Current status of the resource.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>CREATE_IN_PROGRESS, CREATE_FAILED,
     * CREATE_COMPLETE, DELETE_IN_PROGRESS, DELETE_FAILED, DELETE_COMPLETE,
     * DELETE_SKIPPED, UPDATE_IN_PROGRESS, UPDATE_FAILED, UPDATE_COMPLETE,
     * IMPORT_FAILED, IMPORT_COMPLETE, IMPORT_IN_PROGRESS,
     * IMPORT_ROLLBACK_IN_PROGRESS, IMPORT_ROLLBACK_FAILED,
     * IMPORT_ROLLBACK_COMPLETE
     *
     * @return <p>
     *         Current status of the resource.
     *         </p>
     * @see ResourceStatus
     */
    public String getResourceStatus() {
        return resourceStatus;
    }

    /**
     * <p>
     * Current status of the resource.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>CREATE_IN_PROGRESS, CREATE_FAILED,
     * CREATE_COMPLETE, DELETE_IN_PROGRESS, DELETE_FAILED, DELETE_COMPLETE,
     * DELETE_SKIPPED, UPDATE_IN_PROGRESS, UPDATE_FAILED, UPDATE_COMPLETE,
     * IMPORT_FAILED, IMPORT_COMPLETE, IMPORT_IN_PROGRESS,
     * IMPORT_ROLLBACK_IN_PROGRESS, IMPORT_ROLLBACK_FAILED,
     * IMPORT_ROLLBACK_COMPLETE
     *
     * @param resourceStatus <p>
     *            Current status of the resource.
     *            </p>
     * @see ResourceStatus
     */
    public void setResourceStatus(String resourceStatus) {
        this.resourceStatus = resourceStatus;
    }

    /**
     * <p>
     * Current status of the resource.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>CREATE_IN_PROGRESS, CREATE_FAILED,
     * CREATE_COMPLETE, DELETE_IN_PROGRESS, DELETE_FAILED, DELETE_COMPLETE,
     * DELETE_SKIPPED, UPDATE_IN_PROGRESS, UPDATE_FAILED, UPDATE_COMPLETE,
     * IMPORT_FAILED, IMPORT_COMPLETE, IMPORT_IN_PROGRESS,
     * IMPORT_ROLLBACK_IN_PROGRESS, IMPORT_ROLLBACK_FAILED,
     * IMPORT_ROLLBACK_COMPLETE
     *
     * @param resourceStatus <p>
     *            Current status of the resource.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     * @see ResourceStatus
     */
    public StackEvent withResourceStatus(String resourceStatus) {
        this.resourceStatus = resourceStatus;
        return this;
    }

    /**
     * <p>
     * Current status of the resource.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>CREATE_IN_PROGRESS, CREATE_FAILED,
     * CREATE_COMPLETE, DELETE_IN_PROGRESS, DELETE_FAILED, DELETE_COMPLETE,
     * DELETE_SKIPPED, UPDATE_IN_PROGRESS, UPDATE_FAILED, UPDATE_COMPLETE,
     * IMPORT_FAILED, IMPORT_COMPLETE, IMPORT_IN_PROGRESS,
     * IMPORT_ROLLBACK_IN_PROGRESS, IMPORT_ROLLBACK_FAILED,
     * IMPORT_ROLLBACK_COMPLETE
     *
     * @param resourceStatus <p>
     *            Current status of the resource.
     *            </p>
     * @see ResourceStatus
     */
    public void setResourceStatus(ResourceStatus resourceStatus) {
        this.resourceStatus = resourceStatus.toString();
    }

    /**
     * <p>
     * Current status of the resource.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Allowed Values: </b>CREATE_IN_PROGRESS, CREATE_FAILED,
     * CREATE_COMPLETE, DELETE_IN_PROGRESS, DELETE_FAILED, DELETE_COMPLETE,
     * DELETE_SKIPPED, UPDATE_IN_PROGRESS, UPDATE_FAILED, UPDATE_COMPLETE,
     * IMPORT_FAILED, IMPORT_COMPLETE, IMPORT_IN_PROGRESS,
     * IMPORT_ROLLBACK_IN_PROGRESS, IMPORT_ROLLBACK_FAILED,
     * IMPORT_ROLLBACK_COMPLETE
     *
     * @param resourceStatus <p>
     *            Current status of the resource.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     * @see ResourceStatus
     */
    public StackEvent withResourceStatus(ResourceStatus resourceStatus) {
        this.resourceStatus = resourceStatus.toString();
        return this;
    }

    /**
     * <p>
     * Success/failure message associated with the resource.
     * </p>
     *
     * @return <p>
     *         Success/failure message associated with the resource.
     *         </p>
     */
    public String getResourceStatusReason() {
        return resourceStatusReason;
    }

    /**
     * <p>
     * Success/failure message associated with the resource.
     * </p>
     *
     * @param resourceStatusReason <p>
     *            Success/failure message associated with the resource.
     *            </p>
     */
    public void setResourceStatusReason(String resourceStatusReason) {
        this.resourceStatusReason = resourceStatusReason;
    }

    /**
     * <p>
     * Success/failure message associated with the resource.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceStatusReason <p>
     *            Success/failure message associated with the resource.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public StackEvent withResourceStatusReason(String resourceStatusReason) {
        this.resourceStatusReason = resourceStatusReason;
        return this;
    }

    /**
     * <p>
     * BLOB of the properties used to create the resource.
     * </p>
     *
     * @return <p>
     *         BLOB of the properties used to create the resource.
     *         </p>
     */
    public String getResourceProperties() {
        return resourceProperties;
    }

    /**
     * <p>
     * BLOB of the properties used to create the resource.
     * </p>
     *
     * @param resourceProperties <p>
     *            BLOB of the properties used to create the resource.
     *            </p>
     */
    public void setResourceProperties(String resourceProperties) {
        this.resourceProperties = resourceProperties;
    }

    /**
     * <p>
     * BLOB of the properties used to create the resource.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceProperties <p>
     *            BLOB of the properties used to create the resource.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public StackEvent withResourceProperties(String resourceProperties) {
        this.resourceProperties = resourceProperties;
        return this;
    }

    /**
     * <p>
     * The token passed to the operation that generated this event.
     * </p>
     * <p>
     * All events triggered by a given stack operation are assigned the same
     * client request token, which you can use to track operations. For example,
     * if you execute a <code>CreateStack</code> operation with the token
     * <code>token1</code>, then all the <code>StackEvents</code> generated by
     * that operation will have <code>ClientRequestToken</code> set as
     * <code>token1</code>.
     * </p>
     * <p>
     * In the console, stack operations display the client request token on the
     * Events tab. Stack operations that are initiated from the console use the
     * token format <i>Console-StackOperation-ID</i>, which helps you easily
     * identify the stack operation . For example, if you create a stack using
     * the console, each stack event would be assigned the same token in the
     * following format:
     * <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b>1 - 128<br/>
     * <b>Pattern: </b>[a-zA-Z0-9][-a-zA-Z0-9]*<br/>
     *
     * @return <p>
     *         The token passed to the operation that generated this event.
     *         </p>
     *         <p>
     *         All events triggered by a given stack operation are assigned the
     *         same client request token, which you can use to track operations.
     *         For example, if you execute a <code>CreateStack</code> operation
     *         with the token <code>token1</code>, then all the
     *         <code>StackEvents</code> generated by that operation will have
     *         <code>ClientRequestToken</code> set as <code>token1</code>.
     *         </p>
     *         <p>
     *         In the console, stack operations display the client request token
     *         on the Events tab. Stack operations that are initiated from the
     *         console use the token format <i>Console-StackOperation-ID</i>,
     *         which helps you easily identify the stack operation . For
     *         example, if you create a stack using the console, each stack
     *         event would be assigned the same token in the following format:
     *         <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>
     *         .
     *         </p>
     */
    public String getClientRequestToken() {
        return clientRequestToken;
    }

    /**
     * <p>
     * The token passed to the operation that generated this event.
     * </p>
     * <p>
     * All events triggered by a given stack operation are assigned the same
     * client request token, which you can use to track operations. For example,
     * if you execute a <code>CreateStack</code> operation with the token
     * <code>token1</code>, then all the <code>StackEvents</code> generated by
     * that operation will have <code>ClientRequestToken</code> set as
     * <code>token1</code>.
     * </p>
     * <p>
     * In the console, stack operations display the client request token on the
     * Events tab. Stack operations that are initiated from the console use the
     * token format <i>Console-StackOperation-ID</i>, which helps you easily
     * identify the stack operation . For example, if you create a stack using
     * the console, each stack event would be assigned the same token in the
     * following format:
     * <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.
     * </p>
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b>1 - 128<br/>
     * <b>Pattern: </b>[a-zA-Z0-9][-a-zA-Z0-9]*<br/>
     *
     * @param clientRequestToken <p>
     *            The token passed to the operation that generated this event.
     *            </p>
     *            <p>
     *            All events triggered by a given stack operation are assigned
     *            the same client request token, which you can use to track
     *            operations. For example, if you execute a
     *            <code>CreateStack</code> operation with the token
     *            <code>token1</code>, then all the <code>StackEvents</code>
     *            generated by that operation will have
     *            <code>ClientRequestToken</code> set as <code>token1</code>.
     *            </p>
     *            <p>
     *            In the console, stack operations display the client request
     *            token on the Events tab. Stack operations that are initiated
     *            from the console use the token format
     *            <i>Console-StackOperation-ID</i>, which helps you easily
     *            identify the stack operation . For example, if you create a
     *            stack using the console, each stack event would be assigned
     *            the same token in the following format:
     *            <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>
     *            .
     *            </p>
     */
    public void setClientRequestToken(String clientRequestToken) {
        this.clientRequestToken = clientRequestToken;
    }

    /**
     * <p>
     * The token passed to the operation that generated this event.
     * </p>
     * <p>
     * All events triggered by a given stack operation are assigned the same
     * client request token, which you can use to track operations. For example,
     * if you execute a <code>CreateStack</code> operation with the token
     * <code>token1</code>, then all the <code>StackEvents</code> generated by
     * that operation will have <code>ClientRequestToken</code> set as
     * <code>token1</code>.
     * </p>
     * <p>
     * In the console, stack operations display the client request token on the
     * Events tab. Stack operations that are initiated from the console use the
     * token format <i>Console-StackOperation-ID</i>, which helps you easily
     * identify the stack operation . For example, if you create a stack using
     * the console, each stack event would be assigned the same token in the
     * following format:
     * <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     * <p>
     * <b>Constraints:</b><br/>
     * <b>Length: </b>1 - 128<br/>
     * <b>Pattern: </b>[a-zA-Z0-9][-a-zA-Z0-9]*<br/>
     *
     * @param clientRequestToken <p>
     *            The token passed to the operation that generated this event.
     *            </p>
     *            <p>
     *            All events triggered by a given stack operation are assigned
     *            the same client request token, which you can use to track
     *            operations. For example, if you execute a
     *            <code>CreateStack</code> operation with the token
     *            <code>token1</code>, then all the <code>StackEvents</code>
     *            generated by that operation will have
     *            <code>ClientRequestToken</code> set as <code>token1</code>.
     *            </p>
     *            <p>
     *            In the console, stack operations display the client request
     *            token on the Events tab. Stack operations that are initiated
     *            from the console use the token format
     *            <i>Console-StackOperation-ID</i>, which helps you easily
     *            identify the stack operation . For example, if you create a
     *            stack using the console, each stack event would be assigned
     *            the same token in the following format:
     *            <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>
     *            .
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public StackEvent withClientRequestToken(String clientRequestToken) {
        this.clientRequestToken = clientRequestToken;
        return this;
    }

    /**
     * Returns a string representation of this object; useful for testing and
     * debugging.
     *
     * @return A string representation of this object.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("{");
        if (getStackId() != null)
            sb.append("StackId: " + getStackId() + ",");
        if (getEventId() != null)
            sb.append("EventId: " + getEventId() + ",");
        if (getStackName() != null)
            sb.append("StackName: " + getStackName() + ",");
        if (getLogicalResourceId() != null)
            sb.append("LogicalResourceId: " + getLogicalResourceId() + ",");
        if (getPhysicalResourceId() != null)
            sb.append("PhysicalResourceId: " + getPhysicalResourceId() + ",");
        if (getResourceType() != null)
            sb.append("ResourceType: " + getResourceType() + ",");
        if (getTimestamp() != null)
            sb.append("Timestamp: " + getTimestamp() + ",");
        if (getResourceStatus() != null)
            sb.append("ResourceStatus: " + getResourceStatus() + ",");
        if (getResourceStatusReason() != null)
            sb.append("ResourceStatusReason: " + getResourceStatusReason() + ",");
        if (getResourceProperties() != null)
            sb.append("ResourceProperties: " + getResourceProperties() + ",");
        if (getClientRequestToken() != null)
            sb.append("ClientRequestToken: " + getClientRequestToken());
        sb.append("}");
        return sb.toString();
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int hashCode = 1;

        hashCode = prime * hashCode + ((getStackId() == null) ? 0 : getStackId().hashCode());
        hashCode = prime * hashCode + ((getEventId() == null) ? 0 : getEventId().hashCode());
        hashCode = prime * hashCode + ((getStackName() == null) ? 0 : getStackName().hashCode());
        hashCode = prime * hashCode
                + ((getLogicalResourceId() == null) ? 0 : getLogicalResourceId().hashCode());
        hashCode = prime * hashCode
                + ((getPhysicalResourceId() == null) ? 0 : getPhysicalResourceId().hashCode());
        hashCode = prime * hashCode
                + ((getResourceType() == null) ? 0 : getResourceType().hashCode());
        hashCode = prime * hashCode + ((getTimestamp() == null) ? 0 : getTimestamp().hashCode());
        hashCode = prime * hashCode
                + ((getResourceStatus() == null) ? 0 : getResourceStatus().hashCode());
        hashCode = prime * hashCode
                + ((getResourceStatusReason() == null) ? 0 : getResourceStatusReason().hashCode());
        hashCode = prime * hashCode
                + ((getResourceProperties() == null) ? 0 : getResourceProperties().hashCode());
        hashCode = prime * hashCode
                + ((getClientRequestToken() == null) ? 0 : getClientRequestToken().hashCode());
        return hashCode;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;

        if (obj instanceof StackEvent == false)
            return false;
        StackEvent other = (StackEvent) obj;

        if (other.getStackId() == null ^ this.getStackId() == null)
            return false;
        if (other.getStackId() != null && other.getStackId().equals(this.getStackId()) == false)
            return false;
        if (other.getEventId() == null ^ this.getEventId() == null)
            return false;
        if (other.getEventId() != null && other.getEventId().equals(this.getEventId()) == false)
            return false;
        if (other.getStackName() == null ^ this.getStackName() == null)
            return false;
        if (other.getStackName() != null
                && other.getStackName().equals(this.getStackName()) == false)
            return false;
        if (other.getLogicalResourceId() == null ^ this.getLogicalResourceId() == null)
            return false;
        if (other.getLogicalResourceId() != null
                && other.getLogicalResourceId().equals(this.getLogicalResourceId()) == false)
            return false;
        if (other.getPhysicalResourceId() == null ^ this.getPhysicalResourceId() == null)
            return false;
        if (other.getPhysicalResourceId() != null
                && other.getPhysicalResourceId().equals(this.getPhysicalResourceId()) == false)
            return false;
        if (other.getResourceType() == null ^ this.getResourceType() == null)
            return false;
        if (other.getResourceType() != null
                && other.getResourceType().equals(this.getResourceType()) == false)
            return false;
        if (other.getTimestamp() == null ^ this.getTimestamp() == null)
            return false;
        if (other.getTimestamp() != null
                && other.getTimestamp().equals(this.getTimestamp()) == false)
            return false;
        if (other.getResourceStatus() == null ^ this.getResourceStatus() == null)
            return false;
        if (other.getResourceStatus() != null
                && other.getResourceStatus().equals(this.getResourceStatus()) == false)
            return false;
        if (other.getResourceStatusReason() == null ^ this.getResourceStatusReason() == null)
            return false;
        if (other.getResourceStatusReason() != null
                && other.getResourceStatusReason().equals(this.getResourceStatusReason()) == false)
            return false;
        if (other.getResourceProperties() == null ^ this.getResourceProperties() == null)
            return false;
        if (other.getResourceProperties() != null
                && other.getResourceProperties().equals(this.getResourceProperties()) == false)
            return false;
        if (other.getClientRequestToken() == null ^ this.getClientRequestToken() == null)
            return false;
        if (other.getClientRequestToken() != null
                && other.getClientRequestToken().equals(this.getClientRequestToken()) == false)
            return false;
        return true;
    }
}
