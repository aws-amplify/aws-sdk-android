/*
 * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package com.amazonaws.services.awssecurityhub.model;

import java.io.Serializable;

/**
 * <p>
 * A collection of attributes that are applied to all active Security
 * Hub-aggregated findings and that result in a subset of findings that are
 * included in this insight.
 * </p>
 */
public class AwsSecurityFindingFilters implements Serializable {
    /**
     * <p>
     * The ARN generated by Security Hub that uniquely identifies a third-party
     * company (security findings provider) after this provider's product
     * (solution that generates findings) is registered with Security Hub.
     * </p>
     */
    private java.util.List<StringFilter> productArn;

    /**
     * <p>
     * The AWS account ID that a finding is generated in.
     * </p>
     */
    private java.util.List<StringFilter> awsAccountId;

    /**
     * <p>
     * The security findings provider-specific identifier for a finding.
     * </p>
     */
    private java.util.List<StringFilter> id;

    /**
     * <p>
     * The identifier for the solution-specific component (a discrete unit of
     * logic) that generated a finding. In various security-findings providers'
     * solutions, this generator can be called a rule, a check, a detector, a
     * plug-in, etc.
     * </p>
     */
    private java.util.List<StringFilter> generatorId;

    /**
     * <p>
     * A finding type in the format of
     * <code>namespace/category/classifier</code> that classifies a finding.
     * </p>
     */
    private java.util.List<StringFilter> type;

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider first observed the potential security issue that a finding
     * captured.
     * </p>
     */
    private java.util.List<DateFilter> firstObservedAt;

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider most recently observed the potential security issue that a
     * finding captured.
     * </p>
     */
    private java.util.List<DateFilter> lastObservedAt;

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider captured the potential security issue that a finding captured.
     * </p>
     */
    private java.util.List<DateFilter> createdAt;

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider last updated the finding record.
     * </p>
     */
    private java.util.List<DateFilter> updatedAt;

    /**
     * <p>
     * The native severity as defined by the security-findings provider's
     * solution that generated the finding.
     * </p>
     */
    private java.util.List<NumberFilter> severityProduct;

    /**
     * <p>
     * The normalized severity of a finding.
     * </p>
     */
    private java.util.List<NumberFilter> severityNormalized;

    /**
     * <p>
     * The label of a finding's severity.
     * </p>
     */
    private java.util.List<StringFilter> severityLabel;

    /**
     * <p>
     * A finding's confidence. Confidence is defined as the likelihood that a
     * finding accurately identifies the behavior or issue that it was intended
     * to identify.
     * </p>
     * <p>
     * Confidence is scored on a 0-100 basis using a ratio scale, where 0 means
     * zero percent confidence and 100 means 100 percent confidence.
     * </p>
     */
    private java.util.List<NumberFilter> confidence;

    /**
     * <p>
     * The level of importance assigned to the resources associated with the
     * finding.
     * </p>
     * <p>
     * A score of 0 means that the underlying resources have no criticality, and
     * a score of 100 is reserved for the most critical resources.
     * </p>
     */
    private java.util.List<NumberFilter> criticality;

    /**
     * <p>
     * A finding's title.
     * </p>
     */
    private java.util.List<StringFilter> title;

    /**
     * <p>
     * A finding's description.
     * </p>
     */
    private java.util.List<StringFilter> description;

    /**
     * <p>
     * The recommendation of what to do about the issue described in a finding.
     * </p>
     */
    private java.util.List<StringFilter> recommendationText;

    /**
     * <p>
     * A URL that links to a page about the current finding in the
     * security-findings provider's solution.
     * </p>
     */
    private java.util.List<StringFilter> sourceUrl;

    /**
     * <p>
     * A data type where security-findings providers can include additional
     * solution-specific details that aren't part of the defined
     * <code>AwsSecurityFinding</code> format.
     * </p>
     */
    private java.util.List<MapFilter> productFields;

    /**
     * <p>
     * The name of the solution (product) that generates findings.
     * </p>
     */
    private java.util.List<StringFilter> productName;

    /**
     * <p>
     * The name of the findings provider (company) that owns the solution
     * (product) that generates findings.
     * </p>
     */
    private java.util.List<StringFilter> companyName;

    /**
     * <p>
     * A list of name/value string pairs associated with the finding. These are
     * custom, user-defined fields added to a finding.
     * </p>
     */
    private java.util.List<MapFilter> userDefinedFields;

    /**
     * <p>
     * The name of the malware that was observed.
     * </p>
     */
    private java.util.List<StringFilter> malwareName;

    /**
     * <p>
     * The type of the malware that was observed.
     * </p>
     */
    private java.util.List<StringFilter> malwareType;

    /**
     * <p>
     * The filesystem path of the malware that was observed.
     * </p>
     */
    private java.util.List<StringFilter> malwarePath;

    /**
     * <p>
     * The state of the malware that was observed.
     * </p>
     */
    private java.util.List<StringFilter> malwareState;

    /**
     * <p>
     * Indicates the direction of network traffic associated with a finding.
     * </p>
     */
    private java.util.List<StringFilter> networkDirection;

    /**
     * <p>
     * The protocol of network-related information about a finding.
     * </p>
     */
    private java.util.List<StringFilter> networkProtocol;

    /**
     * <p>
     * The source IPv4 address of network-related information about a finding.
     * </p>
     */
    private java.util.List<IpFilter> networkSourceIpV4;

    /**
     * <p>
     * The source IPv6 address of network-related information about a finding.
     * </p>
     */
    private java.util.List<IpFilter> networkSourceIpV6;

    /**
     * <p>
     * The source port of network-related information about a finding.
     * </p>
     */
    private java.util.List<NumberFilter> networkSourcePort;

    /**
     * <p>
     * The source domain of network-related information about a finding.
     * </p>
     */
    private java.util.List<StringFilter> networkSourceDomain;

    /**
     * <p>
     * The source media access control (MAC) address of network-related
     * information about a finding.
     * </p>
     */
    private java.util.List<StringFilter> networkSourceMac;

    /**
     * <p>
     * The destination IPv4 address of network-related information about a
     * finding.
     * </p>
     */
    private java.util.List<IpFilter> networkDestinationIpV4;

    /**
     * <p>
     * The destination IPv6 address of network-related information about a
     * finding.
     * </p>
     */
    private java.util.List<IpFilter> networkDestinationIpV6;

    /**
     * <p>
     * The destination port of network-related information about a finding.
     * </p>
     */
    private java.util.List<NumberFilter> networkDestinationPort;

    /**
     * <p>
     * The destination domain of network-related information about a finding.
     * </p>
     */
    private java.util.List<StringFilter> networkDestinationDomain;

    /**
     * <p>
     * The name of the process.
     * </p>
     */
    private java.util.List<StringFilter> processName;

    /**
     * <p>
     * The path to the process executable.
     * </p>
     */
    private java.util.List<StringFilter> processPath;

    /**
     * <p>
     * The process ID.
     * </p>
     */
    private java.util.List<NumberFilter> processPid;

    /**
     * <p>
     * The parent process ID.
     * </p>
     */
    private java.util.List<NumberFilter> processParentPid;

    /**
     * <p>
     * The date/time that the process was launched.
     * </p>
     */
    private java.util.List<DateFilter> processLaunchedAt;

    /**
     * <p>
     * The date/time that the process was terminated.
     * </p>
     */
    private java.util.List<DateFilter> processTerminatedAt;

    /**
     * <p>
     * The type of a threat intelligence indicator.
     * </p>
     */
    private java.util.List<StringFilter> threatIntelIndicatorType;

    /**
     * <p>
     * The value of a threat intelligence indicator.
     * </p>
     */
    private java.util.List<StringFilter> threatIntelIndicatorValue;

    /**
     * <p>
     * The category of a threat intelligence indicator.
     * </p>
     */
    private java.util.List<StringFilter> threatIntelIndicatorCategory;

    /**
     * <p>
     * The date/time of the last observation of a threat intelligence indicator.
     * </p>
     */
    private java.util.List<DateFilter> threatIntelIndicatorLastObservedAt;

    /**
     * <p>
     * The source of the threat intelligence.
     * </p>
     */
    private java.util.List<StringFilter> threatIntelIndicatorSource;

    /**
     * <p>
     * The URL for more details from the source of the threat intelligence.
     * </p>
     */
    private java.util.List<StringFilter> threatIntelIndicatorSourceUrl;

    /**
     * <p>
     * Specifies the type of the resource that details are provided for.
     * </p>
     */
    private java.util.List<StringFilter> resourceType;

    /**
     * <p>
     * The canonical identifier for the given resource type.
     * </p>
     */
    private java.util.List<StringFilter> resourceId;

    /**
     * <p>
     * The canonical AWS partition name that the Region is assigned to.
     * </p>
     */
    private java.util.List<StringFilter> resourcePartition;

    /**
     * <p>
     * The canonical AWS external Region name where this resource is located.
     * </p>
     */
    private java.util.List<StringFilter> resourceRegion;

    /**
     * <p>
     * A list of AWS tags associated with a resource at the time the finding was
     * processed.
     * </p>
     */
    private java.util.List<MapFilter> resourceTags;

    /**
     * <p>
     * The instance type of the instance.
     * </p>
     */
    private java.util.List<StringFilter> resourceAwsEc2InstanceType;

    /**
     * <p>
     * The Amazon Machine Image (AMI) ID of the instance.
     * </p>
     */
    private java.util.List<StringFilter> resourceAwsEc2InstanceImageId;

    /**
     * <p>
     * The IPv4 addresses associated with the instance.
     * </p>
     */
    private java.util.List<IpFilter> resourceAwsEc2InstanceIpV4Addresses;

    /**
     * <p>
     * The IPv6 addresses associated with the instance.
     * </p>
     */
    private java.util.List<IpFilter> resourceAwsEc2InstanceIpV6Addresses;

    /**
     * <p>
     * The key name associated with the instance.
     * </p>
     */
    private java.util.List<StringFilter> resourceAwsEc2InstanceKeyName;

    /**
     * <p>
     * The IAM profile ARN of the instance.
     * </p>
     */
    private java.util.List<StringFilter> resourceAwsEc2InstanceIamInstanceProfileArn;

    /**
     * <p>
     * The identifier of the VPC that the instance was launched in.
     * </p>
     */
    private java.util.List<StringFilter> resourceAwsEc2InstanceVpcId;

    /**
     * <p>
     * The identifier of the subnet that the instance was launched in.
     * </p>
     */
    private java.util.List<StringFilter> resourceAwsEc2InstanceSubnetId;

    /**
     * <p>
     * The date and time the instance was launched.
     * </p>
     */
    private java.util.List<DateFilter> resourceAwsEc2InstanceLaunchedAt;

    /**
     * <p>
     * The canonical user ID of the owner of the S3 bucket.
     * </p>
     */
    private java.util.List<StringFilter> resourceAwsS3BucketOwnerId;

    /**
     * <p>
     * The display name of the owner of the S3 bucket.
     * </p>
     */
    private java.util.List<StringFilter> resourceAwsS3BucketOwnerName;

    /**
     * <p>
     * The user associated with the IAM access key related to a finding.
     * </p>
     */
    private java.util.List<StringFilter> resourceAwsIamAccessKeyUserName;

    /**
     * <p>
     * The status of the IAM access key related to a finding.
     * </p>
     */
    private java.util.List<StringFilter> resourceAwsIamAccessKeyStatus;

    /**
     * <p>
     * The creation date/time of the IAM access key related to a finding.
     * </p>
     */
    private java.util.List<DateFilter> resourceAwsIamAccessKeyCreatedAt;

    /**
     * <p>
     * The name of the container related to a finding.
     * </p>
     */
    private java.util.List<StringFilter> resourceContainerName;

    /**
     * <p>
     * The identifier of the image related to a finding.
     * </p>
     */
    private java.util.List<StringFilter> resourceContainerImageId;

    /**
     * <p>
     * The name of the image related to a finding.
     * </p>
     */
    private java.util.List<StringFilter> resourceContainerImageName;

    /**
     * <p>
     * The date/time that the container was started.
     * </p>
     */
    private java.util.List<DateFilter> resourceContainerLaunchedAt;

    /**
     * <p>
     * The details of a resource that doesn't have a specific subfield for the
     * resource type defined.
     * </p>
     */
    private java.util.List<MapFilter> resourceDetailsOther;

    /**
     * <p>
     * Exclusive to findings that are generated as the result of a check run
     * against a specific rule in a supported standard, such as CIS AWS
     * Foundations. Contains security standard-related finding details.
     * </p>
     */
    private java.util.List<StringFilter> complianceStatus;

    /**
     * <p>
     * The veracity of a finding.
     * </p>
     */
    private java.util.List<StringFilter> verificationState;

    /**
     * <p>
     * The workflow state of a finding.
     * </p>
     */
    private java.util.List<StringFilter> workflowState;

    /**
     * <p>
     * The status of the investigation into a finding. Allowed values are the
     * following.
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>NEW</code> - The initial state of a finding, before it is reviewed.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>NOTIFIED</code> - Indicates that the resource owner has been
     * notified about the security issue. Used when the initial reviewer is not
     * the resource owner, and needs intervention from the resource owner.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>SUPPRESSED</code> - The finding will not be reviewed again and will
     * not be acted upon.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>RESOLVED</code> - The finding was reviewed and remediated and is
     * now considered resolved.
     * </p>
     * </li>
     * </ul>
     */
    private java.util.List<StringFilter> workflowStatus;

    /**
     * <p>
     * The updated record state for the finding.
     * </p>
     */
    private java.util.List<StringFilter> recordState;

    /**
     * <p>
     * The ARN of the solution that generated a related finding.
     * </p>
     */
    private java.util.List<StringFilter> relatedFindingsProductArn;

    /**
     * <p>
     * The solution-generated identifier for a related finding.
     * </p>
     */
    private java.util.List<StringFilter> relatedFindingsId;

    /**
     * <p>
     * The text of a note.
     * </p>
     */
    private java.util.List<StringFilter> noteText;

    /**
     * <p>
     * The timestamp of when the note was updated.
     * </p>
     */
    private java.util.List<DateFilter> noteUpdatedAt;

    /**
     * <p>
     * The principal that created a note.
     * </p>
     */
    private java.util.List<StringFilter> noteUpdatedBy;

    /**
     * <p>
     * A keyword for a finding.
     * </p>
     */
    private java.util.List<KeywordFilter> keyword;

    /**
     * <p>
     * The ARN generated by Security Hub that uniquely identifies a third-party
     * company (security findings provider) after this provider's product
     * (solution that generates findings) is registered with Security Hub.
     * </p>
     *
     * @return <p>
     *         The ARN generated by Security Hub that uniquely identifies a
     *         third-party company (security findings provider) after this
     *         provider's product (solution that generates findings) is
     *         registered with Security Hub.
     *         </p>
     */
    public java.util.List<StringFilter> getProductArn() {
        return productArn;
    }

    /**
     * <p>
     * The ARN generated by Security Hub that uniquely identifies a third-party
     * company (security findings provider) after this provider's product
     * (solution that generates findings) is registered with Security Hub.
     * </p>
     *
     * @param productArn <p>
     *            The ARN generated by Security Hub that uniquely identifies a
     *            third-party company (security findings provider) after this
     *            provider's product (solution that generates findings) is
     *            registered with Security Hub.
     *            </p>
     */
    public void setProductArn(java.util.Collection<StringFilter> productArn) {
        if (productArn == null) {
            this.productArn = null;
            return;
        }

        this.productArn = new java.util.ArrayList<StringFilter>(productArn);
    }

    /**
     * <p>
     * The ARN generated by Security Hub that uniquely identifies a third-party
     * company (security findings provider) after this provider's product
     * (solution that generates findings) is registered with Security Hub.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param productArn <p>
     *            The ARN generated by Security Hub that uniquely identifies a
     *            third-party company (security findings provider) after this
     *            provider's product (solution that generates findings) is
     *            registered with Security Hub.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProductArn(StringFilter... productArn) {
        if (getProductArn() == null) {
            this.productArn = new java.util.ArrayList<StringFilter>(productArn.length);
        }
        for (StringFilter value : productArn) {
            this.productArn.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The ARN generated by Security Hub that uniquely identifies a third-party
     * company (security findings provider) after this provider's product
     * (solution that generates findings) is registered with Security Hub.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param productArn <p>
     *            The ARN generated by Security Hub that uniquely identifies a
     *            third-party company (security findings provider) after this
     *            provider's product (solution that generates findings) is
     *            registered with Security Hub.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProductArn(java.util.Collection<StringFilter> productArn) {
        setProductArn(productArn);
        return this;
    }

    /**
     * <p>
     * The AWS account ID that a finding is generated in.
     * </p>
     *
     * @return <p>
     *         The AWS account ID that a finding is generated in.
     *         </p>
     */
    public java.util.List<StringFilter> getAwsAccountId() {
        return awsAccountId;
    }

    /**
     * <p>
     * The AWS account ID that a finding is generated in.
     * </p>
     *
     * @param awsAccountId <p>
     *            The AWS account ID that a finding is generated in.
     *            </p>
     */
    public void setAwsAccountId(java.util.Collection<StringFilter> awsAccountId) {
        if (awsAccountId == null) {
            this.awsAccountId = null;
            return;
        }

        this.awsAccountId = new java.util.ArrayList<StringFilter>(awsAccountId);
    }

    /**
     * <p>
     * The AWS account ID that a finding is generated in.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param awsAccountId <p>
     *            The AWS account ID that a finding is generated in.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withAwsAccountId(StringFilter... awsAccountId) {
        if (getAwsAccountId() == null) {
            this.awsAccountId = new java.util.ArrayList<StringFilter>(awsAccountId.length);
        }
        for (StringFilter value : awsAccountId) {
            this.awsAccountId.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The AWS account ID that a finding is generated in.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param awsAccountId <p>
     *            The AWS account ID that a finding is generated in.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withAwsAccountId(
            java.util.Collection<StringFilter> awsAccountId) {
        setAwsAccountId(awsAccountId);
        return this;
    }

    /**
     * <p>
     * The security findings provider-specific identifier for a finding.
     * </p>
     *
     * @return <p>
     *         The security findings provider-specific identifier for a finding.
     *         </p>
     */
    public java.util.List<StringFilter> getId() {
        return id;
    }

    /**
     * <p>
     * The security findings provider-specific identifier for a finding.
     * </p>
     *
     * @param id <p>
     *            The security findings provider-specific identifier for a
     *            finding.
     *            </p>
     */
    public void setId(java.util.Collection<StringFilter> id) {
        if (id == null) {
            this.id = null;
            return;
        }

        this.id = new java.util.ArrayList<StringFilter>(id);
    }

    /**
     * <p>
     * The security findings provider-specific identifier for a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param id <p>
     *            The security findings provider-specific identifier for a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withId(StringFilter... id) {
        if (getId() == null) {
            this.id = new java.util.ArrayList<StringFilter>(id.length);
        }
        for (StringFilter value : id) {
            this.id.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The security findings provider-specific identifier for a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param id <p>
     *            The security findings provider-specific identifier for a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withId(java.util.Collection<StringFilter> id) {
        setId(id);
        return this;
    }

    /**
     * <p>
     * The identifier for the solution-specific component (a discrete unit of
     * logic) that generated a finding. In various security-findings providers'
     * solutions, this generator can be called a rule, a check, a detector, a
     * plug-in, etc.
     * </p>
     *
     * @return <p>
     *         The identifier for the solution-specific component (a discrete
     *         unit of logic) that generated a finding. In various
     *         security-findings providers' solutions, this generator can be
     *         called a rule, a check, a detector, a plug-in, etc.
     *         </p>
     */
    public java.util.List<StringFilter> getGeneratorId() {
        return generatorId;
    }

    /**
     * <p>
     * The identifier for the solution-specific component (a discrete unit of
     * logic) that generated a finding. In various security-findings providers'
     * solutions, this generator can be called a rule, a check, a detector, a
     * plug-in, etc.
     * </p>
     *
     * @param generatorId <p>
     *            The identifier for the solution-specific component (a discrete
     *            unit of logic) that generated a finding. In various
     *            security-findings providers' solutions, this generator can be
     *            called a rule, a check, a detector, a plug-in, etc.
     *            </p>
     */
    public void setGeneratorId(java.util.Collection<StringFilter> generatorId) {
        if (generatorId == null) {
            this.generatorId = null;
            return;
        }

        this.generatorId = new java.util.ArrayList<StringFilter>(generatorId);
    }

    /**
     * <p>
     * The identifier for the solution-specific component (a discrete unit of
     * logic) that generated a finding. In various security-findings providers'
     * solutions, this generator can be called a rule, a check, a detector, a
     * plug-in, etc.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param generatorId <p>
     *            The identifier for the solution-specific component (a discrete
     *            unit of logic) that generated a finding. In various
     *            security-findings providers' solutions, this generator can be
     *            called a rule, a check, a detector, a plug-in, etc.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withGeneratorId(StringFilter... generatorId) {
        if (getGeneratorId() == null) {
            this.generatorId = new java.util.ArrayList<StringFilter>(generatorId.length);
        }
        for (StringFilter value : generatorId) {
            this.generatorId.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The identifier for the solution-specific component (a discrete unit of
     * logic) that generated a finding. In various security-findings providers'
     * solutions, this generator can be called a rule, a check, a detector, a
     * plug-in, etc.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param generatorId <p>
     *            The identifier for the solution-specific component (a discrete
     *            unit of logic) that generated a finding. In various
     *            security-findings providers' solutions, this generator can be
     *            called a rule, a check, a detector, a plug-in, etc.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withGeneratorId(java.util.Collection<StringFilter> generatorId) {
        setGeneratorId(generatorId);
        return this;
    }

    /**
     * <p>
     * A finding type in the format of
     * <code>namespace/category/classifier</code> that classifies a finding.
     * </p>
     *
     * @return <p>
     *         A finding type in the format of
     *         <code>namespace/category/classifier</code> that classifies a
     *         finding.
     *         </p>
     */
    public java.util.List<StringFilter> getType() {
        return type;
    }

    /**
     * <p>
     * A finding type in the format of
     * <code>namespace/category/classifier</code> that classifies a finding.
     * </p>
     *
     * @param type <p>
     *            A finding type in the format of
     *            <code>namespace/category/classifier</code> that classifies a
     *            finding.
     *            </p>
     */
    public void setType(java.util.Collection<StringFilter> type) {
        if (type == null) {
            this.type = null;
            return;
        }

        this.type = new java.util.ArrayList<StringFilter>(type);
    }

    /**
     * <p>
     * A finding type in the format of
     * <code>namespace/category/classifier</code> that classifies a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param type <p>
     *            A finding type in the format of
     *            <code>namespace/category/classifier</code> that classifies a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withType(StringFilter... type) {
        if (getType() == null) {
            this.type = new java.util.ArrayList<StringFilter>(type.length);
        }
        for (StringFilter value : type) {
            this.type.add(value);
        }
        return this;
    }

    /**
     * <p>
     * A finding type in the format of
     * <code>namespace/category/classifier</code> that classifies a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param type <p>
     *            A finding type in the format of
     *            <code>namespace/category/classifier</code> that classifies a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withType(java.util.Collection<StringFilter> type) {
        setType(type);
        return this;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider first observed the potential security issue that a finding
     * captured.
     * </p>
     *
     * @return <p>
     *         An ISO8601-formatted timestamp that indicates when the
     *         security-findings provider first observed the potential security
     *         issue that a finding captured.
     *         </p>
     */
    public java.util.List<DateFilter> getFirstObservedAt() {
        return firstObservedAt;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider first observed the potential security issue that a finding
     * captured.
     * </p>
     *
     * @param firstObservedAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider first observed the potential
     *            security issue that a finding captured.
     *            </p>
     */
    public void setFirstObservedAt(java.util.Collection<DateFilter> firstObservedAt) {
        if (firstObservedAt == null) {
            this.firstObservedAt = null;
            return;
        }

        this.firstObservedAt = new java.util.ArrayList<DateFilter>(firstObservedAt);
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider first observed the potential security issue that a finding
     * captured.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param firstObservedAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider first observed the potential
     *            security issue that a finding captured.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withFirstObservedAt(DateFilter... firstObservedAt) {
        if (getFirstObservedAt() == null) {
            this.firstObservedAt = new java.util.ArrayList<DateFilter>(firstObservedAt.length);
        }
        for (DateFilter value : firstObservedAt) {
            this.firstObservedAt.add(value);
        }
        return this;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider first observed the potential security issue that a finding
     * captured.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param firstObservedAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider first observed the potential
     *            security issue that a finding captured.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withFirstObservedAt(
            java.util.Collection<DateFilter> firstObservedAt) {
        setFirstObservedAt(firstObservedAt);
        return this;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider most recently observed the potential security issue that a
     * finding captured.
     * </p>
     *
     * @return <p>
     *         An ISO8601-formatted timestamp that indicates when the
     *         security-findings provider most recently observed the potential
     *         security issue that a finding captured.
     *         </p>
     */
    public java.util.List<DateFilter> getLastObservedAt() {
        return lastObservedAt;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider most recently observed the potential security issue that a
     * finding captured.
     * </p>
     *
     * @param lastObservedAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider most recently observed the
     *            potential security issue that a finding captured.
     *            </p>
     */
    public void setLastObservedAt(java.util.Collection<DateFilter> lastObservedAt) {
        if (lastObservedAt == null) {
            this.lastObservedAt = null;
            return;
        }

        this.lastObservedAt = new java.util.ArrayList<DateFilter>(lastObservedAt);
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider most recently observed the potential security issue that a
     * finding captured.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param lastObservedAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider most recently observed the
     *            potential security issue that a finding captured.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withLastObservedAt(DateFilter... lastObservedAt) {
        if (getLastObservedAt() == null) {
            this.lastObservedAt = new java.util.ArrayList<DateFilter>(lastObservedAt.length);
        }
        for (DateFilter value : lastObservedAt) {
            this.lastObservedAt.add(value);
        }
        return this;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider most recently observed the potential security issue that a
     * finding captured.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param lastObservedAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider most recently observed the
     *            potential security issue that a finding captured.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withLastObservedAt(
            java.util.Collection<DateFilter> lastObservedAt) {
        setLastObservedAt(lastObservedAt);
        return this;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider captured the potential security issue that a finding captured.
     * </p>
     *
     * @return <p>
     *         An ISO8601-formatted timestamp that indicates when the
     *         security-findings provider captured the potential security issue
     *         that a finding captured.
     *         </p>
     */
    public java.util.List<DateFilter> getCreatedAt() {
        return createdAt;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider captured the potential security issue that a finding captured.
     * </p>
     *
     * @param createdAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider captured the potential security
     *            issue that a finding captured.
     *            </p>
     */
    public void setCreatedAt(java.util.Collection<DateFilter> createdAt) {
        if (createdAt == null) {
            this.createdAt = null;
            return;
        }

        this.createdAt = new java.util.ArrayList<DateFilter>(createdAt);
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider captured the potential security issue that a finding captured.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param createdAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider captured the potential security
     *            issue that a finding captured.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withCreatedAt(DateFilter... createdAt) {
        if (getCreatedAt() == null) {
            this.createdAt = new java.util.ArrayList<DateFilter>(createdAt.length);
        }
        for (DateFilter value : createdAt) {
            this.createdAt.add(value);
        }
        return this;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider captured the potential security issue that a finding captured.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param createdAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider captured the potential security
     *            issue that a finding captured.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withCreatedAt(java.util.Collection<DateFilter> createdAt) {
        setCreatedAt(createdAt);
        return this;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider last updated the finding record.
     * </p>
     *
     * @return <p>
     *         An ISO8601-formatted timestamp that indicates when the
     *         security-findings provider last updated the finding record.
     *         </p>
     */
    public java.util.List<DateFilter> getUpdatedAt() {
        return updatedAt;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider last updated the finding record.
     * </p>
     *
     * @param updatedAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider last updated the finding record.
     *            </p>
     */
    public void setUpdatedAt(java.util.Collection<DateFilter> updatedAt) {
        if (updatedAt == null) {
            this.updatedAt = null;
            return;
        }

        this.updatedAt = new java.util.ArrayList<DateFilter>(updatedAt);
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider last updated the finding record.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param updatedAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider last updated the finding record.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withUpdatedAt(DateFilter... updatedAt) {
        if (getUpdatedAt() == null) {
            this.updatedAt = new java.util.ArrayList<DateFilter>(updatedAt.length);
        }
        for (DateFilter value : updatedAt) {
            this.updatedAt.add(value);
        }
        return this;
    }

    /**
     * <p>
     * An ISO8601-formatted timestamp that indicates when the security-findings
     * provider last updated the finding record.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param updatedAt <p>
     *            An ISO8601-formatted timestamp that indicates when the
     *            security-findings provider last updated the finding record.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withUpdatedAt(java.util.Collection<DateFilter> updatedAt) {
        setUpdatedAt(updatedAt);
        return this;
    }

    /**
     * <p>
     * The native severity as defined by the security-findings provider's
     * solution that generated the finding.
     * </p>
     *
     * @return <p>
     *         The native severity as defined by the security-findings
     *         provider's solution that generated the finding.
     *         </p>
     */
    public java.util.List<NumberFilter> getSeverityProduct() {
        return severityProduct;
    }

    /**
     * <p>
     * The native severity as defined by the security-findings provider's
     * solution that generated the finding.
     * </p>
     *
     * @param severityProduct <p>
     *            The native severity as defined by the security-findings
     *            provider's solution that generated the finding.
     *            </p>
     */
    public void setSeverityProduct(java.util.Collection<NumberFilter> severityProduct) {
        if (severityProduct == null) {
            this.severityProduct = null;
            return;
        }

        this.severityProduct = new java.util.ArrayList<NumberFilter>(severityProduct);
    }

    /**
     * <p>
     * The native severity as defined by the security-findings provider's
     * solution that generated the finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param severityProduct <p>
     *            The native severity as defined by the security-findings
     *            provider's solution that generated the finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withSeverityProduct(NumberFilter... severityProduct) {
        if (getSeverityProduct() == null) {
            this.severityProduct = new java.util.ArrayList<NumberFilter>(severityProduct.length);
        }
        for (NumberFilter value : severityProduct) {
            this.severityProduct.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The native severity as defined by the security-findings provider's
     * solution that generated the finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param severityProduct <p>
     *            The native severity as defined by the security-findings
     *            provider's solution that generated the finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withSeverityProduct(
            java.util.Collection<NumberFilter> severityProduct) {
        setSeverityProduct(severityProduct);
        return this;
    }

    /**
     * <p>
     * The normalized severity of a finding.
     * </p>
     *
     * @return <p>
     *         The normalized severity of a finding.
     *         </p>
     */
    public java.util.List<NumberFilter> getSeverityNormalized() {
        return severityNormalized;
    }

    /**
     * <p>
     * The normalized severity of a finding.
     * </p>
     *
     * @param severityNormalized <p>
     *            The normalized severity of a finding.
     *            </p>
     */
    public void setSeverityNormalized(java.util.Collection<NumberFilter> severityNormalized) {
        if (severityNormalized == null) {
            this.severityNormalized = null;
            return;
        }

        this.severityNormalized = new java.util.ArrayList<NumberFilter>(severityNormalized);
    }

    /**
     * <p>
     * The normalized severity of a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param severityNormalized <p>
     *            The normalized severity of a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withSeverityNormalized(NumberFilter... severityNormalized) {
        if (getSeverityNormalized() == null) {
            this.severityNormalized = new java.util.ArrayList<NumberFilter>(
                    severityNormalized.length);
        }
        for (NumberFilter value : severityNormalized) {
            this.severityNormalized.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The normalized severity of a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param severityNormalized <p>
     *            The normalized severity of a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withSeverityNormalized(
            java.util.Collection<NumberFilter> severityNormalized) {
        setSeverityNormalized(severityNormalized);
        return this;
    }

    /**
     * <p>
     * The label of a finding's severity.
     * </p>
     *
     * @return <p>
     *         The label of a finding's severity.
     *         </p>
     */
    public java.util.List<StringFilter> getSeverityLabel() {
        return severityLabel;
    }

    /**
     * <p>
     * The label of a finding's severity.
     * </p>
     *
     * @param severityLabel <p>
     *            The label of a finding's severity.
     *            </p>
     */
    public void setSeverityLabel(java.util.Collection<StringFilter> severityLabel) {
        if (severityLabel == null) {
            this.severityLabel = null;
            return;
        }

        this.severityLabel = new java.util.ArrayList<StringFilter>(severityLabel);
    }

    /**
     * <p>
     * The label of a finding's severity.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param severityLabel <p>
     *            The label of a finding's severity.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withSeverityLabel(StringFilter... severityLabel) {
        if (getSeverityLabel() == null) {
            this.severityLabel = new java.util.ArrayList<StringFilter>(severityLabel.length);
        }
        for (StringFilter value : severityLabel) {
            this.severityLabel.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The label of a finding's severity.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param severityLabel <p>
     *            The label of a finding's severity.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withSeverityLabel(
            java.util.Collection<StringFilter> severityLabel) {
        setSeverityLabel(severityLabel);
        return this;
    }

    /**
     * <p>
     * A finding's confidence. Confidence is defined as the likelihood that a
     * finding accurately identifies the behavior or issue that it was intended
     * to identify.
     * </p>
     * <p>
     * Confidence is scored on a 0-100 basis using a ratio scale, where 0 means
     * zero percent confidence and 100 means 100 percent confidence.
     * </p>
     *
     * @return <p>
     *         A finding's confidence. Confidence is defined as the likelihood
     *         that a finding accurately identifies the behavior or issue that
     *         it was intended to identify.
     *         </p>
     *         <p>
     *         Confidence is scored on a 0-100 basis using a ratio scale, where
     *         0 means zero percent confidence and 100 means 100 percent
     *         confidence.
     *         </p>
     */
    public java.util.List<NumberFilter> getConfidence() {
        return confidence;
    }

    /**
     * <p>
     * A finding's confidence. Confidence is defined as the likelihood that a
     * finding accurately identifies the behavior or issue that it was intended
     * to identify.
     * </p>
     * <p>
     * Confidence is scored on a 0-100 basis using a ratio scale, where 0 means
     * zero percent confidence and 100 means 100 percent confidence.
     * </p>
     *
     * @param confidence <p>
     *            A finding's confidence. Confidence is defined as the
     *            likelihood that a finding accurately identifies the behavior
     *            or issue that it was intended to identify.
     *            </p>
     *            <p>
     *            Confidence is scored on a 0-100 basis using a ratio scale,
     *            where 0 means zero percent confidence and 100 means 100
     *            percent confidence.
     *            </p>
     */
    public void setConfidence(java.util.Collection<NumberFilter> confidence) {
        if (confidence == null) {
            this.confidence = null;
            return;
        }

        this.confidence = new java.util.ArrayList<NumberFilter>(confidence);
    }

    /**
     * <p>
     * A finding's confidence. Confidence is defined as the likelihood that a
     * finding accurately identifies the behavior or issue that it was intended
     * to identify.
     * </p>
     * <p>
     * Confidence is scored on a 0-100 basis using a ratio scale, where 0 means
     * zero percent confidence and 100 means 100 percent confidence.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param confidence <p>
     *            A finding's confidence. Confidence is defined as the
     *            likelihood that a finding accurately identifies the behavior
     *            or issue that it was intended to identify.
     *            </p>
     *            <p>
     *            Confidence is scored on a 0-100 basis using a ratio scale,
     *            where 0 means zero percent confidence and 100 means 100
     *            percent confidence.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withConfidence(NumberFilter... confidence) {
        if (getConfidence() == null) {
            this.confidence = new java.util.ArrayList<NumberFilter>(confidence.length);
        }
        for (NumberFilter value : confidence) {
            this.confidence.add(value);
        }
        return this;
    }

    /**
     * <p>
     * A finding's confidence. Confidence is defined as the likelihood that a
     * finding accurately identifies the behavior or issue that it was intended
     * to identify.
     * </p>
     * <p>
     * Confidence is scored on a 0-100 basis using a ratio scale, where 0 means
     * zero percent confidence and 100 means 100 percent confidence.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param confidence <p>
     *            A finding's confidence. Confidence is defined as the
     *            likelihood that a finding accurately identifies the behavior
     *            or issue that it was intended to identify.
     *            </p>
     *            <p>
     *            Confidence is scored on a 0-100 basis using a ratio scale,
     *            where 0 means zero percent confidence and 100 means 100
     *            percent confidence.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withConfidence(java.util.Collection<NumberFilter> confidence) {
        setConfidence(confidence);
        return this;
    }

    /**
     * <p>
     * The level of importance assigned to the resources associated with the
     * finding.
     * </p>
     * <p>
     * A score of 0 means that the underlying resources have no criticality, and
     * a score of 100 is reserved for the most critical resources.
     * </p>
     *
     * @return <p>
     *         The level of importance assigned to the resources associated with
     *         the finding.
     *         </p>
     *         <p>
     *         A score of 0 means that the underlying resources have no
     *         criticality, and a score of 100 is reserved for the most critical
     *         resources.
     *         </p>
     */
    public java.util.List<NumberFilter> getCriticality() {
        return criticality;
    }

    /**
     * <p>
     * The level of importance assigned to the resources associated with the
     * finding.
     * </p>
     * <p>
     * A score of 0 means that the underlying resources have no criticality, and
     * a score of 100 is reserved for the most critical resources.
     * </p>
     *
     * @param criticality <p>
     *            The level of importance assigned to the resources associated
     *            with the finding.
     *            </p>
     *            <p>
     *            A score of 0 means that the underlying resources have no
     *            criticality, and a score of 100 is reserved for the most
     *            critical resources.
     *            </p>
     */
    public void setCriticality(java.util.Collection<NumberFilter> criticality) {
        if (criticality == null) {
            this.criticality = null;
            return;
        }

        this.criticality = new java.util.ArrayList<NumberFilter>(criticality);
    }

    /**
     * <p>
     * The level of importance assigned to the resources associated with the
     * finding.
     * </p>
     * <p>
     * A score of 0 means that the underlying resources have no criticality, and
     * a score of 100 is reserved for the most critical resources.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param criticality <p>
     *            The level of importance assigned to the resources associated
     *            with the finding.
     *            </p>
     *            <p>
     *            A score of 0 means that the underlying resources have no
     *            criticality, and a score of 100 is reserved for the most
     *            critical resources.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withCriticality(NumberFilter... criticality) {
        if (getCriticality() == null) {
            this.criticality = new java.util.ArrayList<NumberFilter>(criticality.length);
        }
        for (NumberFilter value : criticality) {
            this.criticality.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The level of importance assigned to the resources associated with the
     * finding.
     * </p>
     * <p>
     * A score of 0 means that the underlying resources have no criticality, and
     * a score of 100 is reserved for the most critical resources.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param criticality <p>
     *            The level of importance assigned to the resources associated
     *            with the finding.
     *            </p>
     *            <p>
     *            A score of 0 means that the underlying resources have no
     *            criticality, and a score of 100 is reserved for the most
     *            critical resources.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withCriticality(java.util.Collection<NumberFilter> criticality) {
        setCriticality(criticality);
        return this;
    }

    /**
     * <p>
     * A finding's title.
     * </p>
     *
     * @return <p>
     *         A finding's title.
     *         </p>
     */
    public java.util.List<StringFilter> getTitle() {
        return title;
    }

    /**
     * <p>
     * A finding's title.
     * </p>
     *
     * @param title <p>
     *            A finding's title.
     *            </p>
     */
    public void setTitle(java.util.Collection<StringFilter> title) {
        if (title == null) {
            this.title = null;
            return;
        }

        this.title = new java.util.ArrayList<StringFilter>(title);
    }

    /**
     * <p>
     * A finding's title.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param title <p>
     *            A finding's title.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withTitle(StringFilter... title) {
        if (getTitle() == null) {
            this.title = new java.util.ArrayList<StringFilter>(title.length);
        }
        for (StringFilter value : title) {
            this.title.add(value);
        }
        return this;
    }

    /**
     * <p>
     * A finding's title.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param title <p>
     *            A finding's title.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withTitle(java.util.Collection<StringFilter> title) {
        setTitle(title);
        return this;
    }

    /**
     * <p>
     * A finding's description.
     * </p>
     *
     * @return <p>
     *         A finding's description.
     *         </p>
     */
    public java.util.List<StringFilter> getDescription() {
        return description;
    }

    /**
     * <p>
     * A finding's description.
     * </p>
     *
     * @param description <p>
     *            A finding's description.
     *            </p>
     */
    public void setDescription(java.util.Collection<StringFilter> description) {
        if (description == null) {
            this.description = null;
            return;
        }

        this.description = new java.util.ArrayList<StringFilter>(description);
    }

    /**
     * <p>
     * A finding's description.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param description <p>
     *            A finding's description.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withDescription(StringFilter... description) {
        if (getDescription() == null) {
            this.description = new java.util.ArrayList<StringFilter>(description.length);
        }
        for (StringFilter value : description) {
            this.description.add(value);
        }
        return this;
    }

    /**
     * <p>
     * A finding's description.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param description <p>
     *            A finding's description.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withDescription(java.util.Collection<StringFilter> description) {
        setDescription(description);
        return this;
    }

    /**
     * <p>
     * The recommendation of what to do about the issue described in a finding.
     * </p>
     *
     * @return <p>
     *         The recommendation of what to do about the issue described in a
     *         finding.
     *         </p>
     */
    public java.util.List<StringFilter> getRecommendationText() {
        return recommendationText;
    }

    /**
     * <p>
     * The recommendation of what to do about the issue described in a finding.
     * </p>
     *
     * @param recommendationText <p>
     *            The recommendation of what to do about the issue described in
     *            a finding.
     *            </p>
     */
    public void setRecommendationText(java.util.Collection<StringFilter> recommendationText) {
        if (recommendationText == null) {
            this.recommendationText = null;
            return;
        }

        this.recommendationText = new java.util.ArrayList<StringFilter>(recommendationText);
    }

    /**
     * <p>
     * The recommendation of what to do about the issue described in a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param recommendationText <p>
     *            The recommendation of what to do about the issue described in
     *            a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withRecommendationText(StringFilter... recommendationText) {
        if (getRecommendationText() == null) {
            this.recommendationText = new java.util.ArrayList<StringFilter>(
                    recommendationText.length);
        }
        for (StringFilter value : recommendationText) {
            this.recommendationText.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The recommendation of what to do about the issue described in a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param recommendationText <p>
     *            The recommendation of what to do about the issue described in
     *            a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withRecommendationText(
            java.util.Collection<StringFilter> recommendationText) {
        setRecommendationText(recommendationText);
        return this;
    }

    /**
     * <p>
     * A URL that links to a page about the current finding in the
     * security-findings provider's solution.
     * </p>
     *
     * @return <p>
     *         A URL that links to a page about the current finding in the
     *         security-findings provider's solution.
     *         </p>
     */
    public java.util.List<StringFilter> getSourceUrl() {
        return sourceUrl;
    }

    /**
     * <p>
     * A URL that links to a page about the current finding in the
     * security-findings provider's solution.
     * </p>
     *
     * @param sourceUrl <p>
     *            A URL that links to a page about the current finding in the
     *            security-findings provider's solution.
     *            </p>
     */
    public void setSourceUrl(java.util.Collection<StringFilter> sourceUrl) {
        if (sourceUrl == null) {
            this.sourceUrl = null;
            return;
        }

        this.sourceUrl = new java.util.ArrayList<StringFilter>(sourceUrl);
    }

    /**
     * <p>
     * A URL that links to a page about the current finding in the
     * security-findings provider's solution.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param sourceUrl <p>
     *            A URL that links to a page about the current finding in the
     *            security-findings provider's solution.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withSourceUrl(StringFilter... sourceUrl) {
        if (getSourceUrl() == null) {
            this.sourceUrl = new java.util.ArrayList<StringFilter>(sourceUrl.length);
        }
        for (StringFilter value : sourceUrl) {
            this.sourceUrl.add(value);
        }
        return this;
    }

    /**
     * <p>
     * A URL that links to a page about the current finding in the
     * security-findings provider's solution.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param sourceUrl <p>
     *            A URL that links to a page about the current finding in the
     *            security-findings provider's solution.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withSourceUrl(java.util.Collection<StringFilter> sourceUrl) {
        setSourceUrl(sourceUrl);
        return this;
    }

    /**
     * <p>
     * A data type where security-findings providers can include additional
     * solution-specific details that aren't part of the defined
     * <code>AwsSecurityFinding</code> format.
     * </p>
     *
     * @return <p>
     *         A data type where security-findings providers can include
     *         additional solution-specific details that aren't part of the
     *         defined <code>AwsSecurityFinding</code> format.
     *         </p>
     */
    public java.util.List<MapFilter> getProductFields() {
        return productFields;
    }

    /**
     * <p>
     * A data type where security-findings providers can include additional
     * solution-specific details that aren't part of the defined
     * <code>AwsSecurityFinding</code> format.
     * </p>
     *
     * @param productFields <p>
     *            A data type where security-findings providers can include
     *            additional solution-specific details that aren't part of the
     *            defined <code>AwsSecurityFinding</code> format.
     *            </p>
     */
    public void setProductFields(java.util.Collection<MapFilter> productFields) {
        if (productFields == null) {
            this.productFields = null;
            return;
        }

        this.productFields = new java.util.ArrayList<MapFilter>(productFields);
    }

    /**
     * <p>
     * A data type where security-findings providers can include additional
     * solution-specific details that aren't part of the defined
     * <code>AwsSecurityFinding</code> format.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param productFields <p>
     *            A data type where security-findings providers can include
     *            additional solution-specific details that aren't part of the
     *            defined <code>AwsSecurityFinding</code> format.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProductFields(MapFilter... productFields) {
        if (getProductFields() == null) {
            this.productFields = new java.util.ArrayList<MapFilter>(productFields.length);
        }
        for (MapFilter value : productFields) {
            this.productFields.add(value);
        }
        return this;
    }

    /**
     * <p>
     * A data type where security-findings providers can include additional
     * solution-specific details that aren't part of the defined
     * <code>AwsSecurityFinding</code> format.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param productFields <p>
     *            A data type where security-findings providers can include
     *            additional solution-specific details that aren't part of the
     *            defined <code>AwsSecurityFinding</code> format.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProductFields(java.util.Collection<MapFilter> productFields) {
        setProductFields(productFields);
        return this;
    }

    /**
     * <p>
     * The name of the solution (product) that generates findings.
     * </p>
     *
     * @return <p>
     *         The name of the solution (product) that generates findings.
     *         </p>
     */
    public java.util.List<StringFilter> getProductName() {
        return productName;
    }

    /**
     * <p>
     * The name of the solution (product) that generates findings.
     * </p>
     *
     * @param productName <p>
     *            The name of the solution (product) that generates findings.
     *            </p>
     */
    public void setProductName(java.util.Collection<StringFilter> productName) {
        if (productName == null) {
            this.productName = null;
            return;
        }

        this.productName = new java.util.ArrayList<StringFilter>(productName);
    }

    /**
     * <p>
     * The name of the solution (product) that generates findings.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param productName <p>
     *            The name of the solution (product) that generates findings.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProductName(StringFilter... productName) {
        if (getProductName() == null) {
            this.productName = new java.util.ArrayList<StringFilter>(productName.length);
        }
        for (StringFilter value : productName) {
            this.productName.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The name of the solution (product) that generates findings.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param productName <p>
     *            The name of the solution (product) that generates findings.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProductName(java.util.Collection<StringFilter> productName) {
        setProductName(productName);
        return this;
    }

    /**
     * <p>
     * The name of the findings provider (company) that owns the solution
     * (product) that generates findings.
     * </p>
     *
     * @return <p>
     *         The name of the findings provider (company) that owns the
     *         solution (product) that generates findings.
     *         </p>
     */
    public java.util.List<StringFilter> getCompanyName() {
        return companyName;
    }

    /**
     * <p>
     * The name of the findings provider (company) that owns the solution
     * (product) that generates findings.
     * </p>
     *
     * @param companyName <p>
     *            The name of the findings provider (company) that owns the
     *            solution (product) that generates findings.
     *            </p>
     */
    public void setCompanyName(java.util.Collection<StringFilter> companyName) {
        if (companyName == null) {
            this.companyName = null;
            return;
        }

        this.companyName = new java.util.ArrayList<StringFilter>(companyName);
    }

    /**
     * <p>
     * The name of the findings provider (company) that owns the solution
     * (product) that generates findings.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param companyName <p>
     *            The name of the findings provider (company) that owns the
     *            solution (product) that generates findings.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withCompanyName(StringFilter... companyName) {
        if (getCompanyName() == null) {
            this.companyName = new java.util.ArrayList<StringFilter>(companyName.length);
        }
        for (StringFilter value : companyName) {
            this.companyName.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The name of the findings provider (company) that owns the solution
     * (product) that generates findings.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param companyName <p>
     *            The name of the findings provider (company) that owns the
     *            solution (product) that generates findings.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withCompanyName(java.util.Collection<StringFilter> companyName) {
        setCompanyName(companyName);
        return this;
    }

    /**
     * <p>
     * A list of name/value string pairs associated with the finding. These are
     * custom, user-defined fields added to a finding.
     * </p>
     *
     * @return <p>
     *         A list of name/value string pairs associated with the finding.
     *         These are custom, user-defined fields added to a finding.
     *         </p>
     */
    public java.util.List<MapFilter> getUserDefinedFields() {
        return userDefinedFields;
    }

    /**
     * <p>
     * A list of name/value string pairs associated with the finding. These are
     * custom, user-defined fields added to a finding.
     * </p>
     *
     * @param userDefinedFields <p>
     *            A list of name/value string pairs associated with the finding.
     *            These are custom, user-defined fields added to a finding.
     *            </p>
     */
    public void setUserDefinedFields(java.util.Collection<MapFilter> userDefinedFields) {
        if (userDefinedFields == null) {
            this.userDefinedFields = null;
            return;
        }

        this.userDefinedFields = new java.util.ArrayList<MapFilter>(userDefinedFields);
    }

    /**
     * <p>
     * A list of name/value string pairs associated with the finding. These are
     * custom, user-defined fields added to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param userDefinedFields <p>
     *            A list of name/value string pairs associated with the finding.
     *            These are custom, user-defined fields added to a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withUserDefinedFields(MapFilter... userDefinedFields) {
        if (getUserDefinedFields() == null) {
            this.userDefinedFields = new java.util.ArrayList<MapFilter>(userDefinedFields.length);
        }
        for (MapFilter value : userDefinedFields) {
            this.userDefinedFields.add(value);
        }
        return this;
    }

    /**
     * <p>
     * A list of name/value string pairs associated with the finding. These are
     * custom, user-defined fields added to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param userDefinedFields <p>
     *            A list of name/value string pairs associated with the finding.
     *            These are custom, user-defined fields added to a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withUserDefinedFields(
            java.util.Collection<MapFilter> userDefinedFields) {
        setUserDefinedFields(userDefinedFields);
        return this;
    }

    /**
     * <p>
     * The name of the malware that was observed.
     * </p>
     *
     * @return <p>
     *         The name of the malware that was observed.
     *         </p>
     */
    public java.util.List<StringFilter> getMalwareName() {
        return malwareName;
    }

    /**
     * <p>
     * The name of the malware that was observed.
     * </p>
     *
     * @param malwareName <p>
     *            The name of the malware that was observed.
     *            </p>
     */
    public void setMalwareName(java.util.Collection<StringFilter> malwareName) {
        if (malwareName == null) {
            this.malwareName = null;
            return;
        }

        this.malwareName = new java.util.ArrayList<StringFilter>(malwareName);
    }

    /**
     * <p>
     * The name of the malware that was observed.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param malwareName <p>
     *            The name of the malware that was observed.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withMalwareName(StringFilter... malwareName) {
        if (getMalwareName() == null) {
            this.malwareName = new java.util.ArrayList<StringFilter>(malwareName.length);
        }
        for (StringFilter value : malwareName) {
            this.malwareName.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The name of the malware that was observed.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param malwareName <p>
     *            The name of the malware that was observed.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withMalwareName(java.util.Collection<StringFilter> malwareName) {
        setMalwareName(malwareName);
        return this;
    }

    /**
     * <p>
     * The type of the malware that was observed.
     * </p>
     *
     * @return <p>
     *         The type of the malware that was observed.
     *         </p>
     */
    public java.util.List<StringFilter> getMalwareType() {
        return malwareType;
    }

    /**
     * <p>
     * The type of the malware that was observed.
     * </p>
     *
     * @param malwareType <p>
     *            The type of the malware that was observed.
     *            </p>
     */
    public void setMalwareType(java.util.Collection<StringFilter> malwareType) {
        if (malwareType == null) {
            this.malwareType = null;
            return;
        }

        this.malwareType = new java.util.ArrayList<StringFilter>(malwareType);
    }

    /**
     * <p>
     * The type of the malware that was observed.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param malwareType <p>
     *            The type of the malware that was observed.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withMalwareType(StringFilter... malwareType) {
        if (getMalwareType() == null) {
            this.malwareType = new java.util.ArrayList<StringFilter>(malwareType.length);
        }
        for (StringFilter value : malwareType) {
            this.malwareType.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The type of the malware that was observed.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param malwareType <p>
     *            The type of the malware that was observed.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withMalwareType(java.util.Collection<StringFilter> malwareType) {
        setMalwareType(malwareType);
        return this;
    }

    /**
     * <p>
     * The filesystem path of the malware that was observed.
     * </p>
     *
     * @return <p>
     *         The filesystem path of the malware that was observed.
     *         </p>
     */
    public java.util.List<StringFilter> getMalwarePath() {
        return malwarePath;
    }

    /**
     * <p>
     * The filesystem path of the malware that was observed.
     * </p>
     *
     * @param malwarePath <p>
     *            The filesystem path of the malware that was observed.
     *            </p>
     */
    public void setMalwarePath(java.util.Collection<StringFilter> malwarePath) {
        if (malwarePath == null) {
            this.malwarePath = null;
            return;
        }

        this.malwarePath = new java.util.ArrayList<StringFilter>(malwarePath);
    }

    /**
     * <p>
     * The filesystem path of the malware that was observed.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param malwarePath <p>
     *            The filesystem path of the malware that was observed.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withMalwarePath(StringFilter... malwarePath) {
        if (getMalwarePath() == null) {
            this.malwarePath = new java.util.ArrayList<StringFilter>(malwarePath.length);
        }
        for (StringFilter value : malwarePath) {
            this.malwarePath.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The filesystem path of the malware that was observed.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param malwarePath <p>
     *            The filesystem path of the malware that was observed.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withMalwarePath(java.util.Collection<StringFilter> malwarePath) {
        setMalwarePath(malwarePath);
        return this;
    }

    /**
     * <p>
     * The state of the malware that was observed.
     * </p>
     *
     * @return <p>
     *         The state of the malware that was observed.
     *         </p>
     */
    public java.util.List<StringFilter> getMalwareState() {
        return malwareState;
    }

    /**
     * <p>
     * The state of the malware that was observed.
     * </p>
     *
     * @param malwareState <p>
     *            The state of the malware that was observed.
     *            </p>
     */
    public void setMalwareState(java.util.Collection<StringFilter> malwareState) {
        if (malwareState == null) {
            this.malwareState = null;
            return;
        }

        this.malwareState = new java.util.ArrayList<StringFilter>(malwareState);
    }

    /**
     * <p>
     * The state of the malware that was observed.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param malwareState <p>
     *            The state of the malware that was observed.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withMalwareState(StringFilter... malwareState) {
        if (getMalwareState() == null) {
            this.malwareState = new java.util.ArrayList<StringFilter>(malwareState.length);
        }
        for (StringFilter value : malwareState) {
            this.malwareState.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The state of the malware that was observed.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param malwareState <p>
     *            The state of the malware that was observed.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withMalwareState(
            java.util.Collection<StringFilter> malwareState) {
        setMalwareState(malwareState);
        return this;
    }

    /**
     * <p>
     * Indicates the direction of network traffic associated with a finding.
     * </p>
     *
     * @return <p>
     *         Indicates the direction of network traffic associated with a
     *         finding.
     *         </p>
     */
    public java.util.List<StringFilter> getNetworkDirection() {
        return networkDirection;
    }

    /**
     * <p>
     * Indicates the direction of network traffic associated with a finding.
     * </p>
     *
     * @param networkDirection <p>
     *            Indicates the direction of network traffic associated with a
     *            finding.
     *            </p>
     */
    public void setNetworkDirection(java.util.Collection<StringFilter> networkDirection) {
        if (networkDirection == null) {
            this.networkDirection = null;
            return;
        }

        this.networkDirection = new java.util.ArrayList<StringFilter>(networkDirection);
    }

    /**
     * <p>
     * Indicates the direction of network traffic associated with a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkDirection <p>
     *            Indicates the direction of network traffic associated with a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkDirection(StringFilter... networkDirection) {
        if (getNetworkDirection() == null) {
            this.networkDirection = new java.util.ArrayList<StringFilter>(networkDirection.length);
        }
        for (StringFilter value : networkDirection) {
            this.networkDirection.add(value);
        }
        return this;
    }

    /**
     * <p>
     * Indicates the direction of network traffic associated with a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkDirection <p>
     *            Indicates the direction of network traffic associated with a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkDirection(
            java.util.Collection<StringFilter> networkDirection) {
        setNetworkDirection(networkDirection);
        return this;
    }

    /**
     * <p>
     * The protocol of network-related information about a finding.
     * </p>
     *
     * @return <p>
     *         The protocol of network-related information about a finding.
     *         </p>
     */
    public java.util.List<StringFilter> getNetworkProtocol() {
        return networkProtocol;
    }

    /**
     * <p>
     * The protocol of network-related information about a finding.
     * </p>
     *
     * @param networkProtocol <p>
     *            The protocol of network-related information about a finding.
     *            </p>
     */
    public void setNetworkProtocol(java.util.Collection<StringFilter> networkProtocol) {
        if (networkProtocol == null) {
            this.networkProtocol = null;
            return;
        }

        this.networkProtocol = new java.util.ArrayList<StringFilter>(networkProtocol);
    }

    /**
     * <p>
     * The protocol of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkProtocol <p>
     *            The protocol of network-related information about a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkProtocol(StringFilter... networkProtocol) {
        if (getNetworkProtocol() == null) {
            this.networkProtocol = new java.util.ArrayList<StringFilter>(networkProtocol.length);
        }
        for (StringFilter value : networkProtocol) {
            this.networkProtocol.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The protocol of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkProtocol <p>
     *            The protocol of network-related information about a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkProtocol(
            java.util.Collection<StringFilter> networkProtocol) {
        setNetworkProtocol(networkProtocol);
        return this;
    }

    /**
     * <p>
     * The source IPv4 address of network-related information about a finding.
     * </p>
     *
     * @return <p>
     *         The source IPv4 address of network-related information about a
     *         finding.
     *         </p>
     */
    public java.util.List<IpFilter> getNetworkSourceIpV4() {
        return networkSourceIpV4;
    }

    /**
     * <p>
     * The source IPv4 address of network-related information about a finding.
     * </p>
     *
     * @param networkSourceIpV4 <p>
     *            The source IPv4 address of network-related information about a
     *            finding.
     *            </p>
     */
    public void setNetworkSourceIpV4(java.util.Collection<IpFilter> networkSourceIpV4) {
        if (networkSourceIpV4 == null) {
            this.networkSourceIpV4 = null;
            return;
        }

        this.networkSourceIpV4 = new java.util.ArrayList<IpFilter>(networkSourceIpV4);
    }

    /**
     * <p>
     * The source IPv4 address of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkSourceIpV4 <p>
     *            The source IPv4 address of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkSourceIpV4(IpFilter... networkSourceIpV4) {
        if (getNetworkSourceIpV4() == null) {
            this.networkSourceIpV4 = new java.util.ArrayList<IpFilter>(networkSourceIpV4.length);
        }
        for (IpFilter value : networkSourceIpV4) {
            this.networkSourceIpV4.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The source IPv4 address of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkSourceIpV4 <p>
     *            The source IPv4 address of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkSourceIpV4(
            java.util.Collection<IpFilter> networkSourceIpV4) {
        setNetworkSourceIpV4(networkSourceIpV4);
        return this;
    }

    /**
     * <p>
     * The source IPv6 address of network-related information about a finding.
     * </p>
     *
     * @return <p>
     *         The source IPv6 address of network-related information about a
     *         finding.
     *         </p>
     */
    public java.util.List<IpFilter> getNetworkSourceIpV6() {
        return networkSourceIpV6;
    }

    /**
     * <p>
     * The source IPv6 address of network-related information about a finding.
     * </p>
     *
     * @param networkSourceIpV6 <p>
     *            The source IPv6 address of network-related information about a
     *            finding.
     *            </p>
     */
    public void setNetworkSourceIpV6(java.util.Collection<IpFilter> networkSourceIpV6) {
        if (networkSourceIpV6 == null) {
            this.networkSourceIpV6 = null;
            return;
        }

        this.networkSourceIpV6 = new java.util.ArrayList<IpFilter>(networkSourceIpV6);
    }

    /**
     * <p>
     * The source IPv6 address of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkSourceIpV6 <p>
     *            The source IPv6 address of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkSourceIpV6(IpFilter... networkSourceIpV6) {
        if (getNetworkSourceIpV6() == null) {
            this.networkSourceIpV6 = new java.util.ArrayList<IpFilter>(networkSourceIpV6.length);
        }
        for (IpFilter value : networkSourceIpV6) {
            this.networkSourceIpV6.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The source IPv6 address of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkSourceIpV6 <p>
     *            The source IPv6 address of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkSourceIpV6(
            java.util.Collection<IpFilter> networkSourceIpV6) {
        setNetworkSourceIpV6(networkSourceIpV6);
        return this;
    }

    /**
     * <p>
     * The source port of network-related information about a finding.
     * </p>
     *
     * @return <p>
     *         The source port of network-related information about a finding.
     *         </p>
     */
    public java.util.List<NumberFilter> getNetworkSourcePort() {
        return networkSourcePort;
    }

    /**
     * <p>
     * The source port of network-related information about a finding.
     * </p>
     *
     * @param networkSourcePort <p>
     *            The source port of network-related information about a
     *            finding.
     *            </p>
     */
    public void setNetworkSourcePort(java.util.Collection<NumberFilter> networkSourcePort) {
        if (networkSourcePort == null) {
            this.networkSourcePort = null;
            return;
        }

        this.networkSourcePort = new java.util.ArrayList<NumberFilter>(networkSourcePort);
    }

    /**
     * <p>
     * The source port of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkSourcePort <p>
     *            The source port of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkSourcePort(NumberFilter... networkSourcePort) {
        if (getNetworkSourcePort() == null) {
            this.networkSourcePort = new java.util.ArrayList<NumberFilter>(networkSourcePort.length);
        }
        for (NumberFilter value : networkSourcePort) {
            this.networkSourcePort.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The source port of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkSourcePort <p>
     *            The source port of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkSourcePort(
            java.util.Collection<NumberFilter> networkSourcePort) {
        setNetworkSourcePort(networkSourcePort);
        return this;
    }

    /**
     * <p>
     * The source domain of network-related information about a finding.
     * </p>
     *
     * @return <p>
     *         The source domain of network-related information about a finding.
     *         </p>
     */
    public java.util.List<StringFilter> getNetworkSourceDomain() {
        return networkSourceDomain;
    }

    /**
     * <p>
     * The source domain of network-related information about a finding.
     * </p>
     *
     * @param networkSourceDomain <p>
     *            The source domain of network-related information about a
     *            finding.
     *            </p>
     */
    public void setNetworkSourceDomain(java.util.Collection<StringFilter> networkSourceDomain) {
        if (networkSourceDomain == null) {
            this.networkSourceDomain = null;
            return;
        }

        this.networkSourceDomain = new java.util.ArrayList<StringFilter>(networkSourceDomain);
    }

    /**
     * <p>
     * The source domain of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkSourceDomain <p>
     *            The source domain of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkSourceDomain(StringFilter... networkSourceDomain) {
        if (getNetworkSourceDomain() == null) {
            this.networkSourceDomain = new java.util.ArrayList<StringFilter>(
                    networkSourceDomain.length);
        }
        for (StringFilter value : networkSourceDomain) {
            this.networkSourceDomain.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The source domain of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkSourceDomain <p>
     *            The source domain of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkSourceDomain(
            java.util.Collection<StringFilter> networkSourceDomain) {
        setNetworkSourceDomain(networkSourceDomain);
        return this;
    }

    /**
     * <p>
     * The source media access control (MAC) address of network-related
     * information about a finding.
     * </p>
     *
     * @return <p>
     *         The source media access control (MAC) address of network-related
     *         information about a finding.
     *         </p>
     */
    public java.util.List<StringFilter> getNetworkSourceMac() {
        return networkSourceMac;
    }

    /**
     * <p>
     * The source media access control (MAC) address of network-related
     * information about a finding.
     * </p>
     *
     * @param networkSourceMac <p>
     *            The source media access control (MAC) address of
     *            network-related information about a finding.
     *            </p>
     */
    public void setNetworkSourceMac(java.util.Collection<StringFilter> networkSourceMac) {
        if (networkSourceMac == null) {
            this.networkSourceMac = null;
            return;
        }

        this.networkSourceMac = new java.util.ArrayList<StringFilter>(networkSourceMac);
    }

    /**
     * <p>
     * The source media access control (MAC) address of network-related
     * information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkSourceMac <p>
     *            The source media access control (MAC) address of
     *            network-related information about a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkSourceMac(StringFilter... networkSourceMac) {
        if (getNetworkSourceMac() == null) {
            this.networkSourceMac = new java.util.ArrayList<StringFilter>(networkSourceMac.length);
        }
        for (StringFilter value : networkSourceMac) {
            this.networkSourceMac.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The source media access control (MAC) address of network-related
     * information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkSourceMac <p>
     *            The source media access control (MAC) address of
     *            network-related information about a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkSourceMac(
            java.util.Collection<StringFilter> networkSourceMac) {
        setNetworkSourceMac(networkSourceMac);
        return this;
    }

    /**
     * <p>
     * The destination IPv4 address of network-related information about a
     * finding.
     * </p>
     *
     * @return <p>
     *         The destination IPv4 address of network-related information about
     *         a finding.
     *         </p>
     */
    public java.util.List<IpFilter> getNetworkDestinationIpV4() {
        return networkDestinationIpV4;
    }

    /**
     * <p>
     * The destination IPv4 address of network-related information about a
     * finding.
     * </p>
     *
     * @param networkDestinationIpV4 <p>
     *            The destination IPv4 address of network-related information
     *            about a finding.
     *            </p>
     */
    public void setNetworkDestinationIpV4(java.util.Collection<IpFilter> networkDestinationIpV4) {
        if (networkDestinationIpV4 == null) {
            this.networkDestinationIpV4 = null;
            return;
        }

        this.networkDestinationIpV4 = new java.util.ArrayList<IpFilter>(networkDestinationIpV4);
    }

    /**
     * <p>
     * The destination IPv4 address of network-related information about a
     * finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkDestinationIpV4 <p>
     *            The destination IPv4 address of network-related information
     *            about a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkDestinationIpV4(IpFilter... networkDestinationIpV4) {
        if (getNetworkDestinationIpV4() == null) {
            this.networkDestinationIpV4 = new java.util.ArrayList<IpFilter>(
                    networkDestinationIpV4.length);
        }
        for (IpFilter value : networkDestinationIpV4) {
            this.networkDestinationIpV4.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The destination IPv4 address of network-related information about a
     * finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkDestinationIpV4 <p>
     *            The destination IPv4 address of network-related information
     *            about a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkDestinationIpV4(
            java.util.Collection<IpFilter> networkDestinationIpV4) {
        setNetworkDestinationIpV4(networkDestinationIpV4);
        return this;
    }

    /**
     * <p>
     * The destination IPv6 address of network-related information about a
     * finding.
     * </p>
     *
     * @return <p>
     *         The destination IPv6 address of network-related information about
     *         a finding.
     *         </p>
     */
    public java.util.List<IpFilter> getNetworkDestinationIpV6() {
        return networkDestinationIpV6;
    }

    /**
     * <p>
     * The destination IPv6 address of network-related information about a
     * finding.
     * </p>
     *
     * @param networkDestinationIpV6 <p>
     *            The destination IPv6 address of network-related information
     *            about a finding.
     *            </p>
     */
    public void setNetworkDestinationIpV6(java.util.Collection<IpFilter> networkDestinationIpV6) {
        if (networkDestinationIpV6 == null) {
            this.networkDestinationIpV6 = null;
            return;
        }

        this.networkDestinationIpV6 = new java.util.ArrayList<IpFilter>(networkDestinationIpV6);
    }

    /**
     * <p>
     * The destination IPv6 address of network-related information about a
     * finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkDestinationIpV6 <p>
     *            The destination IPv6 address of network-related information
     *            about a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkDestinationIpV6(IpFilter... networkDestinationIpV6) {
        if (getNetworkDestinationIpV6() == null) {
            this.networkDestinationIpV6 = new java.util.ArrayList<IpFilter>(
                    networkDestinationIpV6.length);
        }
        for (IpFilter value : networkDestinationIpV6) {
            this.networkDestinationIpV6.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The destination IPv6 address of network-related information about a
     * finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkDestinationIpV6 <p>
     *            The destination IPv6 address of network-related information
     *            about a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkDestinationIpV6(
            java.util.Collection<IpFilter> networkDestinationIpV6) {
        setNetworkDestinationIpV6(networkDestinationIpV6);
        return this;
    }

    /**
     * <p>
     * The destination port of network-related information about a finding.
     * </p>
     *
     * @return <p>
     *         The destination port of network-related information about a
     *         finding.
     *         </p>
     */
    public java.util.List<NumberFilter> getNetworkDestinationPort() {
        return networkDestinationPort;
    }

    /**
     * <p>
     * The destination port of network-related information about a finding.
     * </p>
     *
     * @param networkDestinationPort <p>
     *            The destination port of network-related information about a
     *            finding.
     *            </p>
     */
    public void setNetworkDestinationPort(java.util.Collection<NumberFilter> networkDestinationPort) {
        if (networkDestinationPort == null) {
            this.networkDestinationPort = null;
            return;
        }

        this.networkDestinationPort = new java.util.ArrayList<NumberFilter>(networkDestinationPort);
    }

    /**
     * <p>
     * The destination port of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkDestinationPort <p>
     *            The destination port of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkDestinationPort(
            NumberFilter... networkDestinationPort) {
        if (getNetworkDestinationPort() == null) {
            this.networkDestinationPort = new java.util.ArrayList<NumberFilter>(
                    networkDestinationPort.length);
        }
        for (NumberFilter value : networkDestinationPort) {
            this.networkDestinationPort.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The destination port of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkDestinationPort <p>
     *            The destination port of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkDestinationPort(
            java.util.Collection<NumberFilter> networkDestinationPort) {
        setNetworkDestinationPort(networkDestinationPort);
        return this;
    }

    /**
     * <p>
     * The destination domain of network-related information about a finding.
     * </p>
     *
     * @return <p>
     *         The destination domain of network-related information about a
     *         finding.
     *         </p>
     */
    public java.util.List<StringFilter> getNetworkDestinationDomain() {
        return networkDestinationDomain;
    }

    /**
     * <p>
     * The destination domain of network-related information about a finding.
     * </p>
     *
     * @param networkDestinationDomain <p>
     *            The destination domain of network-related information about a
     *            finding.
     *            </p>
     */
    public void setNetworkDestinationDomain(
            java.util.Collection<StringFilter> networkDestinationDomain) {
        if (networkDestinationDomain == null) {
            this.networkDestinationDomain = null;
            return;
        }

        this.networkDestinationDomain = new java.util.ArrayList<StringFilter>(
                networkDestinationDomain);
    }

    /**
     * <p>
     * The destination domain of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkDestinationDomain <p>
     *            The destination domain of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkDestinationDomain(
            StringFilter... networkDestinationDomain) {
        if (getNetworkDestinationDomain() == null) {
            this.networkDestinationDomain = new java.util.ArrayList<StringFilter>(
                    networkDestinationDomain.length);
        }
        for (StringFilter value : networkDestinationDomain) {
            this.networkDestinationDomain.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The destination domain of network-related information about a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param networkDestinationDomain <p>
     *            The destination domain of network-related information about a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNetworkDestinationDomain(
            java.util.Collection<StringFilter> networkDestinationDomain) {
        setNetworkDestinationDomain(networkDestinationDomain);
        return this;
    }

    /**
     * <p>
     * The name of the process.
     * </p>
     *
     * @return <p>
     *         The name of the process.
     *         </p>
     */
    public java.util.List<StringFilter> getProcessName() {
        return processName;
    }

    /**
     * <p>
     * The name of the process.
     * </p>
     *
     * @param processName <p>
     *            The name of the process.
     *            </p>
     */
    public void setProcessName(java.util.Collection<StringFilter> processName) {
        if (processName == null) {
            this.processName = null;
            return;
        }

        this.processName = new java.util.ArrayList<StringFilter>(processName);
    }

    /**
     * <p>
     * The name of the process.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processName <p>
     *            The name of the process.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessName(StringFilter... processName) {
        if (getProcessName() == null) {
            this.processName = new java.util.ArrayList<StringFilter>(processName.length);
        }
        for (StringFilter value : processName) {
            this.processName.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The name of the process.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processName <p>
     *            The name of the process.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessName(java.util.Collection<StringFilter> processName) {
        setProcessName(processName);
        return this;
    }

    /**
     * <p>
     * The path to the process executable.
     * </p>
     *
     * @return <p>
     *         The path to the process executable.
     *         </p>
     */
    public java.util.List<StringFilter> getProcessPath() {
        return processPath;
    }

    /**
     * <p>
     * The path to the process executable.
     * </p>
     *
     * @param processPath <p>
     *            The path to the process executable.
     *            </p>
     */
    public void setProcessPath(java.util.Collection<StringFilter> processPath) {
        if (processPath == null) {
            this.processPath = null;
            return;
        }

        this.processPath = new java.util.ArrayList<StringFilter>(processPath);
    }

    /**
     * <p>
     * The path to the process executable.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processPath <p>
     *            The path to the process executable.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessPath(StringFilter... processPath) {
        if (getProcessPath() == null) {
            this.processPath = new java.util.ArrayList<StringFilter>(processPath.length);
        }
        for (StringFilter value : processPath) {
            this.processPath.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The path to the process executable.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processPath <p>
     *            The path to the process executable.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessPath(java.util.Collection<StringFilter> processPath) {
        setProcessPath(processPath);
        return this;
    }

    /**
     * <p>
     * The process ID.
     * </p>
     *
     * @return <p>
     *         The process ID.
     *         </p>
     */
    public java.util.List<NumberFilter> getProcessPid() {
        return processPid;
    }

    /**
     * <p>
     * The process ID.
     * </p>
     *
     * @param processPid <p>
     *            The process ID.
     *            </p>
     */
    public void setProcessPid(java.util.Collection<NumberFilter> processPid) {
        if (processPid == null) {
            this.processPid = null;
            return;
        }

        this.processPid = new java.util.ArrayList<NumberFilter>(processPid);
    }

    /**
     * <p>
     * The process ID.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processPid <p>
     *            The process ID.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessPid(NumberFilter... processPid) {
        if (getProcessPid() == null) {
            this.processPid = new java.util.ArrayList<NumberFilter>(processPid.length);
        }
        for (NumberFilter value : processPid) {
            this.processPid.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The process ID.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processPid <p>
     *            The process ID.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessPid(java.util.Collection<NumberFilter> processPid) {
        setProcessPid(processPid);
        return this;
    }

    /**
     * <p>
     * The parent process ID.
     * </p>
     *
     * @return <p>
     *         The parent process ID.
     *         </p>
     */
    public java.util.List<NumberFilter> getProcessParentPid() {
        return processParentPid;
    }

    /**
     * <p>
     * The parent process ID.
     * </p>
     *
     * @param processParentPid <p>
     *            The parent process ID.
     *            </p>
     */
    public void setProcessParentPid(java.util.Collection<NumberFilter> processParentPid) {
        if (processParentPid == null) {
            this.processParentPid = null;
            return;
        }

        this.processParentPid = new java.util.ArrayList<NumberFilter>(processParentPid);
    }

    /**
     * <p>
     * The parent process ID.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processParentPid <p>
     *            The parent process ID.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessParentPid(NumberFilter... processParentPid) {
        if (getProcessParentPid() == null) {
            this.processParentPid = new java.util.ArrayList<NumberFilter>(processParentPid.length);
        }
        for (NumberFilter value : processParentPid) {
            this.processParentPid.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The parent process ID.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processParentPid <p>
     *            The parent process ID.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessParentPid(
            java.util.Collection<NumberFilter> processParentPid) {
        setProcessParentPid(processParentPid);
        return this;
    }

    /**
     * <p>
     * The date/time that the process was launched.
     * </p>
     *
     * @return <p>
     *         The date/time that the process was launched.
     *         </p>
     */
    public java.util.List<DateFilter> getProcessLaunchedAt() {
        return processLaunchedAt;
    }

    /**
     * <p>
     * The date/time that the process was launched.
     * </p>
     *
     * @param processLaunchedAt <p>
     *            The date/time that the process was launched.
     *            </p>
     */
    public void setProcessLaunchedAt(java.util.Collection<DateFilter> processLaunchedAt) {
        if (processLaunchedAt == null) {
            this.processLaunchedAt = null;
            return;
        }

        this.processLaunchedAt = new java.util.ArrayList<DateFilter>(processLaunchedAt);
    }

    /**
     * <p>
     * The date/time that the process was launched.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processLaunchedAt <p>
     *            The date/time that the process was launched.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessLaunchedAt(DateFilter... processLaunchedAt) {
        if (getProcessLaunchedAt() == null) {
            this.processLaunchedAt = new java.util.ArrayList<DateFilter>(processLaunchedAt.length);
        }
        for (DateFilter value : processLaunchedAt) {
            this.processLaunchedAt.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The date/time that the process was launched.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processLaunchedAt <p>
     *            The date/time that the process was launched.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessLaunchedAt(
            java.util.Collection<DateFilter> processLaunchedAt) {
        setProcessLaunchedAt(processLaunchedAt);
        return this;
    }

    /**
     * <p>
     * The date/time that the process was terminated.
     * </p>
     *
     * @return <p>
     *         The date/time that the process was terminated.
     *         </p>
     */
    public java.util.List<DateFilter> getProcessTerminatedAt() {
        return processTerminatedAt;
    }

    /**
     * <p>
     * The date/time that the process was terminated.
     * </p>
     *
     * @param processTerminatedAt <p>
     *            The date/time that the process was terminated.
     *            </p>
     */
    public void setProcessTerminatedAt(java.util.Collection<DateFilter> processTerminatedAt) {
        if (processTerminatedAt == null) {
            this.processTerminatedAt = null;
            return;
        }

        this.processTerminatedAt = new java.util.ArrayList<DateFilter>(processTerminatedAt);
    }

    /**
     * <p>
     * The date/time that the process was terminated.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processTerminatedAt <p>
     *            The date/time that the process was terminated.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessTerminatedAt(DateFilter... processTerminatedAt) {
        if (getProcessTerminatedAt() == null) {
            this.processTerminatedAt = new java.util.ArrayList<DateFilter>(
                    processTerminatedAt.length);
        }
        for (DateFilter value : processTerminatedAt) {
            this.processTerminatedAt.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The date/time that the process was terminated.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param processTerminatedAt <p>
     *            The date/time that the process was terminated.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withProcessTerminatedAt(
            java.util.Collection<DateFilter> processTerminatedAt) {
        setProcessTerminatedAt(processTerminatedAt);
        return this;
    }

    /**
     * <p>
     * The type of a threat intelligence indicator.
     * </p>
     *
     * @return <p>
     *         The type of a threat intelligence indicator.
     *         </p>
     */
    public java.util.List<StringFilter> getThreatIntelIndicatorType() {
        return threatIntelIndicatorType;
    }

    /**
     * <p>
     * The type of a threat intelligence indicator.
     * </p>
     *
     * @param threatIntelIndicatorType <p>
     *            The type of a threat intelligence indicator.
     *            </p>
     */
    public void setThreatIntelIndicatorType(
            java.util.Collection<StringFilter> threatIntelIndicatorType) {
        if (threatIntelIndicatorType == null) {
            this.threatIntelIndicatorType = null;
            return;
        }

        this.threatIntelIndicatorType = new java.util.ArrayList<StringFilter>(
                threatIntelIndicatorType);
    }

    /**
     * <p>
     * The type of a threat intelligence indicator.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorType <p>
     *            The type of a threat intelligence indicator.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorType(
            StringFilter... threatIntelIndicatorType) {
        if (getThreatIntelIndicatorType() == null) {
            this.threatIntelIndicatorType = new java.util.ArrayList<StringFilter>(
                    threatIntelIndicatorType.length);
        }
        for (StringFilter value : threatIntelIndicatorType) {
            this.threatIntelIndicatorType.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The type of a threat intelligence indicator.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorType <p>
     *            The type of a threat intelligence indicator.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorType(
            java.util.Collection<StringFilter> threatIntelIndicatorType) {
        setThreatIntelIndicatorType(threatIntelIndicatorType);
        return this;
    }

    /**
     * <p>
     * The value of a threat intelligence indicator.
     * </p>
     *
     * @return <p>
     *         The value of a threat intelligence indicator.
     *         </p>
     */
    public java.util.List<StringFilter> getThreatIntelIndicatorValue() {
        return threatIntelIndicatorValue;
    }

    /**
     * <p>
     * The value of a threat intelligence indicator.
     * </p>
     *
     * @param threatIntelIndicatorValue <p>
     *            The value of a threat intelligence indicator.
     *            </p>
     */
    public void setThreatIntelIndicatorValue(
            java.util.Collection<StringFilter> threatIntelIndicatorValue) {
        if (threatIntelIndicatorValue == null) {
            this.threatIntelIndicatorValue = null;
            return;
        }

        this.threatIntelIndicatorValue = new java.util.ArrayList<StringFilter>(
                threatIntelIndicatorValue);
    }

    /**
     * <p>
     * The value of a threat intelligence indicator.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorValue <p>
     *            The value of a threat intelligence indicator.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorValue(
            StringFilter... threatIntelIndicatorValue) {
        if (getThreatIntelIndicatorValue() == null) {
            this.threatIntelIndicatorValue = new java.util.ArrayList<StringFilter>(
                    threatIntelIndicatorValue.length);
        }
        for (StringFilter value : threatIntelIndicatorValue) {
            this.threatIntelIndicatorValue.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The value of a threat intelligence indicator.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorValue <p>
     *            The value of a threat intelligence indicator.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorValue(
            java.util.Collection<StringFilter> threatIntelIndicatorValue) {
        setThreatIntelIndicatorValue(threatIntelIndicatorValue);
        return this;
    }

    /**
     * <p>
     * The category of a threat intelligence indicator.
     * </p>
     *
     * @return <p>
     *         The category of a threat intelligence indicator.
     *         </p>
     */
    public java.util.List<StringFilter> getThreatIntelIndicatorCategory() {
        return threatIntelIndicatorCategory;
    }

    /**
     * <p>
     * The category of a threat intelligence indicator.
     * </p>
     *
     * @param threatIntelIndicatorCategory <p>
     *            The category of a threat intelligence indicator.
     *            </p>
     */
    public void setThreatIntelIndicatorCategory(
            java.util.Collection<StringFilter> threatIntelIndicatorCategory) {
        if (threatIntelIndicatorCategory == null) {
            this.threatIntelIndicatorCategory = null;
            return;
        }

        this.threatIntelIndicatorCategory = new java.util.ArrayList<StringFilter>(
                threatIntelIndicatorCategory);
    }

    /**
     * <p>
     * The category of a threat intelligence indicator.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorCategory <p>
     *            The category of a threat intelligence indicator.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorCategory(
            StringFilter... threatIntelIndicatorCategory) {
        if (getThreatIntelIndicatorCategory() == null) {
            this.threatIntelIndicatorCategory = new java.util.ArrayList<StringFilter>(
                    threatIntelIndicatorCategory.length);
        }
        for (StringFilter value : threatIntelIndicatorCategory) {
            this.threatIntelIndicatorCategory.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The category of a threat intelligence indicator.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorCategory <p>
     *            The category of a threat intelligence indicator.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorCategory(
            java.util.Collection<StringFilter> threatIntelIndicatorCategory) {
        setThreatIntelIndicatorCategory(threatIntelIndicatorCategory);
        return this;
    }

    /**
     * <p>
     * The date/time of the last observation of a threat intelligence indicator.
     * </p>
     *
     * @return <p>
     *         The date/time of the last observation of a threat intelligence
     *         indicator.
     *         </p>
     */
    public java.util.List<DateFilter> getThreatIntelIndicatorLastObservedAt() {
        return threatIntelIndicatorLastObservedAt;
    }

    /**
     * <p>
     * The date/time of the last observation of a threat intelligence indicator.
     * </p>
     *
     * @param threatIntelIndicatorLastObservedAt <p>
     *            The date/time of the last observation of a threat intelligence
     *            indicator.
     *            </p>
     */
    public void setThreatIntelIndicatorLastObservedAt(
            java.util.Collection<DateFilter> threatIntelIndicatorLastObservedAt) {
        if (threatIntelIndicatorLastObservedAt == null) {
            this.threatIntelIndicatorLastObservedAt = null;
            return;
        }

        this.threatIntelIndicatorLastObservedAt = new java.util.ArrayList<DateFilter>(
                threatIntelIndicatorLastObservedAt);
    }

    /**
     * <p>
     * The date/time of the last observation of a threat intelligence indicator.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorLastObservedAt <p>
     *            The date/time of the last observation of a threat intelligence
     *            indicator.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorLastObservedAt(
            DateFilter... threatIntelIndicatorLastObservedAt) {
        if (getThreatIntelIndicatorLastObservedAt() == null) {
            this.threatIntelIndicatorLastObservedAt = new java.util.ArrayList<DateFilter>(
                    threatIntelIndicatorLastObservedAt.length);
        }
        for (DateFilter value : threatIntelIndicatorLastObservedAt) {
            this.threatIntelIndicatorLastObservedAt.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The date/time of the last observation of a threat intelligence indicator.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorLastObservedAt <p>
     *            The date/time of the last observation of a threat intelligence
     *            indicator.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorLastObservedAt(
            java.util.Collection<DateFilter> threatIntelIndicatorLastObservedAt) {
        setThreatIntelIndicatorLastObservedAt(threatIntelIndicatorLastObservedAt);
        return this;
    }

    /**
     * <p>
     * The source of the threat intelligence.
     * </p>
     *
     * @return <p>
     *         The source of the threat intelligence.
     *         </p>
     */
    public java.util.List<StringFilter> getThreatIntelIndicatorSource() {
        return threatIntelIndicatorSource;
    }

    /**
     * <p>
     * The source of the threat intelligence.
     * </p>
     *
     * @param threatIntelIndicatorSource <p>
     *            The source of the threat intelligence.
     *            </p>
     */
    public void setThreatIntelIndicatorSource(
            java.util.Collection<StringFilter> threatIntelIndicatorSource) {
        if (threatIntelIndicatorSource == null) {
            this.threatIntelIndicatorSource = null;
            return;
        }

        this.threatIntelIndicatorSource = new java.util.ArrayList<StringFilter>(
                threatIntelIndicatorSource);
    }

    /**
     * <p>
     * The source of the threat intelligence.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorSource <p>
     *            The source of the threat intelligence.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorSource(
            StringFilter... threatIntelIndicatorSource) {
        if (getThreatIntelIndicatorSource() == null) {
            this.threatIntelIndicatorSource = new java.util.ArrayList<StringFilter>(
                    threatIntelIndicatorSource.length);
        }
        for (StringFilter value : threatIntelIndicatorSource) {
            this.threatIntelIndicatorSource.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The source of the threat intelligence.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorSource <p>
     *            The source of the threat intelligence.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorSource(
            java.util.Collection<StringFilter> threatIntelIndicatorSource) {
        setThreatIntelIndicatorSource(threatIntelIndicatorSource);
        return this;
    }

    /**
     * <p>
     * The URL for more details from the source of the threat intelligence.
     * </p>
     *
     * @return <p>
     *         The URL for more details from the source of the threat
     *         intelligence.
     *         </p>
     */
    public java.util.List<StringFilter> getThreatIntelIndicatorSourceUrl() {
        return threatIntelIndicatorSourceUrl;
    }

    /**
     * <p>
     * The URL for more details from the source of the threat intelligence.
     * </p>
     *
     * @param threatIntelIndicatorSourceUrl <p>
     *            The URL for more details from the source of the threat
     *            intelligence.
     *            </p>
     */
    public void setThreatIntelIndicatorSourceUrl(
            java.util.Collection<StringFilter> threatIntelIndicatorSourceUrl) {
        if (threatIntelIndicatorSourceUrl == null) {
            this.threatIntelIndicatorSourceUrl = null;
            return;
        }

        this.threatIntelIndicatorSourceUrl = new java.util.ArrayList<StringFilter>(
                threatIntelIndicatorSourceUrl);
    }

    /**
     * <p>
     * The URL for more details from the source of the threat intelligence.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorSourceUrl <p>
     *            The URL for more details from the source of the threat
     *            intelligence.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorSourceUrl(
            StringFilter... threatIntelIndicatorSourceUrl) {
        if (getThreatIntelIndicatorSourceUrl() == null) {
            this.threatIntelIndicatorSourceUrl = new java.util.ArrayList<StringFilter>(
                    threatIntelIndicatorSourceUrl.length);
        }
        for (StringFilter value : threatIntelIndicatorSourceUrl) {
            this.threatIntelIndicatorSourceUrl.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The URL for more details from the source of the threat intelligence.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param threatIntelIndicatorSourceUrl <p>
     *            The URL for more details from the source of the threat
     *            intelligence.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withThreatIntelIndicatorSourceUrl(
            java.util.Collection<StringFilter> threatIntelIndicatorSourceUrl) {
        setThreatIntelIndicatorSourceUrl(threatIntelIndicatorSourceUrl);
        return this;
    }

    /**
     * <p>
     * Specifies the type of the resource that details are provided for.
     * </p>
     *
     * @return <p>
     *         Specifies the type of the resource that details are provided for.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceType() {
        return resourceType;
    }

    /**
     * <p>
     * Specifies the type of the resource that details are provided for.
     * </p>
     *
     * @param resourceType <p>
     *            Specifies the type of the resource that details are provided
     *            for.
     *            </p>
     */
    public void setResourceType(java.util.Collection<StringFilter> resourceType) {
        if (resourceType == null) {
            this.resourceType = null;
            return;
        }

        this.resourceType = new java.util.ArrayList<StringFilter>(resourceType);
    }

    /**
     * <p>
     * Specifies the type of the resource that details are provided for.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceType <p>
     *            Specifies the type of the resource that details are provided
     *            for.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceType(StringFilter... resourceType) {
        if (getResourceType() == null) {
            this.resourceType = new java.util.ArrayList<StringFilter>(resourceType.length);
        }
        for (StringFilter value : resourceType) {
            this.resourceType.add(value);
        }
        return this;
    }

    /**
     * <p>
     * Specifies the type of the resource that details are provided for.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceType <p>
     *            Specifies the type of the resource that details are provided
     *            for.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceType(
            java.util.Collection<StringFilter> resourceType) {
        setResourceType(resourceType);
        return this;
    }

    /**
     * <p>
     * The canonical identifier for the given resource type.
     * </p>
     *
     * @return <p>
     *         The canonical identifier for the given resource type.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceId() {
        return resourceId;
    }

    /**
     * <p>
     * The canonical identifier for the given resource type.
     * </p>
     *
     * @param resourceId <p>
     *            The canonical identifier for the given resource type.
     *            </p>
     */
    public void setResourceId(java.util.Collection<StringFilter> resourceId) {
        if (resourceId == null) {
            this.resourceId = null;
            return;
        }

        this.resourceId = new java.util.ArrayList<StringFilter>(resourceId);
    }

    /**
     * <p>
     * The canonical identifier for the given resource type.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceId <p>
     *            The canonical identifier for the given resource type.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceId(StringFilter... resourceId) {
        if (getResourceId() == null) {
            this.resourceId = new java.util.ArrayList<StringFilter>(resourceId.length);
        }
        for (StringFilter value : resourceId) {
            this.resourceId.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The canonical identifier for the given resource type.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceId <p>
     *            The canonical identifier for the given resource type.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceId(java.util.Collection<StringFilter> resourceId) {
        setResourceId(resourceId);
        return this;
    }

    /**
     * <p>
     * The canonical AWS partition name that the Region is assigned to.
     * </p>
     *
     * @return <p>
     *         The canonical AWS partition name that the Region is assigned to.
     *         </p>
     */
    public java.util.List<StringFilter> getResourcePartition() {
        return resourcePartition;
    }

    /**
     * <p>
     * The canonical AWS partition name that the Region is assigned to.
     * </p>
     *
     * @param resourcePartition <p>
     *            The canonical AWS partition name that the Region is assigned
     *            to.
     *            </p>
     */
    public void setResourcePartition(java.util.Collection<StringFilter> resourcePartition) {
        if (resourcePartition == null) {
            this.resourcePartition = null;
            return;
        }

        this.resourcePartition = new java.util.ArrayList<StringFilter>(resourcePartition);
    }

    /**
     * <p>
     * The canonical AWS partition name that the Region is assigned to.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourcePartition <p>
     *            The canonical AWS partition name that the Region is assigned
     *            to.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourcePartition(StringFilter... resourcePartition) {
        if (getResourcePartition() == null) {
            this.resourcePartition = new java.util.ArrayList<StringFilter>(resourcePartition.length);
        }
        for (StringFilter value : resourcePartition) {
            this.resourcePartition.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The canonical AWS partition name that the Region is assigned to.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourcePartition <p>
     *            The canonical AWS partition name that the Region is assigned
     *            to.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourcePartition(
            java.util.Collection<StringFilter> resourcePartition) {
        setResourcePartition(resourcePartition);
        return this;
    }

    /**
     * <p>
     * The canonical AWS external Region name where this resource is located.
     * </p>
     *
     * @return <p>
     *         The canonical AWS external Region name where this resource is
     *         located.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceRegion() {
        return resourceRegion;
    }

    /**
     * <p>
     * The canonical AWS external Region name where this resource is located.
     * </p>
     *
     * @param resourceRegion <p>
     *            The canonical AWS external Region name where this resource is
     *            located.
     *            </p>
     */
    public void setResourceRegion(java.util.Collection<StringFilter> resourceRegion) {
        if (resourceRegion == null) {
            this.resourceRegion = null;
            return;
        }

        this.resourceRegion = new java.util.ArrayList<StringFilter>(resourceRegion);
    }

    /**
     * <p>
     * The canonical AWS external Region name where this resource is located.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceRegion <p>
     *            The canonical AWS external Region name where this resource is
     *            located.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceRegion(StringFilter... resourceRegion) {
        if (getResourceRegion() == null) {
            this.resourceRegion = new java.util.ArrayList<StringFilter>(resourceRegion.length);
        }
        for (StringFilter value : resourceRegion) {
            this.resourceRegion.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The canonical AWS external Region name where this resource is located.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceRegion <p>
     *            The canonical AWS external Region name where this resource is
     *            located.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceRegion(
            java.util.Collection<StringFilter> resourceRegion) {
        setResourceRegion(resourceRegion);
        return this;
    }

    /**
     * <p>
     * A list of AWS tags associated with a resource at the time the finding was
     * processed.
     * </p>
     *
     * @return <p>
     *         A list of AWS tags associated with a resource at the time the
     *         finding was processed.
     *         </p>
     */
    public java.util.List<MapFilter> getResourceTags() {
        return resourceTags;
    }

    /**
     * <p>
     * A list of AWS tags associated with a resource at the time the finding was
     * processed.
     * </p>
     *
     * @param resourceTags <p>
     *            A list of AWS tags associated with a resource at the time the
     *            finding was processed.
     *            </p>
     */
    public void setResourceTags(java.util.Collection<MapFilter> resourceTags) {
        if (resourceTags == null) {
            this.resourceTags = null;
            return;
        }

        this.resourceTags = new java.util.ArrayList<MapFilter>(resourceTags);
    }

    /**
     * <p>
     * A list of AWS tags associated with a resource at the time the finding was
     * processed.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceTags <p>
     *            A list of AWS tags associated with a resource at the time the
     *            finding was processed.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceTags(MapFilter... resourceTags) {
        if (getResourceTags() == null) {
            this.resourceTags = new java.util.ArrayList<MapFilter>(resourceTags.length);
        }
        for (MapFilter value : resourceTags) {
            this.resourceTags.add(value);
        }
        return this;
    }

    /**
     * <p>
     * A list of AWS tags associated with a resource at the time the finding was
     * processed.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceTags <p>
     *            A list of AWS tags associated with a resource at the time the
     *            finding was processed.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceTags(java.util.Collection<MapFilter> resourceTags) {
        setResourceTags(resourceTags);
        return this;
    }

    /**
     * <p>
     * The instance type of the instance.
     * </p>
     *
     * @return <p>
     *         The instance type of the instance.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceAwsEc2InstanceType() {
        return resourceAwsEc2InstanceType;
    }

    /**
     * <p>
     * The instance type of the instance.
     * </p>
     *
     * @param resourceAwsEc2InstanceType <p>
     *            The instance type of the instance.
     *            </p>
     */
    public void setResourceAwsEc2InstanceType(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceType) {
        if (resourceAwsEc2InstanceType == null) {
            this.resourceAwsEc2InstanceType = null;
            return;
        }

        this.resourceAwsEc2InstanceType = new java.util.ArrayList<StringFilter>(
                resourceAwsEc2InstanceType);
    }

    /**
     * <p>
     * The instance type of the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceType <p>
     *            The instance type of the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceType(
            StringFilter... resourceAwsEc2InstanceType) {
        if (getResourceAwsEc2InstanceType() == null) {
            this.resourceAwsEc2InstanceType = new java.util.ArrayList<StringFilter>(
                    resourceAwsEc2InstanceType.length);
        }
        for (StringFilter value : resourceAwsEc2InstanceType) {
            this.resourceAwsEc2InstanceType.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The instance type of the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceType <p>
     *            The instance type of the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceType(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceType) {
        setResourceAwsEc2InstanceType(resourceAwsEc2InstanceType);
        return this;
    }

    /**
     * <p>
     * The Amazon Machine Image (AMI) ID of the instance.
     * </p>
     *
     * @return <p>
     *         The Amazon Machine Image (AMI) ID of the instance.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceAwsEc2InstanceImageId() {
        return resourceAwsEc2InstanceImageId;
    }

    /**
     * <p>
     * The Amazon Machine Image (AMI) ID of the instance.
     * </p>
     *
     * @param resourceAwsEc2InstanceImageId <p>
     *            The Amazon Machine Image (AMI) ID of the instance.
     *            </p>
     */
    public void setResourceAwsEc2InstanceImageId(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceImageId) {
        if (resourceAwsEc2InstanceImageId == null) {
            this.resourceAwsEc2InstanceImageId = null;
            return;
        }

        this.resourceAwsEc2InstanceImageId = new java.util.ArrayList<StringFilter>(
                resourceAwsEc2InstanceImageId);
    }

    /**
     * <p>
     * The Amazon Machine Image (AMI) ID of the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceImageId <p>
     *            The Amazon Machine Image (AMI) ID of the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceImageId(
            StringFilter... resourceAwsEc2InstanceImageId) {
        if (getResourceAwsEc2InstanceImageId() == null) {
            this.resourceAwsEc2InstanceImageId = new java.util.ArrayList<StringFilter>(
                    resourceAwsEc2InstanceImageId.length);
        }
        for (StringFilter value : resourceAwsEc2InstanceImageId) {
            this.resourceAwsEc2InstanceImageId.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The Amazon Machine Image (AMI) ID of the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceImageId <p>
     *            The Amazon Machine Image (AMI) ID of the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceImageId(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceImageId) {
        setResourceAwsEc2InstanceImageId(resourceAwsEc2InstanceImageId);
        return this;
    }

    /**
     * <p>
     * The IPv4 addresses associated with the instance.
     * </p>
     *
     * @return <p>
     *         The IPv4 addresses associated with the instance.
     *         </p>
     */
    public java.util.List<IpFilter> getResourceAwsEc2InstanceIpV4Addresses() {
        return resourceAwsEc2InstanceIpV4Addresses;
    }

    /**
     * <p>
     * The IPv4 addresses associated with the instance.
     * </p>
     *
     * @param resourceAwsEc2InstanceIpV4Addresses <p>
     *            The IPv4 addresses associated with the instance.
     *            </p>
     */
    public void setResourceAwsEc2InstanceIpV4Addresses(
            java.util.Collection<IpFilter> resourceAwsEc2InstanceIpV4Addresses) {
        if (resourceAwsEc2InstanceIpV4Addresses == null) {
            this.resourceAwsEc2InstanceIpV4Addresses = null;
            return;
        }

        this.resourceAwsEc2InstanceIpV4Addresses = new java.util.ArrayList<IpFilter>(
                resourceAwsEc2InstanceIpV4Addresses);
    }

    /**
     * <p>
     * The IPv4 addresses associated with the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceIpV4Addresses <p>
     *            The IPv4 addresses associated with the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceIpV4Addresses(
            IpFilter... resourceAwsEc2InstanceIpV4Addresses) {
        if (getResourceAwsEc2InstanceIpV4Addresses() == null) {
            this.resourceAwsEc2InstanceIpV4Addresses = new java.util.ArrayList<IpFilter>(
                    resourceAwsEc2InstanceIpV4Addresses.length);
        }
        for (IpFilter value : resourceAwsEc2InstanceIpV4Addresses) {
            this.resourceAwsEc2InstanceIpV4Addresses.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The IPv4 addresses associated with the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceIpV4Addresses <p>
     *            The IPv4 addresses associated with the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceIpV4Addresses(
            java.util.Collection<IpFilter> resourceAwsEc2InstanceIpV4Addresses) {
        setResourceAwsEc2InstanceIpV4Addresses(resourceAwsEc2InstanceIpV4Addresses);
        return this;
    }

    /**
     * <p>
     * The IPv6 addresses associated with the instance.
     * </p>
     *
     * @return <p>
     *         The IPv6 addresses associated with the instance.
     *         </p>
     */
    public java.util.List<IpFilter> getResourceAwsEc2InstanceIpV6Addresses() {
        return resourceAwsEc2InstanceIpV6Addresses;
    }

    /**
     * <p>
     * The IPv6 addresses associated with the instance.
     * </p>
     *
     * @param resourceAwsEc2InstanceIpV6Addresses <p>
     *            The IPv6 addresses associated with the instance.
     *            </p>
     */
    public void setResourceAwsEc2InstanceIpV6Addresses(
            java.util.Collection<IpFilter> resourceAwsEc2InstanceIpV6Addresses) {
        if (resourceAwsEc2InstanceIpV6Addresses == null) {
            this.resourceAwsEc2InstanceIpV6Addresses = null;
            return;
        }

        this.resourceAwsEc2InstanceIpV6Addresses = new java.util.ArrayList<IpFilter>(
                resourceAwsEc2InstanceIpV6Addresses);
    }

    /**
     * <p>
     * The IPv6 addresses associated with the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceIpV6Addresses <p>
     *            The IPv6 addresses associated with the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceIpV6Addresses(
            IpFilter... resourceAwsEc2InstanceIpV6Addresses) {
        if (getResourceAwsEc2InstanceIpV6Addresses() == null) {
            this.resourceAwsEc2InstanceIpV6Addresses = new java.util.ArrayList<IpFilter>(
                    resourceAwsEc2InstanceIpV6Addresses.length);
        }
        for (IpFilter value : resourceAwsEc2InstanceIpV6Addresses) {
            this.resourceAwsEc2InstanceIpV6Addresses.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The IPv6 addresses associated with the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceIpV6Addresses <p>
     *            The IPv6 addresses associated with the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceIpV6Addresses(
            java.util.Collection<IpFilter> resourceAwsEc2InstanceIpV6Addresses) {
        setResourceAwsEc2InstanceIpV6Addresses(resourceAwsEc2InstanceIpV6Addresses);
        return this;
    }

    /**
     * <p>
     * The key name associated with the instance.
     * </p>
     *
     * @return <p>
     *         The key name associated with the instance.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceAwsEc2InstanceKeyName() {
        return resourceAwsEc2InstanceKeyName;
    }

    /**
     * <p>
     * The key name associated with the instance.
     * </p>
     *
     * @param resourceAwsEc2InstanceKeyName <p>
     *            The key name associated with the instance.
     *            </p>
     */
    public void setResourceAwsEc2InstanceKeyName(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceKeyName) {
        if (resourceAwsEc2InstanceKeyName == null) {
            this.resourceAwsEc2InstanceKeyName = null;
            return;
        }

        this.resourceAwsEc2InstanceKeyName = new java.util.ArrayList<StringFilter>(
                resourceAwsEc2InstanceKeyName);
    }

    /**
     * <p>
     * The key name associated with the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceKeyName <p>
     *            The key name associated with the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceKeyName(
            StringFilter... resourceAwsEc2InstanceKeyName) {
        if (getResourceAwsEc2InstanceKeyName() == null) {
            this.resourceAwsEc2InstanceKeyName = new java.util.ArrayList<StringFilter>(
                    resourceAwsEc2InstanceKeyName.length);
        }
        for (StringFilter value : resourceAwsEc2InstanceKeyName) {
            this.resourceAwsEc2InstanceKeyName.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The key name associated with the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceKeyName <p>
     *            The key name associated with the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceKeyName(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceKeyName) {
        setResourceAwsEc2InstanceKeyName(resourceAwsEc2InstanceKeyName);
        return this;
    }

    /**
     * <p>
     * The IAM profile ARN of the instance.
     * </p>
     *
     * @return <p>
     *         The IAM profile ARN of the instance.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceAwsEc2InstanceIamInstanceProfileArn() {
        return resourceAwsEc2InstanceIamInstanceProfileArn;
    }

    /**
     * <p>
     * The IAM profile ARN of the instance.
     * </p>
     *
     * @param resourceAwsEc2InstanceIamInstanceProfileArn <p>
     *            The IAM profile ARN of the instance.
     *            </p>
     */
    public void setResourceAwsEc2InstanceIamInstanceProfileArn(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceIamInstanceProfileArn) {
        if (resourceAwsEc2InstanceIamInstanceProfileArn == null) {
            this.resourceAwsEc2InstanceIamInstanceProfileArn = null;
            return;
        }

        this.resourceAwsEc2InstanceIamInstanceProfileArn = new java.util.ArrayList<StringFilter>(
                resourceAwsEc2InstanceIamInstanceProfileArn);
    }

    /**
     * <p>
     * The IAM profile ARN of the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceIamInstanceProfileArn <p>
     *            The IAM profile ARN of the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceIamInstanceProfileArn(
            StringFilter... resourceAwsEc2InstanceIamInstanceProfileArn) {
        if (getResourceAwsEc2InstanceIamInstanceProfileArn() == null) {
            this.resourceAwsEc2InstanceIamInstanceProfileArn = new java.util.ArrayList<StringFilter>(
                    resourceAwsEc2InstanceIamInstanceProfileArn.length);
        }
        for (StringFilter value : resourceAwsEc2InstanceIamInstanceProfileArn) {
            this.resourceAwsEc2InstanceIamInstanceProfileArn.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The IAM profile ARN of the instance.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceIamInstanceProfileArn <p>
     *            The IAM profile ARN of the instance.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceIamInstanceProfileArn(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceIamInstanceProfileArn) {
        setResourceAwsEc2InstanceIamInstanceProfileArn(resourceAwsEc2InstanceIamInstanceProfileArn);
        return this;
    }

    /**
     * <p>
     * The identifier of the VPC that the instance was launched in.
     * </p>
     *
     * @return <p>
     *         The identifier of the VPC that the instance was launched in.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceAwsEc2InstanceVpcId() {
        return resourceAwsEc2InstanceVpcId;
    }

    /**
     * <p>
     * The identifier of the VPC that the instance was launched in.
     * </p>
     *
     * @param resourceAwsEc2InstanceVpcId <p>
     *            The identifier of the VPC that the instance was launched in.
     *            </p>
     */
    public void setResourceAwsEc2InstanceVpcId(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceVpcId) {
        if (resourceAwsEc2InstanceVpcId == null) {
            this.resourceAwsEc2InstanceVpcId = null;
            return;
        }

        this.resourceAwsEc2InstanceVpcId = new java.util.ArrayList<StringFilter>(
                resourceAwsEc2InstanceVpcId);
    }

    /**
     * <p>
     * The identifier of the VPC that the instance was launched in.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceVpcId <p>
     *            The identifier of the VPC that the instance was launched in.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceVpcId(
            StringFilter... resourceAwsEc2InstanceVpcId) {
        if (getResourceAwsEc2InstanceVpcId() == null) {
            this.resourceAwsEc2InstanceVpcId = new java.util.ArrayList<StringFilter>(
                    resourceAwsEc2InstanceVpcId.length);
        }
        for (StringFilter value : resourceAwsEc2InstanceVpcId) {
            this.resourceAwsEc2InstanceVpcId.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The identifier of the VPC that the instance was launched in.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceVpcId <p>
     *            The identifier of the VPC that the instance was launched in.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceVpcId(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceVpcId) {
        setResourceAwsEc2InstanceVpcId(resourceAwsEc2InstanceVpcId);
        return this;
    }

    /**
     * <p>
     * The identifier of the subnet that the instance was launched in.
     * </p>
     *
     * @return <p>
     *         The identifier of the subnet that the instance was launched in.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceAwsEc2InstanceSubnetId() {
        return resourceAwsEc2InstanceSubnetId;
    }

    /**
     * <p>
     * The identifier of the subnet that the instance was launched in.
     * </p>
     *
     * @param resourceAwsEc2InstanceSubnetId <p>
     *            The identifier of the subnet that the instance was launched
     *            in.
     *            </p>
     */
    public void setResourceAwsEc2InstanceSubnetId(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceSubnetId) {
        if (resourceAwsEc2InstanceSubnetId == null) {
            this.resourceAwsEc2InstanceSubnetId = null;
            return;
        }

        this.resourceAwsEc2InstanceSubnetId = new java.util.ArrayList<StringFilter>(
                resourceAwsEc2InstanceSubnetId);
    }

    /**
     * <p>
     * The identifier of the subnet that the instance was launched in.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceSubnetId <p>
     *            The identifier of the subnet that the instance was launched
     *            in.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceSubnetId(
            StringFilter... resourceAwsEc2InstanceSubnetId) {
        if (getResourceAwsEc2InstanceSubnetId() == null) {
            this.resourceAwsEc2InstanceSubnetId = new java.util.ArrayList<StringFilter>(
                    resourceAwsEc2InstanceSubnetId.length);
        }
        for (StringFilter value : resourceAwsEc2InstanceSubnetId) {
            this.resourceAwsEc2InstanceSubnetId.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The identifier of the subnet that the instance was launched in.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceSubnetId <p>
     *            The identifier of the subnet that the instance was launched
     *            in.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceSubnetId(
            java.util.Collection<StringFilter> resourceAwsEc2InstanceSubnetId) {
        setResourceAwsEc2InstanceSubnetId(resourceAwsEc2InstanceSubnetId);
        return this;
    }

    /**
     * <p>
     * The date and time the instance was launched.
     * </p>
     *
     * @return <p>
     *         The date and time the instance was launched.
     *         </p>
     */
    public java.util.List<DateFilter> getResourceAwsEc2InstanceLaunchedAt() {
        return resourceAwsEc2InstanceLaunchedAt;
    }

    /**
     * <p>
     * The date and time the instance was launched.
     * </p>
     *
     * @param resourceAwsEc2InstanceLaunchedAt <p>
     *            The date and time the instance was launched.
     *            </p>
     */
    public void setResourceAwsEc2InstanceLaunchedAt(
            java.util.Collection<DateFilter> resourceAwsEc2InstanceLaunchedAt) {
        if (resourceAwsEc2InstanceLaunchedAt == null) {
            this.resourceAwsEc2InstanceLaunchedAt = null;
            return;
        }

        this.resourceAwsEc2InstanceLaunchedAt = new java.util.ArrayList<DateFilter>(
                resourceAwsEc2InstanceLaunchedAt);
    }

    /**
     * <p>
     * The date and time the instance was launched.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceLaunchedAt <p>
     *            The date and time the instance was launched.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceLaunchedAt(
            DateFilter... resourceAwsEc2InstanceLaunchedAt) {
        if (getResourceAwsEc2InstanceLaunchedAt() == null) {
            this.resourceAwsEc2InstanceLaunchedAt = new java.util.ArrayList<DateFilter>(
                    resourceAwsEc2InstanceLaunchedAt.length);
        }
        for (DateFilter value : resourceAwsEc2InstanceLaunchedAt) {
            this.resourceAwsEc2InstanceLaunchedAt.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The date and time the instance was launched.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsEc2InstanceLaunchedAt <p>
     *            The date and time the instance was launched.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsEc2InstanceLaunchedAt(
            java.util.Collection<DateFilter> resourceAwsEc2InstanceLaunchedAt) {
        setResourceAwsEc2InstanceLaunchedAt(resourceAwsEc2InstanceLaunchedAt);
        return this;
    }

    /**
     * <p>
     * The canonical user ID of the owner of the S3 bucket.
     * </p>
     *
     * @return <p>
     *         The canonical user ID of the owner of the S3 bucket.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceAwsS3BucketOwnerId() {
        return resourceAwsS3BucketOwnerId;
    }

    /**
     * <p>
     * The canonical user ID of the owner of the S3 bucket.
     * </p>
     *
     * @param resourceAwsS3BucketOwnerId <p>
     *            The canonical user ID of the owner of the S3 bucket.
     *            </p>
     */
    public void setResourceAwsS3BucketOwnerId(
            java.util.Collection<StringFilter> resourceAwsS3BucketOwnerId) {
        if (resourceAwsS3BucketOwnerId == null) {
            this.resourceAwsS3BucketOwnerId = null;
            return;
        }

        this.resourceAwsS3BucketOwnerId = new java.util.ArrayList<StringFilter>(
                resourceAwsS3BucketOwnerId);
    }

    /**
     * <p>
     * The canonical user ID of the owner of the S3 bucket.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsS3BucketOwnerId <p>
     *            The canonical user ID of the owner of the S3 bucket.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsS3BucketOwnerId(
            StringFilter... resourceAwsS3BucketOwnerId) {
        if (getResourceAwsS3BucketOwnerId() == null) {
            this.resourceAwsS3BucketOwnerId = new java.util.ArrayList<StringFilter>(
                    resourceAwsS3BucketOwnerId.length);
        }
        for (StringFilter value : resourceAwsS3BucketOwnerId) {
            this.resourceAwsS3BucketOwnerId.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The canonical user ID of the owner of the S3 bucket.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsS3BucketOwnerId <p>
     *            The canonical user ID of the owner of the S3 bucket.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsS3BucketOwnerId(
            java.util.Collection<StringFilter> resourceAwsS3BucketOwnerId) {
        setResourceAwsS3BucketOwnerId(resourceAwsS3BucketOwnerId);
        return this;
    }

    /**
     * <p>
     * The display name of the owner of the S3 bucket.
     * </p>
     *
     * @return <p>
     *         The display name of the owner of the S3 bucket.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceAwsS3BucketOwnerName() {
        return resourceAwsS3BucketOwnerName;
    }

    /**
     * <p>
     * The display name of the owner of the S3 bucket.
     * </p>
     *
     * @param resourceAwsS3BucketOwnerName <p>
     *            The display name of the owner of the S3 bucket.
     *            </p>
     */
    public void setResourceAwsS3BucketOwnerName(
            java.util.Collection<StringFilter> resourceAwsS3BucketOwnerName) {
        if (resourceAwsS3BucketOwnerName == null) {
            this.resourceAwsS3BucketOwnerName = null;
            return;
        }

        this.resourceAwsS3BucketOwnerName = new java.util.ArrayList<StringFilter>(
                resourceAwsS3BucketOwnerName);
    }

    /**
     * <p>
     * The display name of the owner of the S3 bucket.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsS3BucketOwnerName <p>
     *            The display name of the owner of the S3 bucket.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsS3BucketOwnerName(
            StringFilter... resourceAwsS3BucketOwnerName) {
        if (getResourceAwsS3BucketOwnerName() == null) {
            this.resourceAwsS3BucketOwnerName = new java.util.ArrayList<StringFilter>(
                    resourceAwsS3BucketOwnerName.length);
        }
        for (StringFilter value : resourceAwsS3BucketOwnerName) {
            this.resourceAwsS3BucketOwnerName.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The display name of the owner of the S3 bucket.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsS3BucketOwnerName <p>
     *            The display name of the owner of the S3 bucket.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsS3BucketOwnerName(
            java.util.Collection<StringFilter> resourceAwsS3BucketOwnerName) {
        setResourceAwsS3BucketOwnerName(resourceAwsS3BucketOwnerName);
        return this;
    }

    /**
     * <p>
     * The user associated with the IAM access key related to a finding.
     * </p>
     *
     * @return <p>
     *         The user associated with the IAM access key related to a finding.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceAwsIamAccessKeyUserName() {
        return resourceAwsIamAccessKeyUserName;
    }

    /**
     * <p>
     * The user associated with the IAM access key related to a finding.
     * </p>
     *
     * @param resourceAwsIamAccessKeyUserName <p>
     *            The user associated with the IAM access key related to a
     *            finding.
     *            </p>
     */
    public void setResourceAwsIamAccessKeyUserName(
            java.util.Collection<StringFilter> resourceAwsIamAccessKeyUserName) {
        if (resourceAwsIamAccessKeyUserName == null) {
            this.resourceAwsIamAccessKeyUserName = null;
            return;
        }

        this.resourceAwsIamAccessKeyUserName = new java.util.ArrayList<StringFilter>(
                resourceAwsIamAccessKeyUserName);
    }

    /**
     * <p>
     * The user associated with the IAM access key related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsIamAccessKeyUserName <p>
     *            The user associated with the IAM access key related to a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsIamAccessKeyUserName(
            StringFilter... resourceAwsIamAccessKeyUserName) {
        if (getResourceAwsIamAccessKeyUserName() == null) {
            this.resourceAwsIamAccessKeyUserName = new java.util.ArrayList<StringFilter>(
                    resourceAwsIamAccessKeyUserName.length);
        }
        for (StringFilter value : resourceAwsIamAccessKeyUserName) {
            this.resourceAwsIamAccessKeyUserName.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The user associated with the IAM access key related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsIamAccessKeyUserName <p>
     *            The user associated with the IAM access key related to a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsIamAccessKeyUserName(
            java.util.Collection<StringFilter> resourceAwsIamAccessKeyUserName) {
        setResourceAwsIamAccessKeyUserName(resourceAwsIamAccessKeyUserName);
        return this;
    }

    /**
     * <p>
     * The status of the IAM access key related to a finding.
     * </p>
     *
     * @return <p>
     *         The status of the IAM access key related to a finding.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceAwsIamAccessKeyStatus() {
        return resourceAwsIamAccessKeyStatus;
    }

    /**
     * <p>
     * The status of the IAM access key related to a finding.
     * </p>
     *
     * @param resourceAwsIamAccessKeyStatus <p>
     *            The status of the IAM access key related to a finding.
     *            </p>
     */
    public void setResourceAwsIamAccessKeyStatus(
            java.util.Collection<StringFilter> resourceAwsIamAccessKeyStatus) {
        if (resourceAwsIamAccessKeyStatus == null) {
            this.resourceAwsIamAccessKeyStatus = null;
            return;
        }

        this.resourceAwsIamAccessKeyStatus = new java.util.ArrayList<StringFilter>(
                resourceAwsIamAccessKeyStatus);
    }

    /**
     * <p>
     * The status of the IAM access key related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsIamAccessKeyStatus <p>
     *            The status of the IAM access key related to a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsIamAccessKeyStatus(
            StringFilter... resourceAwsIamAccessKeyStatus) {
        if (getResourceAwsIamAccessKeyStatus() == null) {
            this.resourceAwsIamAccessKeyStatus = new java.util.ArrayList<StringFilter>(
                    resourceAwsIamAccessKeyStatus.length);
        }
        for (StringFilter value : resourceAwsIamAccessKeyStatus) {
            this.resourceAwsIamAccessKeyStatus.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The status of the IAM access key related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsIamAccessKeyStatus <p>
     *            The status of the IAM access key related to a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsIamAccessKeyStatus(
            java.util.Collection<StringFilter> resourceAwsIamAccessKeyStatus) {
        setResourceAwsIamAccessKeyStatus(resourceAwsIamAccessKeyStatus);
        return this;
    }

    /**
     * <p>
     * The creation date/time of the IAM access key related to a finding.
     * </p>
     *
     * @return <p>
     *         The creation date/time of the IAM access key related to a
     *         finding.
     *         </p>
     */
    public java.util.List<DateFilter> getResourceAwsIamAccessKeyCreatedAt() {
        return resourceAwsIamAccessKeyCreatedAt;
    }

    /**
     * <p>
     * The creation date/time of the IAM access key related to a finding.
     * </p>
     *
     * @param resourceAwsIamAccessKeyCreatedAt <p>
     *            The creation date/time of the IAM access key related to a
     *            finding.
     *            </p>
     */
    public void setResourceAwsIamAccessKeyCreatedAt(
            java.util.Collection<DateFilter> resourceAwsIamAccessKeyCreatedAt) {
        if (resourceAwsIamAccessKeyCreatedAt == null) {
            this.resourceAwsIamAccessKeyCreatedAt = null;
            return;
        }

        this.resourceAwsIamAccessKeyCreatedAt = new java.util.ArrayList<DateFilter>(
                resourceAwsIamAccessKeyCreatedAt);
    }

    /**
     * <p>
     * The creation date/time of the IAM access key related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsIamAccessKeyCreatedAt <p>
     *            The creation date/time of the IAM access key related to a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsIamAccessKeyCreatedAt(
            DateFilter... resourceAwsIamAccessKeyCreatedAt) {
        if (getResourceAwsIamAccessKeyCreatedAt() == null) {
            this.resourceAwsIamAccessKeyCreatedAt = new java.util.ArrayList<DateFilter>(
                    resourceAwsIamAccessKeyCreatedAt.length);
        }
        for (DateFilter value : resourceAwsIamAccessKeyCreatedAt) {
            this.resourceAwsIamAccessKeyCreatedAt.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The creation date/time of the IAM access key related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceAwsIamAccessKeyCreatedAt <p>
     *            The creation date/time of the IAM access key related to a
     *            finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceAwsIamAccessKeyCreatedAt(
            java.util.Collection<DateFilter> resourceAwsIamAccessKeyCreatedAt) {
        setResourceAwsIamAccessKeyCreatedAt(resourceAwsIamAccessKeyCreatedAt);
        return this;
    }

    /**
     * <p>
     * The name of the container related to a finding.
     * </p>
     *
     * @return <p>
     *         The name of the container related to a finding.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceContainerName() {
        return resourceContainerName;
    }

    /**
     * <p>
     * The name of the container related to a finding.
     * </p>
     *
     * @param resourceContainerName <p>
     *            The name of the container related to a finding.
     *            </p>
     */
    public void setResourceContainerName(java.util.Collection<StringFilter> resourceContainerName) {
        if (resourceContainerName == null) {
            this.resourceContainerName = null;
            return;
        }

        this.resourceContainerName = new java.util.ArrayList<StringFilter>(resourceContainerName);
    }

    /**
     * <p>
     * The name of the container related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceContainerName <p>
     *            The name of the container related to a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceContainerName(
            StringFilter... resourceContainerName) {
        if (getResourceContainerName() == null) {
            this.resourceContainerName = new java.util.ArrayList<StringFilter>(
                    resourceContainerName.length);
        }
        for (StringFilter value : resourceContainerName) {
            this.resourceContainerName.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The name of the container related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceContainerName <p>
     *            The name of the container related to a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceContainerName(
            java.util.Collection<StringFilter> resourceContainerName) {
        setResourceContainerName(resourceContainerName);
        return this;
    }

    /**
     * <p>
     * The identifier of the image related to a finding.
     * </p>
     *
     * @return <p>
     *         The identifier of the image related to a finding.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceContainerImageId() {
        return resourceContainerImageId;
    }

    /**
     * <p>
     * The identifier of the image related to a finding.
     * </p>
     *
     * @param resourceContainerImageId <p>
     *            The identifier of the image related to a finding.
     *            </p>
     */
    public void setResourceContainerImageId(
            java.util.Collection<StringFilter> resourceContainerImageId) {
        if (resourceContainerImageId == null) {
            this.resourceContainerImageId = null;
            return;
        }

        this.resourceContainerImageId = new java.util.ArrayList<StringFilter>(
                resourceContainerImageId);
    }

    /**
     * <p>
     * The identifier of the image related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceContainerImageId <p>
     *            The identifier of the image related to a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceContainerImageId(
            StringFilter... resourceContainerImageId) {
        if (getResourceContainerImageId() == null) {
            this.resourceContainerImageId = new java.util.ArrayList<StringFilter>(
                    resourceContainerImageId.length);
        }
        for (StringFilter value : resourceContainerImageId) {
            this.resourceContainerImageId.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The identifier of the image related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceContainerImageId <p>
     *            The identifier of the image related to a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceContainerImageId(
            java.util.Collection<StringFilter> resourceContainerImageId) {
        setResourceContainerImageId(resourceContainerImageId);
        return this;
    }

    /**
     * <p>
     * The name of the image related to a finding.
     * </p>
     *
     * @return <p>
     *         The name of the image related to a finding.
     *         </p>
     */
    public java.util.List<StringFilter> getResourceContainerImageName() {
        return resourceContainerImageName;
    }

    /**
     * <p>
     * The name of the image related to a finding.
     * </p>
     *
     * @param resourceContainerImageName <p>
     *            The name of the image related to a finding.
     *            </p>
     */
    public void setResourceContainerImageName(
            java.util.Collection<StringFilter> resourceContainerImageName) {
        if (resourceContainerImageName == null) {
            this.resourceContainerImageName = null;
            return;
        }

        this.resourceContainerImageName = new java.util.ArrayList<StringFilter>(
                resourceContainerImageName);
    }

    /**
     * <p>
     * The name of the image related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceContainerImageName <p>
     *            The name of the image related to a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceContainerImageName(
            StringFilter... resourceContainerImageName) {
        if (getResourceContainerImageName() == null) {
            this.resourceContainerImageName = new java.util.ArrayList<StringFilter>(
                    resourceContainerImageName.length);
        }
        for (StringFilter value : resourceContainerImageName) {
            this.resourceContainerImageName.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The name of the image related to a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceContainerImageName <p>
     *            The name of the image related to a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceContainerImageName(
            java.util.Collection<StringFilter> resourceContainerImageName) {
        setResourceContainerImageName(resourceContainerImageName);
        return this;
    }

    /**
     * <p>
     * The date/time that the container was started.
     * </p>
     *
     * @return <p>
     *         The date/time that the container was started.
     *         </p>
     */
    public java.util.List<DateFilter> getResourceContainerLaunchedAt() {
        return resourceContainerLaunchedAt;
    }

    /**
     * <p>
     * The date/time that the container was started.
     * </p>
     *
     * @param resourceContainerLaunchedAt <p>
     *            The date/time that the container was started.
     *            </p>
     */
    public void setResourceContainerLaunchedAt(
            java.util.Collection<DateFilter> resourceContainerLaunchedAt) {
        if (resourceContainerLaunchedAt == null) {
            this.resourceContainerLaunchedAt = null;
            return;
        }

        this.resourceContainerLaunchedAt = new java.util.ArrayList<DateFilter>(
                resourceContainerLaunchedAt);
    }

    /**
     * <p>
     * The date/time that the container was started.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceContainerLaunchedAt <p>
     *            The date/time that the container was started.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceContainerLaunchedAt(
            DateFilter... resourceContainerLaunchedAt) {
        if (getResourceContainerLaunchedAt() == null) {
            this.resourceContainerLaunchedAt = new java.util.ArrayList<DateFilter>(
                    resourceContainerLaunchedAt.length);
        }
        for (DateFilter value : resourceContainerLaunchedAt) {
            this.resourceContainerLaunchedAt.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The date/time that the container was started.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceContainerLaunchedAt <p>
     *            The date/time that the container was started.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceContainerLaunchedAt(
            java.util.Collection<DateFilter> resourceContainerLaunchedAt) {
        setResourceContainerLaunchedAt(resourceContainerLaunchedAt);
        return this;
    }

    /**
     * <p>
     * The details of a resource that doesn't have a specific subfield for the
     * resource type defined.
     * </p>
     *
     * @return <p>
     *         The details of a resource that doesn't have a specific subfield
     *         for the resource type defined.
     *         </p>
     */
    public java.util.List<MapFilter> getResourceDetailsOther() {
        return resourceDetailsOther;
    }

    /**
     * <p>
     * The details of a resource that doesn't have a specific subfield for the
     * resource type defined.
     * </p>
     *
     * @param resourceDetailsOther <p>
     *            The details of a resource that doesn't have a specific
     *            subfield for the resource type defined.
     *            </p>
     */
    public void setResourceDetailsOther(java.util.Collection<MapFilter> resourceDetailsOther) {
        if (resourceDetailsOther == null) {
            this.resourceDetailsOther = null;
            return;
        }

        this.resourceDetailsOther = new java.util.ArrayList<MapFilter>(resourceDetailsOther);
    }

    /**
     * <p>
     * The details of a resource that doesn't have a specific subfield for the
     * resource type defined.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceDetailsOther <p>
     *            The details of a resource that doesn't have a specific
     *            subfield for the resource type defined.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceDetailsOther(MapFilter... resourceDetailsOther) {
        if (getResourceDetailsOther() == null) {
            this.resourceDetailsOther = new java.util.ArrayList<MapFilter>(
                    resourceDetailsOther.length);
        }
        for (MapFilter value : resourceDetailsOther) {
            this.resourceDetailsOther.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The details of a resource that doesn't have a specific subfield for the
     * resource type defined.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param resourceDetailsOther <p>
     *            The details of a resource that doesn't have a specific
     *            subfield for the resource type defined.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withResourceDetailsOther(
            java.util.Collection<MapFilter> resourceDetailsOther) {
        setResourceDetailsOther(resourceDetailsOther);
        return this;
    }

    /**
     * <p>
     * Exclusive to findings that are generated as the result of a check run
     * against a specific rule in a supported standard, such as CIS AWS
     * Foundations. Contains security standard-related finding details.
     * </p>
     *
     * @return <p>
     *         Exclusive to findings that are generated as the result of a check
     *         run against a specific rule in a supported standard, such as CIS
     *         AWS Foundations. Contains security standard-related finding
     *         details.
     *         </p>
     */
    public java.util.List<StringFilter> getComplianceStatus() {
        return complianceStatus;
    }

    /**
     * <p>
     * Exclusive to findings that are generated as the result of a check run
     * against a specific rule in a supported standard, such as CIS AWS
     * Foundations. Contains security standard-related finding details.
     * </p>
     *
     * @param complianceStatus <p>
     *            Exclusive to findings that are generated as the result of a
     *            check run against a specific rule in a supported standard,
     *            such as CIS AWS Foundations. Contains security
     *            standard-related finding details.
     *            </p>
     */
    public void setComplianceStatus(java.util.Collection<StringFilter> complianceStatus) {
        if (complianceStatus == null) {
            this.complianceStatus = null;
            return;
        }

        this.complianceStatus = new java.util.ArrayList<StringFilter>(complianceStatus);
    }

    /**
     * <p>
     * Exclusive to findings that are generated as the result of a check run
     * against a specific rule in a supported standard, such as CIS AWS
     * Foundations. Contains security standard-related finding details.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param complianceStatus <p>
     *            Exclusive to findings that are generated as the result of a
     *            check run against a specific rule in a supported standard,
     *            such as CIS AWS Foundations. Contains security
     *            standard-related finding details.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withComplianceStatus(StringFilter... complianceStatus) {
        if (getComplianceStatus() == null) {
            this.complianceStatus = new java.util.ArrayList<StringFilter>(complianceStatus.length);
        }
        for (StringFilter value : complianceStatus) {
            this.complianceStatus.add(value);
        }
        return this;
    }

    /**
     * <p>
     * Exclusive to findings that are generated as the result of a check run
     * against a specific rule in a supported standard, such as CIS AWS
     * Foundations. Contains security standard-related finding details.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param complianceStatus <p>
     *            Exclusive to findings that are generated as the result of a
     *            check run against a specific rule in a supported standard,
     *            such as CIS AWS Foundations. Contains security
     *            standard-related finding details.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withComplianceStatus(
            java.util.Collection<StringFilter> complianceStatus) {
        setComplianceStatus(complianceStatus);
        return this;
    }

    /**
     * <p>
     * The veracity of a finding.
     * </p>
     *
     * @return <p>
     *         The veracity of a finding.
     *         </p>
     */
    public java.util.List<StringFilter> getVerificationState() {
        return verificationState;
    }

    /**
     * <p>
     * The veracity of a finding.
     * </p>
     *
     * @param verificationState <p>
     *            The veracity of a finding.
     *            </p>
     */
    public void setVerificationState(java.util.Collection<StringFilter> verificationState) {
        if (verificationState == null) {
            this.verificationState = null;
            return;
        }

        this.verificationState = new java.util.ArrayList<StringFilter>(verificationState);
    }

    /**
     * <p>
     * The veracity of a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param verificationState <p>
     *            The veracity of a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withVerificationState(StringFilter... verificationState) {
        if (getVerificationState() == null) {
            this.verificationState = new java.util.ArrayList<StringFilter>(verificationState.length);
        }
        for (StringFilter value : verificationState) {
            this.verificationState.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The veracity of a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param verificationState <p>
     *            The veracity of a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withVerificationState(
            java.util.Collection<StringFilter> verificationState) {
        setVerificationState(verificationState);
        return this;
    }

    /**
     * <p>
     * The workflow state of a finding.
     * </p>
     *
     * @return <p>
     *         The workflow state of a finding.
     *         </p>
     */
    public java.util.List<StringFilter> getWorkflowState() {
        return workflowState;
    }

    /**
     * <p>
     * The workflow state of a finding.
     * </p>
     *
     * @param workflowState <p>
     *            The workflow state of a finding.
     *            </p>
     */
    public void setWorkflowState(java.util.Collection<StringFilter> workflowState) {
        if (workflowState == null) {
            this.workflowState = null;
            return;
        }

        this.workflowState = new java.util.ArrayList<StringFilter>(workflowState);
    }

    /**
     * <p>
     * The workflow state of a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param workflowState <p>
     *            The workflow state of a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withWorkflowState(StringFilter... workflowState) {
        if (getWorkflowState() == null) {
            this.workflowState = new java.util.ArrayList<StringFilter>(workflowState.length);
        }
        for (StringFilter value : workflowState) {
            this.workflowState.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The workflow state of a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param workflowState <p>
     *            The workflow state of a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withWorkflowState(
            java.util.Collection<StringFilter> workflowState) {
        setWorkflowState(workflowState);
        return this;
    }

    /**
     * <p>
     * The status of the investigation into a finding. Allowed values are the
     * following.
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>NEW</code> - The initial state of a finding, before it is reviewed.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>NOTIFIED</code> - Indicates that the resource owner has been
     * notified about the security issue. Used when the initial reviewer is not
     * the resource owner, and needs intervention from the resource owner.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>SUPPRESSED</code> - The finding will not be reviewed again and will
     * not be acted upon.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>RESOLVED</code> - The finding was reviewed and remediated and is
     * now considered resolved.
     * </p>
     * </li>
     * </ul>
     *
     * @return <p>
     *         The status of the investigation into a finding. Allowed values
     *         are the following.
     *         </p>
     *         <ul>
     *         <li>
     *         <p>
     *         <code>NEW</code> - The initial state of a finding, before it is
     *         reviewed.
     *         </p>
     *         </li>
     *         <li>
     *         <p>
     *         <code>NOTIFIED</code> - Indicates that the resource owner has
     *         been notified about the security issue. Used when the initial
     *         reviewer is not the resource owner, and needs intervention from
     *         the resource owner.
     *         </p>
     *         </li>
     *         <li>
     *         <p>
     *         <code>SUPPRESSED</code> - The finding will not be reviewed again
     *         and will not be acted upon.
     *         </p>
     *         </li>
     *         <li>
     *         <p>
     *         <code>RESOLVED</code> - The finding was reviewed and remediated
     *         and is now considered resolved.
     *         </p>
     *         </li>
     *         </ul>
     */
    public java.util.List<StringFilter> getWorkflowStatus() {
        return workflowStatus;
    }

    /**
     * <p>
     * The status of the investigation into a finding. Allowed values are the
     * following.
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>NEW</code> - The initial state of a finding, before it is reviewed.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>NOTIFIED</code> - Indicates that the resource owner has been
     * notified about the security issue. Used when the initial reviewer is not
     * the resource owner, and needs intervention from the resource owner.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>SUPPRESSED</code> - The finding will not be reviewed again and will
     * not be acted upon.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>RESOLVED</code> - The finding was reviewed and remediated and is
     * now considered resolved.
     * </p>
     * </li>
     * </ul>
     *
     * @param workflowStatus <p>
     *            The status of the investigation into a finding. Allowed values
     *            are the following.
     *            </p>
     *            <ul>
     *            <li>
     *            <p>
     *            <code>NEW</code> - The initial state of a finding, before it
     *            is reviewed.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>NOTIFIED</code> - Indicates that the resource owner has
     *            been notified about the security issue. Used when the initial
     *            reviewer is not the resource owner, and needs intervention
     *            from the resource owner.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>SUPPRESSED</code> - The finding will not be reviewed
     *            again and will not be acted upon.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>RESOLVED</code> - The finding was reviewed and
     *            remediated and is now considered resolved.
     *            </p>
     *            </li>
     *            </ul>
     */
    public void setWorkflowStatus(java.util.Collection<StringFilter> workflowStatus) {
        if (workflowStatus == null) {
            this.workflowStatus = null;
            return;
        }

        this.workflowStatus = new java.util.ArrayList<StringFilter>(workflowStatus);
    }

    /**
     * <p>
     * The status of the investigation into a finding. Allowed values are the
     * following.
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>NEW</code> - The initial state of a finding, before it is reviewed.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>NOTIFIED</code> - Indicates that the resource owner has been
     * notified about the security issue. Used when the initial reviewer is not
     * the resource owner, and needs intervention from the resource owner.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>SUPPRESSED</code> - The finding will not be reviewed again and will
     * not be acted upon.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>RESOLVED</code> - The finding was reviewed and remediated and is
     * now considered resolved.
     * </p>
     * </li>
     * </ul>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param workflowStatus <p>
     *            The status of the investigation into a finding. Allowed values
     *            are the following.
     *            </p>
     *            <ul>
     *            <li>
     *            <p>
     *            <code>NEW</code> - The initial state of a finding, before it
     *            is reviewed.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>NOTIFIED</code> - Indicates that the resource owner has
     *            been notified about the security issue. Used when the initial
     *            reviewer is not the resource owner, and needs intervention
     *            from the resource owner.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>SUPPRESSED</code> - The finding will not be reviewed
     *            again and will not be acted upon.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>RESOLVED</code> - The finding was reviewed and
     *            remediated and is now considered resolved.
     *            </p>
     *            </li>
     *            </ul>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withWorkflowStatus(StringFilter... workflowStatus) {
        if (getWorkflowStatus() == null) {
            this.workflowStatus = new java.util.ArrayList<StringFilter>(workflowStatus.length);
        }
        for (StringFilter value : workflowStatus) {
            this.workflowStatus.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The status of the investigation into a finding. Allowed values are the
     * following.
     * </p>
     * <ul>
     * <li>
     * <p>
     * <code>NEW</code> - The initial state of a finding, before it is reviewed.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>NOTIFIED</code> - Indicates that the resource owner has been
     * notified about the security issue. Used when the initial reviewer is not
     * the resource owner, and needs intervention from the resource owner.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>SUPPRESSED</code> - The finding will not be reviewed again and will
     * not be acted upon.
     * </p>
     * </li>
     * <li>
     * <p>
     * <code>RESOLVED</code> - The finding was reviewed and remediated and is
     * now considered resolved.
     * </p>
     * </li>
     * </ul>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param workflowStatus <p>
     *            The status of the investigation into a finding. Allowed values
     *            are the following.
     *            </p>
     *            <ul>
     *            <li>
     *            <p>
     *            <code>NEW</code> - The initial state of a finding, before it
     *            is reviewed.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>NOTIFIED</code> - Indicates that the resource owner has
     *            been notified about the security issue. Used when the initial
     *            reviewer is not the resource owner, and needs intervention
     *            from the resource owner.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>SUPPRESSED</code> - The finding will not be reviewed
     *            again and will not be acted upon.
     *            </p>
     *            </li>
     *            <li>
     *            <p>
     *            <code>RESOLVED</code> - The finding was reviewed and
     *            remediated and is now considered resolved.
     *            </p>
     *            </li>
     *            </ul>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withWorkflowStatus(
            java.util.Collection<StringFilter> workflowStatus) {
        setWorkflowStatus(workflowStatus);
        return this;
    }

    /**
     * <p>
     * The updated record state for the finding.
     * </p>
     *
     * @return <p>
     *         The updated record state for the finding.
     *         </p>
     */
    public java.util.List<StringFilter> getRecordState() {
        return recordState;
    }

    /**
     * <p>
     * The updated record state for the finding.
     * </p>
     *
     * @param recordState <p>
     *            The updated record state for the finding.
     *            </p>
     */
    public void setRecordState(java.util.Collection<StringFilter> recordState) {
        if (recordState == null) {
            this.recordState = null;
            return;
        }

        this.recordState = new java.util.ArrayList<StringFilter>(recordState);
    }

    /**
     * <p>
     * The updated record state for the finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param recordState <p>
     *            The updated record state for the finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withRecordState(StringFilter... recordState) {
        if (getRecordState() == null) {
            this.recordState = new java.util.ArrayList<StringFilter>(recordState.length);
        }
        for (StringFilter value : recordState) {
            this.recordState.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The updated record state for the finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param recordState <p>
     *            The updated record state for the finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withRecordState(java.util.Collection<StringFilter> recordState) {
        setRecordState(recordState);
        return this;
    }

    /**
     * <p>
     * The ARN of the solution that generated a related finding.
     * </p>
     *
     * @return <p>
     *         The ARN of the solution that generated a related finding.
     *         </p>
     */
    public java.util.List<StringFilter> getRelatedFindingsProductArn() {
        return relatedFindingsProductArn;
    }

    /**
     * <p>
     * The ARN of the solution that generated a related finding.
     * </p>
     *
     * @param relatedFindingsProductArn <p>
     *            The ARN of the solution that generated a related finding.
     *            </p>
     */
    public void setRelatedFindingsProductArn(
            java.util.Collection<StringFilter> relatedFindingsProductArn) {
        if (relatedFindingsProductArn == null) {
            this.relatedFindingsProductArn = null;
            return;
        }

        this.relatedFindingsProductArn = new java.util.ArrayList<StringFilter>(
                relatedFindingsProductArn);
    }

    /**
     * <p>
     * The ARN of the solution that generated a related finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param relatedFindingsProductArn <p>
     *            The ARN of the solution that generated a related finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withRelatedFindingsProductArn(
            StringFilter... relatedFindingsProductArn) {
        if (getRelatedFindingsProductArn() == null) {
            this.relatedFindingsProductArn = new java.util.ArrayList<StringFilter>(
                    relatedFindingsProductArn.length);
        }
        for (StringFilter value : relatedFindingsProductArn) {
            this.relatedFindingsProductArn.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The ARN of the solution that generated a related finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param relatedFindingsProductArn <p>
     *            The ARN of the solution that generated a related finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withRelatedFindingsProductArn(
            java.util.Collection<StringFilter> relatedFindingsProductArn) {
        setRelatedFindingsProductArn(relatedFindingsProductArn);
        return this;
    }

    /**
     * <p>
     * The solution-generated identifier for a related finding.
     * </p>
     *
     * @return <p>
     *         The solution-generated identifier for a related finding.
     *         </p>
     */
    public java.util.List<StringFilter> getRelatedFindingsId() {
        return relatedFindingsId;
    }

    /**
     * <p>
     * The solution-generated identifier for a related finding.
     * </p>
     *
     * @param relatedFindingsId <p>
     *            The solution-generated identifier for a related finding.
     *            </p>
     */
    public void setRelatedFindingsId(java.util.Collection<StringFilter> relatedFindingsId) {
        if (relatedFindingsId == null) {
            this.relatedFindingsId = null;
            return;
        }

        this.relatedFindingsId = new java.util.ArrayList<StringFilter>(relatedFindingsId);
    }

    /**
     * <p>
     * The solution-generated identifier for a related finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param relatedFindingsId <p>
     *            The solution-generated identifier for a related finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withRelatedFindingsId(StringFilter... relatedFindingsId) {
        if (getRelatedFindingsId() == null) {
            this.relatedFindingsId = new java.util.ArrayList<StringFilter>(relatedFindingsId.length);
        }
        for (StringFilter value : relatedFindingsId) {
            this.relatedFindingsId.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The solution-generated identifier for a related finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param relatedFindingsId <p>
     *            The solution-generated identifier for a related finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withRelatedFindingsId(
            java.util.Collection<StringFilter> relatedFindingsId) {
        setRelatedFindingsId(relatedFindingsId);
        return this;
    }

    /**
     * <p>
     * The text of a note.
     * </p>
     *
     * @return <p>
     *         The text of a note.
     *         </p>
     */
    public java.util.List<StringFilter> getNoteText() {
        return noteText;
    }

    /**
     * <p>
     * The text of a note.
     * </p>
     *
     * @param noteText <p>
     *            The text of a note.
     *            </p>
     */
    public void setNoteText(java.util.Collection<StringFilter> noteText) {
        if (noteText == null) {
            this.noteText = null;
            return;
        }

        this.noteText = new java.util.ArrayList<StringFilter>(noteText);
    }

    /**
     * <p>
     * The text of a note.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param noteText <p>
     *            The text of a note.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNoteText(StringFilter... noteText) {
        if (getNoteText() == null) {
            this.noteText = new java.util.ArrayList<StringFilter>(noteText.length);
        }
        for (StringFilter value : noteText) {
            this.noteText.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The text of a note.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param noteText <p>
     *            The text of a note.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNoteText(java.util.Collection<StringFilter> noteText) {
        setNoteText(noteText);
        return this;
    }

    /**
     * <p>
     * The timestamp of when the note was updated.
     * </p>
     *
     * @return <p>
     *         The timestamp of when the note was updated.
     *         </p>
     */
    public java.util.List<DateFilter> getNoteUpdatedAt() {
        return noteUpdatedAt;
    }

    /**
     * <p>
     * The timestamp of when the note was updated.
     * </p>
     *
     * @param noteUpdatedAt <p>
     *            The timestamp of when the note was updated.
     *            </p>
     */
    public void setNoteUpdatedAt(java.util.Collection<DateFilter> noteUpdatedAt) {
        if (noteUpdatedAt == null) {
            this.noteUpdatedAt = null;
            return;
        }

        this.noteUpdatedAt = new java.util.ArrayList<DateFilter>(noteUpdatedAt);
    }

    /**
     * <p>
     * The timestamp of when the note was updated.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param noteUpdatedAt <p>
     *            The timestamp of when the note was updated.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNoteUpdatedAt(DateFilter... noteUpdatedAt) {
        if (getNoteUpdatedAt() == null) {
            this.noteUpdatedAt = new java.util.ArrayList<DateFilter>(noteUpdatedAt.length);
        }
        for (DateFilter value : noteUpdatedAt) {
            this.noteUpdatedAt.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The timestamp of when the note was updated.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param noteUpdatedAt <p>
     *            The timestamp of when the note was updated.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNoteUpdatedAt(
            java.util.Collection<DateFilter> noteUpdatedAt) {
        setNoteUpdatedAt(noteUpdatedAt);
        return this;
    }

    /**
     * <p>
     * The principal that created a note.
     * </p>
     *
     * @return <p>
     *         The principal that created a note.
     *         </p>
     */
    public java.util.List<StringFilter> getNoteUpdatedBy() {
        return noteUpdatedBy;
    }

    /**
     * <p>
     * The principal that created a note.
     * </p>
     *
     * @param noteUpdatedBy <p>
     *            The principal that created a note.
     *            </p>
     */
    public void setNoteUpdatedBy(java.util.Collection<StringFilter> noteUpdatedBy) {
        if (noteUpdatedBy == null) {
            this.noteUpdatedBy = null;
            return;
        }

        this.noteUpdatedBy = new java.util.ArrayList<StringFilter>(noteUpdatedBy);
    }

    /**
     * <p>
     * The principal that created a note.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param noteUpdatedBy <p>
     *            The principal that created a note.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNoteUpdatedBy(StringFilter... noteUpdatedBy) {
        if (getNoteUpdatedBy() == null) {
            this.noteUpdatedBy = new java.util.ArrayList<StringFilter>(noteUpdatedBy.length);
        }
        for (StringFilter value : noteUpdatedBy) {
            this.noteUpdatedBy.add(value);
        }
        return this;
    }

    /**
     * <p>
     * The principal that created a note.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param noteUpdatedBy <p>
     *            The principal that created a note.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withNoteUpdatedBy(
            java.util.Collection<StringFilter> noteUpdatedBy) {
        setNoteUpdatedBy(noteUpdatedBy);
        return this;
    }

    /**
     * <p>
     * A keyword for a finding.
     * </p>
     *
     * @return <p>
     *         A keyword for a finding.
     *         </p>
     */
    public java.util.List<KeywordFilter> getKeyword() {
        return keyword;
    }

    /**
     * <p>
     * A keyword for a finding.
     * </p>
     *
     * @param keyword <p>
     *            A keyword for a finding.
     *            </p>
     */
    public void setKeyword(java.util.Collection<KeywordFilter> keyword) {
        if (keyword == null) {
            this.keyword = null;
            return;
        }

        this.keyword = new java.util.ArrayList<KeywordFilter>(keyword);
    }

    /**
     * <p>
     * A keyword for a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param keyword <p>
     *            A keyword for a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withKeyword(KeywordFilter... keyword) {
        if (getKeyword() == null) {
            this.keyword = new java.util.ArrayList<KeywordFilter>(keyword.length);
        }
        for (KeywordFilter value : keyword) {
            this.keyword.add(value);
        }
        return this;
    }

    /**
     * <p>
     * A keyword for a finding.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param keyword <p>
     *            A keyword for a finding.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public AwsSecurityFindingFilters withKeyword(java.util.Collection<KeywordFilter> keyword) {
        setKeyword(keyword);
        return this;
    }

    /**
     * Returns a string representation of this object; useful for testing and
     * debugging.
     *
     * @return A string representation of this object.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("{");
        if (getProductArn() != null)
            sb.append("ProductArn: " + getProductArn() + ",");
        if (getAwsAccountId() != null)
            sb.append("AwsAccountId: " + getAwsAccountId() + ",");
        if (getId() != null)
            sb.append("Id: " + getId() + ",");
        if (getGeneratorId() != null)
            sb.append("GeneratorId: " + getGeneratorId() + ",");
        if (getType() != null)
            sb.append("Type: " + getType() + ",");
        if (getFirstObservedAt() != null)
            sb.append("FirstObservedAt: " + getFirstObservedAt() + ",");
        if (getLastObservedAt() != null)
            sb.append("LastObservedAt: " + getLastObservedAt() + ",");
        if (getCreatedAt() != null)
            sb.append("CreatedAt: " + getCreatedAt() + ",");
        if (getUpdatedAt() != null)
            sb.append("UpdatedAt: " + getUpdatedAt() + ",");
        if (getSeverityProduct() != null)
            sb.append("SeverityProduct: " + getSeverityProduct() + ",");
        if (getSeverityNormalized() != null)
            sb.append("SeverityNormalized: " + getSeverityNormalized() + ",");
        if (getSeverityLabel() != null)
            sb.append("SeverityLabel: " + getSeverityLabel() + ",");
        if (getConfidence() != null)
            sb.append("Confidence: " + getConfidence() + ",");
        if (getCriticality() != null)
            sb.append("Criticality: " + getCriticality() + ",");
        if (getTitle() != null)
            sb.append("Title: " + getTitle() + ",");
        if (getDescription() != null)
            sb.append("Description: " + getDescription() + ",");
        if (getRecommendationText() != null)
            sb.append("RecommendationText: " + getRecommendationText() + ",");
        if (getSourceUrl() != null)
            sb.append("SourceUrl: " + getSourceUrl() + ",");
        if (getProductFields() != null)
            sb.append("ProductFields: " + getProductFields() + ",");
        if (getProductName() != null)
            sb.append("ProductName: " + getProductName() + ",");
        if (getCompanyName() != null)
            sb.append("CompanyName: " + getCompanyName() + ",");
        if (getUserDefinedFields() != null)
            sb.append("UserDefinedFields: " + getUserDefinedFields() + ",");
        if (getMalwareName() != null)
            sb.append("MalwareName: " + getMalwareName() + ",");
        if (getMalwareType() != null)
            sb.append("MalwareType: " + getMalwareType() + ",");
        if (getMalwarePath() != null)
            sb.append("MalwarePath: " + getMalwarePath() + ",");
        if (getMalwareState() != null)
            sb.append("MalwareState: " + getMalwareState() + ",");
        if (getNetworkDirection() != null)
            sb.append("NetworkDirection: " + getNetworkDirection() + ",");
        if (getNetworkProtocol() != null)
            sb.append("NetworkProtocol: " + getNetworkProtocol() + ",");
        if (getNetworkSourceIpV4() != null)
            sb.append("NetworkSourceIpV4: " + getNetworkSourceIpV4() + ",");
        if (getNetworkSourceIpV6() != null)
            sb.append("NetworkSourceIpV6: " + getNetworkSourceIpV6() + ",");
        if (getNetworkSourcePort() != null)
            sb.append("NetworkSourcePort: " + getNetworkSourcePort() + ",");
        if (getNetworkSourceDomain() != null)
            sb.append("NetworkSourceDomain: " + getNetworkSourceDomain() + ",");
        if (getNetworkSourceMac() != null)
            sb.append("NetworkSourceMac: " + getNetworkSourceMac() + ",");
        if (getNetworkDestinationIpV4() != null)
            sb.append("NetworkDestinationIpV4: " + getNetworkDestinationIpV4() + ",");
        if (getNetworkDestinationIpV6() != null)
            sb.append("NetworkDestinationIpV6: " + getNetworkDestinationIpV6() + ",");
        if (getNetworkDestinationPort() != null)
            sb.append("NetworkDestinationPort: " + getNetworkDestinationPort() + ",");
        if (getNetworkDestinationDomain() != null)
            sb.append("NetworkDestinationDomain: " + getNetworkDestinationDomain() + ",");
        if (getProcessName() != null)
            sb.append("ProcessName: " + getProcessName() + ",");
        if (getProcessPath() != null)
            sb.append("ProcessPath: " + getProcessPath() + ",");
        if (getProcessPid() != null)
            sb.append("ProcessPid: " + getProcessPid() + ",");
        if (getProcessParentPid() != null)
            sb.append("ProcessParentPid: " + getProcessParentPid() + ",");
        if (getProcessLaunchedAt() != null)
            sb.append("ProcessLaunchedAt: " + getProcessLaunchedAt() + ",");
        if (getProcessTerminatedAt() != null)
            sb.append("ProcessTerminatedAt: " + getProcessTerminatedAt() + ",");
        if (getThreatIntelIndicatorType() != null)
            sb.append("ThreatIntelIndicatorType: " + getThreatIntelIndicatorType() + ",");
        if (getThreatIntelIndicatorValue() != null)
            sb.append("ThreatIntelIndicatorValue: " + getThreatIntelIndicatorValue() + ",");
        if (getThreatIntelIndicatorCategory() != null)
            sb.append("ThreatIntelIndicatorCategory: " + getThreatIntelIndicatorCategory() + ",");
        if (getThreatIntelIndicatorLastObservedAt() != null)
            sb.append("ThreatIntelIndicatorLastObservedAt: "
                    + getThreatIntelIndicatorLastObservedAt() + ",");
        if (getThreatIntelIndicatorSource() != null)
            sb.append("ThreatIntelIndicatorSource: " + getThreatIntelIndicatorSource() + ",");
        if (getThreatIntelIndicatorSourceUrl() != null)
            sb.append("ThreatIntelIndicatorSourceUrl: " + getThreatIntelIndicatorSourceUrl() + ",");
        if (getResourceType() != null)
            sb.append("ResourceType: " + getResourceType() + ",");
        if (getResourceId() != null)
            sb.append("ResourceId: " + getResourceId() + ",");
        if (getResourcePartition() != null)
            sb.append("ResourcePartition: " + getResourcePartition() + ",");
        if (getResourceRegion() != null)
            sb.append("ResourceRegion: " + getResourceRegion() + ",");
        if (getResourceTags() != null)
            sb.append("ResourceTags: " + getResourceTags() + ",");
        if (getResourceAwsEc2InstanceType() != null)
            sb.append("ResourceAwsEc2InstanceType: " + getResourceAwsEc2InstanceType() + ",");
        if (getResourceAwsEc2InstanceImageId() != null)
            sb.append("ResourceAwsEc2InstanceImageId: " + getResourceAwsEc2InstanceImageId() + ",");
        if (getResourceAwsEc2InstanceIpV4Addresses() != null)
            sb.append("ResourceAwsEc2InstanceIpV4Addresses: "
                    + getResourceAwsEc2InstanceIpV4Addresses() + ",");
        if (getResourceAwsEc2InstanceIpV6Addresses() != null)
            sb.append("ResourceAwsEc2InstanceIpV6Addresses: "
                    + getResourceAwsEc2InstanceIpV6Addresses() + ",");
        if (getResourceAwsEc2InstanceKeyName() != null)
            sb.append("ResourceAwsEc2InstanceKeyName: " + getResourceAwsEc2InstanceKeyName() + ",");
        if (getResourceAwsEc2InstanceIamInstanceProfileArn() != null)
            sb.append("ResourceAwsEc2InstanceIamInstanceProfileArn: "
                    + getResourceAwsEc2InstanceIamInstanceProfileArn() + ",");
        if (getResourceAwsEc2InstanceVpcId() != null)
            sb.append("ResourceAwsEc2InstanceVpcId: " + getResourceAwsEc2InstanceVpcId() + ",");
        if (getResourceAwsEc2InstanceSubnetId() != null)
            sb.append("ResourceAwsEc2InstanceSubnetId: " + getResourceAwsEc2InstanceSubnetId()
                    + ",");
        if (getResourceAwsEc2InstanceLaunchedAt() != null)
            sb.append("ResourceAwsEc2InstanceLaunchedAt: " + getResourceAwsEc2InstanceLaunchedAt()
                    + ",");
        if (getResourceAwsS3BucketOwnerId() != null)
            sb.append("ResourceAwsS3BucketOwnerId: " + getResourceAwsS3BucketOwnerId() + ",");
        if (getResourceAwsS3BucketOwnerName() != null)
            sb.append("ResourceAwsS3BucketOwnerName: " + getResourceAwsS3BucketOwnerName() + ",");
        if (getResourceAwsIamAccessKeyUserName() != null)
            sb.append("ResourceAwsIamAccessKeyUserName: " + getResourceAwsIamAccessKeyUserName()
                    + ",");
        if (getResourceAwsIamAccessKeyStatus() != null)
            sb.append("ResourceAwsIamAccessKeyStatus: " + getResourceAwsIamAccessKeyStatus() + ",");
        if (getResourceAwsIamAccessKeyCreatedAt() != null)
            sb.append("ResourceAwsIamAccessKeyCreatedAt: " + getResourceAwsIamAccessKeyCreatedAt()
                    + ",");
        if (getResourceContainerName() != null)
            sb.append("ResourceContainerName: " + getResourceContainerName() + ",");
        if (getResourceContainerImageId() != null)
            sb.append("ResourceContainerImageId: " + getResourceContainerImageId() + ",");
        if (getResourceContainerImageName() != null)
            sb.append("ResourceContainerImageName: " + getResourceContainerImageName() + ",");
        if (getResourceContainerLaunchedAt() != null)
            sb.append("ResourceContainerLaunchedAt: " + getResourceContainerLaunchedAt() + ",");
        if (getResourceDetailsOther() != null)
            sb.append("ResourceDetailsOther: " + getResourceDetailsOther() + ",");
        if (getComplianceStatus() != null)
            sb.append("ComplianceStatus: " + getComplianceStatus() + ",");
        if (getVerificationState() != null)
            sb.append("VerificationState: " + getVerificationState() + ",");
        if (getWorkflowState() != null)
            sb.append("WorkflowState: " + getWorkflowState() + ",");
        if (getWorkflowStatus() != null)
            sb.append("WorkflowStatus: " + getWorkflowStatus() + ",");
        if (getRecordState() != null)
            sb.append("RecordState: " + getRecordState() + ",");
        if (getRelatedFindingsProductArn() != null)
            sb.append("RelatedFindingsProductArn: " + getRelatedFindingsProductArn() + ",");
        if (getRelatedFindingsId() != null)
            sb.append("RelatedFindingsId: " + getRelatedFindingsId() + ",");
        if (getNoteText() != null)
            sb.append("NoteText: " + getNoteText() + ",");
        if (getNoteUpdatedAt() != null)
            sb.append("NoteUpdatedAt: " + getNoteUpdatedAt() + ",");
        if (getNoteUpdatedBy() != null)
            sb.append("NoteUpdatedBy: " + getNoteUpdatedBy() + ",");
        if (getKeyword() != null)
            sb.append("Keyword: " + getKeyword());
        sb.append("}");
        return sb.toString();
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int hashCode = 1;

        hashCode = prime * hashCode + ((getProductArn() == null) ? 0 : getProductArn().hashCode());
        hashCode = prime * hashCode
                + ((getAwsAccountId() == null) ? 0 : getAwsAccountId().hashCode());
        hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
        hashCode = prime * hashCode
                + ((getGeneratorId() == null) ? 0 : getGeneratorId().hashCode());
        hashCode = prime * hashCode + ((getType() == null) ? 0 : getType().hashCode());
        hashCode = prime * hashCode
                + ((getFirstObservedAt() == null) ? 0 : getFirstObservedAt().hashCode());
        hashCode = prime * hashCode
                + ((getLastObservedAt() == null) ? 0 : getLastObservedAt().hashCode());
        hashCode = prime * hashCode + ((getCreatedAt() == null) ? 0 : getCreatedAt().hashCode());
        hashCode = prime * hashCode + ((getUpdatedAt() == null) ? 0 : getUpdatedAt().hashCode());
        hashCode = prime * hashCode
                + ((getSeverityProduct() == null) ? 0 : getSeverityProduct().hashCode());
        hashCode = prime * hashCode
                + ((getSeverityNormalized() == null) ? 0 : getSeverityNormalized().hashCode());
        hashCode = prime * hashCode
                + ((getSeverityLabel() == null) ? 0 : getSeverityLabel().hashCode());
        hashCode = prime * hashCode + ((getConfidence() == null) ? 0 : getConfidence().hashCode());
        hashCode = prime * hashCode
                + ((getCriticality() == null) ? 0 : getCriticality().hashCode());
        hashCode = prime * hashCode + ((getTitle() == null) ? 0 : getTitle().hashCode());
        hashCode = prime * hashCode
                + ((getDescription() == null) ? 0 : getDescription().hashCode());
        hashCode = prime * hashCode
                + ((getRecommendationText() == null) ? 0 : getRecommendationText().hashCode());
        hashCode = prime * hashCode + ((getSourceUrl() == null) ? 0 : getSourceUrl().hashCode());
        hashCode = prime * hashCode
                + ((getProductFields() == null) ? 0 : getProductFields().hashCode());
        hashCode = prime * hashCode
                + ((getProductName() == null) ? 0 : getProductName().hashCode());
        hashCode = prime * hashCode
                + ((getCompanyName() == null) ? 0 : getCompanyName().hashCode());
        hashCode = prime * hashCode
                + ((getUserDefinedFields() == null) ? 0 : getUserDefinedFields().hashCode());
        hashCode = prime * hashCode
                + ((getMalwareName() == null) ? 0 : getMalwareName().hashCode());
        hashCode = prime * hashCode
                + ((getMalwareType() == null) ? 0 : getMalwareType().hashCode());
        hashCode = prime * hashCode
                + ((getMalwarePath() == null) ? 0 : getMalwarePath().hashCode());
        hashCode = prime * hashCode
                + ((getMalwareState() == null) ? 0 : getMalwareState().hashCode());
        hashCode = prime * hashCode
                + ((getNetworkDirection() == null) ? 0 : getNetworkDirection().hashCode());
        hashCode = prime * hashCode
                + ((getNetworkProtocol() == null) ? 0 : getNetworkProtocol().hashCode());
        hashCode = prime * hashCode
                + ((getNetworkSourceIpV4() == null) ? 0 : getNetworkSourceIpV4().hashCode());
        hashCode = prime * hashCode
                + ((getNetworkSourceIpV6() == null) ? 0 : getNetworkSourceIpV6().hashCode());
        hashCode = prime * hashCode
                + ((getNetworkSourcePort() == null) ? 0 : getNetworkSourcePort().hashCode());
        hashCode = prime * hashCode
                + ((getNetworkSourceDomain() == null) ? 0 : getNetworkSourceDomain().hashCode());
        hashCode = prime * hashCode
                + ((getNetworkSourceMac() == null) ? 0 : getNetworkSourceMac().hashCode());
        hashCode = prime
                * hashCode
                + ((getNetworkDestinationIpV4() == null) ? 0 : getNetworkDestinationIpV4()
                        .hashCode());
        hashCode = prime
                * hashCode
                + ((getNetworkDestinationIpV6() == null) ? 0 : getNetworkDestinationIpV6()
                        .hashCode());
        hashCode = prime
                * hashCode
                + ((getNetworkDestinationPort() == null) ? 0 : getNetworkDestinationPort()
                        .hashCode());
        hashCode = prime
                * hashCode
                + ((getNetworkDestinationDomain() == null) ? 0 : getNetworkDestinationDomain()
                        .hashCode());
        hashCode = prime * hashCode
                + ((getProcessName() == null) ? 0 : getProcessName().hashCode());
        hashCode = prime * hashCode
                + ((getProcessPath() == null) ? 0 : getProcessPath().hashCode());
        hashCode = prime * hashCode + ((getProcessPid() == null) ? 0 : getProcessPid().hashCode());
        hashCode = prime * hashCode
                + ((getProcessParentPid() == null) ? 0 : getProcessParentPid().hashCode());
        hashCode = prime * hashCode
                + ((getProcessLaunchedAt() == null) ? 0 : getProcessLaunchedAt().hashCode());
        hashCode = prime * hashCode
                + ((getProcessTerminatedAt() == null) ? 0 : getProcessTerminatedAt().hashCode());
        hashCode = prime
                * hashCode
                + ((getThreatIntelIndicatorType() == null) ? 0 : getThreatIntelIndicatorType()
                        .hashCode());
        hashCode = prime
                * hashCode
                + ((getThreatIntelIndicatorValue() == null) ? 0 : getThreatIntelIndicatorValue()
                        .hashCode());
        hashCode = prime
                * hashCode
                + ((getThreatIntelIndicatorCategory() == null) ? 0
                        : getThreatIntelIndicatorCategory().hashCode());
        hashCode = prime
                * hashCode
                + ((getThreatIntelIndicatorLastObservedAt() == null) ? 0
                        : getThreatIntelIndicatorLastObservedAt().hashCode());
        hashCode = prime
                * hashCode
                + ((getThreatIntelIndicatorSource() == null) ? 0 : getThreatIntelIndicatorSource()
                        .hashCode());
        hashCode = prime
                * hashCode
                + ((getThreatIntelIndicatorSourceUrl() == null) ? 0
                        : getThreatIntelIndicatorSourceUrl().hashCode());
        hashCode = prime * hashCode
                + ((getResourceType() == null) ? 0 : getResourceType().hashCode());
        hashCode = prime * hashCode + ((getResourceId() == null) ? 0 : getResourceId().hashCode());
        hashCode = prime * hashCode
                + ((getResourcePartition() == null) ? 0 : getResourcePartition().hashCode());
        hashCode = prime * hashCode
                + ((getResourceRegion() == null) ? 0 : getResourceRegion().hashCode());
        hashCode = prime * hashCode
                + ((getResourceTags() == null) ? 0 : getResourceTags().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsEc2InstanceType() == null) ? 0 : getResourceAwsEc2InstanceType()
                        .hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsEc2InstanceImageId() == null) ? 0
                        : getResourceAwsEc2InstanceImageId().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsEc2InstanceIpV4Addresses() == null) ? 0
                        : getResourceAwsEc2InstanceIpV4Addresses().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsEc2InstanceIpV6Addresses() == null) ? 0
                        : getResourceAwsEc2InstanceIpV6Addresses().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsEc2InstanceKeyName() == null) ? 0
                        : getResourceAwsEc2InstanceKeyName().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsEc2InstanceIamInstanceProfileArn() == null) ? 0
                        : getResourceAwsEc2InstanceIamInstanceProfileArn().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsEc2InstanceVpcId() == null) ? 0
                        : getResourceAwsEc2InstanceVpcId().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsEc2InstanceSubnetId() == null) ? 0
                        : getResourceAwsEc2InstanceSubnetId().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsEc2InstanceLaunchedAt() == null) ? 0
                        : getResourceAwsEc2InstanceLaunchedAt().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsS3BucketOwnerId() == null) ? 0 : getResourceAwsS3BucketOwnerId()
                        .hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsS3BucketOwnerName() == null) ? 0
                        : getResourceAwsS3BucketOwnerName().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsIamAccessKeyUserName() == null) ? 0
                        : getResourceAwsIamAccessKeyUserName().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsIamAccessKeyStatus() == null) ? 0
                        : getResourceAwsIamAccessKeyStatus().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceAwsIamAccessKeyCreatedAt() == null) ? 0
                        : getResourceAwsIamAccessKeyCreatedAt().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceContainerName() == null) ? 0 : getResourceContainerName().hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceContainerImageId() == null) ? 0 : getResourceContainerImageId()
                        .hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceContainerImageName() == null) ? 0 : getResourceContainerImageName()
                        .hashCode());
        hashCode = prime
                * hashCode
                + ((getResourceContainerLaunchedAt() == null) ? 0
                        : getResourceContainerLaunchedAt().hashCode());
        hashCode = prime * hashCode
                + ((getResourceDetailsOther() == null) ? 0 : getResourceDetailsOther().hashCode());
        hashCode = prime * hashCode
                + ((getComplianceStatus() == null) ? 0 : getComplianceStatus().hashCode());
        hashCode = prime * hashCode
                + ((getVerificationState() == null) ? 0 : getVerificationState().hashCode());
        hashCode = prime * hashCode
                + ((getWorkflowState() == null) ? 0 : getWorkflowState().hashCode());
        hashCode = prime * hashCode
                + ((getWorkflowStatus() == null) ? 0 : getWorkflowStatus().hashCode());
        hashCode = prime * hashCode
                + ((getRecordState() == null) ? 0 : getRecordState().hashCode());
        hashCode = prime
                * hashCode
                + ((getRelatedFindingsProductArn() == null) ? 0 : getRelatedFindingsProductArn()
                        .hashCode());
        hashCode = prime * hashCode
                + ((getRelatedFindingsId() == null) ? 0 : getRelatedFindingsId().hashCode());
        hashCode = prime * hashCode + ((getNoteText() == null) ? 0 : getNoteText().hashCode());
        hashCode = prime * hashCode
                + ((getNoteUpdatedAt() == null) ? 0 : getNoteUpdatedAt().hashCode());
        hashCode = prime * hashCode
                + ((getNoteUpdatedBy() == null) ? 0 : getNoteUpdatedBy().hashCode());
        hashCode = prime * hashCode + ((getKeyword() == null) ? 0 : getKeyword().hashCode());
        return hashCode;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;

        if (obj instanceof AwsSecurityFindingFilters == false)
            return false;
        AwsSecurityFindingFilters other = (AwsSecurityFindingFilters) obj;

        if (other.getProductArn() == null ^ this.getProductArn() == null)
            return false;
        if (other.getProductArn() != null
                && other.getProductArn().equals(this.getProductArn()) == false)
            return false;
        if (other.getAwsAccountId() == null ^ this.getAwsAccountId() == null)
            return false;
        if (other.getAwsAccountId() != null
                && other.getAwsAccountId().equals(this.getAwsAccountId()) == false)
            return false;
        if (other.getId() == null ^ this.getId() == null)
            return false;
        if (other.getId() != null && other.getId().equals(this.getId()) == false)
            return false;
        if (other.getGeneratorId() == null ^ this.getGeneratorId() == null)
            return false;
        if (other.getGeneratorId() != null
                && other.getGeneratorId().equals(this.getGeneratorId()) == false)
            return false;
        if (other.getType() == null ^ this.getType() == null)
            return false;
        if (other.getType() != null && other.getType().equals(this.getType()) == false)
            return false;
        if (other.getFirstObservedAt() == null ^ this.getFirstObservedAt() == null)
            return false;
        if (other.getFirstObservedAt() != null
                && other.getFirstObservedAt().equals(this.getFirstObservedAt()) == false)
            return false;
        if (other.getLastObservedAt() == null ^ this.getLastObservedAt() == null)
            return false;
        if (other.getLastObservedAt() != null
                && other.getLastObservedAt().equals(this.getLastObservedAt()) == false)
            return false;
        if (other.getCreatedAt() == null ^ this.getCreatedAt() == null)
            return false;
        if (other.getCreatedAt() != null
                && other.getCreatedAt().equals(this.getCreatedAt()) == false)
            return false;
        if (other.getUpdatedAt() == null ^ this.getUpdatedAt() == null)
            return false;
        if (other.getUpdatedAt() != null
                && other.getUpdatedAt().equals(this.getUpdatedAt()) == false)
            return false;
        if (other.getSeverityProduct() == null ^ this.getSeverityProduct() == null)
            return false;
        if (other.getSeverityProduct() != null
                && other.getSeverityProduct().equals(this.getSeverityProduct()) == false)
            return false;
        if (other.getSeverityNormalized() == null ^ this.getSeverityNormalized() == null)
            return false;
        if (other.getSeverityNormalized() != null
                && other.getSeverityNormalized().equals(this.getSeverityNormalized()) == false)
            return false;
        if (other.getSeverityLabel() == null ^ this.getSeverityLabel() == null)
            return false;
        if (other.getSeverityLabel() != null
                && other.getSeverityLabel().equals(this.getSeverityLabel()) == false)
            return false;
        if (other.getConfidence() == null ^ this.getConfidence() == null)
            return false;
        if (other.getConfidence() != null
                && other.getConfidence().equals(this.getConfidence()) == false)
            return false;
        if (other.getCriticality() == null ^ this.getCriticality() == null)
            return false;
        if (other.getCriticality() != null
                && other.getCriticality().equals(this.getCriticality()) == false)
            return false;
        if (other.getTitle() == null ^ this.getTitle() == null)
            return false;
        if (other.getTitle() != null && other.getTitle().equals(this.getTitle()) == false)
            return false;
        if (other.getDescription() == null ^ this.getDescription() == null)
            return false;
        if (other.getDescription() != null
                && other.getDescription().equals(this.getDescription()) == false)
            return false;
        if (other.getRecommendationText() == null ^ this.getRecommendationText() == null)
            return false;
        if (other.getRecommendationText() != null
                && other.getRecommendationText().equals(this.getRecommendationText()) == false)
            return false;
        if (other.getSourceUrl() == null ^ this.getSourceUrl() == null)
            return false;
        if (other.getSourceUrl() != null
                && other.getSourceUrl().equals(this.getSourceUrl()) == false)
            return false;
        if (other.getProductFields() == null ^ this.getProductFields() == null)
            return false;
        if (other.getProductFields() != null
                && other.getProductFields().equals(this.getProductFields()) == false)
            return false;
        if (other.getProductName() == null ^ this.getProductName() == null)
            return false;
        if (other.getProductName() != null
                && other.getProductName().equals(this.getProductName()) == false)
            return false;
        if (other.getCompanyName() == null ^ this.getCompanyName() == null)
            return false;
        if (other.getCompanyName() != null
                && other.getCompanyName().equals(this.getCompanyName()) == false)
            return false;
        if (other.getUserDefinedFields() == null ^ this.getUserDefinedFields() == null)
            return false;
        if (other.getUserDefinedFields() != null
                && other.getUserDefinedFields().equals(this.getUserDefinedFields()) == false)
            return false;
        if (other.getMalwareName() == null ^ this.getMalwareName() == null)
            return false;
        if (other.getMalwareName() != null
                && other.getMalwareName().equals(this.getMalwareName()) == false)
            return false;
        if (other.getMalwareType() == null ^ this.getMalwareType() == null)
            return false;
        if (other.getMalwareType() != null
                && other.getMalwareType().equals(this.getMalwareType()) == false)
            return false;
        if (other.getMalwarePath() == null ^ this.getMalwarePath() == null)
            return false;
        if (other.getMalwarePath() != null
                && other.getMalwarePath().equals(this.getMalwarePath()) == false)
            return false;
        if (other.getMalwareState() == null ^ this.getMalwareState() == null)
            return false;
        if (other.getMalwareState() != null
                && other.getMalwareState().equals(this.getMalwareState()) == false)
            return false;
        if (other.getNetworkDirection() == null ^ this.getNetworkDirection() == null)
            return false;
        if (other.getNetworkDirection() != null
                && other.getNetworkDirection().equals(this.getNetworkDirection()) == false)
            return false;
        if (other.getNetworkProtocol() == null ^ this.getNetworkProtocol() == null)
            return false;
        if (other.getNetworkProtocol() != null
                && other.getNetworkProtocol().equals(this.getNetworkProtocol()) == false)
            return false;
        if (other.getNetworkSourceIpV4() == null ^ this.getNetworkSourceIpV4() == null)
            return false;
        if (other.getNetworkSourceIpV4() != null
                && other.getNetworkSourceIpV4().equals(this.getNetworkSourceIpV4()) == false)
            return false;
        if (other.getNetworkSourceIpV6() == null ^ this.getNetworkSourceIpV6() == null)
            return false;
        if (other.getNetworkSourceIpV6() != null
                && other.getNetworkSourceIpV6().equals(this.getNetworkSourceIpV6()) == false)
            return false;
        if (other.getNetworkSourcePort() == null ^ this.getNetworkSourcePort() == null)
            return false;
        if (other.getNetworkSourcePort() != null
                && other.getNetworkSourcePort().equals(this.getNetworkSourcePort()) == false)
            return false;
        if (other.getNetworkSourceDomain() == null ^ this.getNetworkSourceDomain() == null)
            return false;
        if (other.getNetworkSourceDomain() != null
                && other.getNetworkSourceDomain().equals(this.getNetworkSourceDomain()) == false)
            return false;
        if (other.getNetworkSourceMac() == null ^ this.getNetworkSourceMac() == null)
            return false;
        if (other.getNetworkSourceMac() != null
                && other.getNetworkSourceMac().equals(this.getNetworkSourceMac()) == false)
            return false;
        if (other.getNetworkDestinationIpV4() == null ^ this.getNetworkDestinationIpV4() == null)
            return false;
        if (other.getNetworkDestinationIpV4() != null
                && other.getNetworkDestinationIpV4().equals(this.getNetworkDestinationIpV4()) == false)
            return false;
        if (other.getNetworkDestinationIpV6() == null ^ this.getNetworkDestinationIpV6() == null)
            return false;
        if (other.getNetworkDestinationIpV6() != null
                && other.getNetworkDestinationIpV6().equals(this.getNetworkDestinationIpV6()) == false)
            return false;
        if (other.getNetworkDestinationPort() == null ^ this.getNetworkDestinationPort() == null)
            return false;
        if (other.getNetworkDestinationPort() != null
                && other.getNetworkDestinationPort().equals(this.getNetworkDestinationPort()) == false)
            return false;
        if (other.getNetworkDestinationDomain() == null
                ^ this.getNetworkDestinationDomain() == null)
            return false;
        if (other.getNetworkDestinationDomain() != null
                && other.getNetworkDestinationDomain().equals(this.getNetworkDestinationDomain()) == false)
            return false;
        if (other.getProcessName() == null ^ this.getProcessName() == null)
            return false;
        if (other.getProcessName() != null
                && other.getProcessName().equals(this.getProcessName()) == false)
            return false;
        if (other.getProcessPath() == null ^ this.getProcessPath() == null)
            return false;
        if (other.getProcessPath() != null
                && other.getProcessPath().equals(this.getProcessPath()) == false)
            return false;
        if (other.getProcessPid() == null ^ this.getProcessPid() == null)
            return false;
        if (other.getProcessPid() != null
                && other.getProcessPid().equals(this.getProcessPid()) == false)
            return false;
        if (other.getProcessParentPid() == null ^ this.getProcessParentPid() == null)
            return false;
        if (other.getProcessParentPid() != null
                && other.getProcessParentPid().equals(this.getProcessParentPid()) == false)
            return false;
        if (other.getProcessLaunchedAt() == null ^ this.getProcessLaunchedAt() == null)
            return false;
        if (other.getProcessLaunchedAt() != null
                && other.getProcessLaunchedAt().equals(this.getProcessLaunchedAt()) == false)
            return false;
        if (other.getProcessTerminatedAt() == null ^ this.getProcessTerminatedAt() == null)
            return false;
        if (other.getProcessTerminatedAt() != null
                && other.getProcessTerminatedAt().equals(this.getProcessTerminatedAt()) == false)
            return false;
        if (other.getThreatIntelIndicatorType() == null
                ^ this.getThreatIntelIndicatorType() == null)
            return false;
        if (other.getThreatIntelIndicatorType() != null
                && other.getThreatIntelIndicatorType().equals(this.getThreatIntelIndicatorType()) == false)
            return false;
        if (other.getThreatIntelIndicatorValue() == null
                ^ this.getThreatIntelIndicatorValue() == null)
            return false;
        if (other.getThreatIntelIndicatorValue() != null
                && other.getThreatIntelIndicatorValue().equals(this.getThreatIntelIndicatorValue()) == false)
            return false;
        if (other.getThreatIntelIndicatorCategory() == null
                ^ this.getThreatIntelIndicatorCategory() == null)
            return false;
        if (other.getThreatIntelIndicatorCategory() != null
                && other.getThreatIntelIndicatorCategory().equals(
                        this.getThreatIntelIndicatorCategory()) == false)
            return false;
        if (other.getThreatIntelIndicatorLastObservedAt() == null
                ^ this.getThreatIntelIndicatorLastObservedAt() == null)
            return false;
        if (other.getThreatIntelIndicatorLastObservedAt() != null
                && other.getThreatIntelIndicatorLastObservedAt().equals(
                        this.getThreatIntelIndicatorLastObservedAt()) == false)
            return false;
        if (other.getThreatIntelIndicatorSource() == null
                ^ this.getThreatIntelIndicatorSource() == null)
            return false;
        if (other.getThreatIntelIndicatorSource() != null
                && other.getThreatIntelIndicatorSource().equals(
                        this.getThreatIntelIndicatorSource()) == false)
            return false;
        if (other.getThreatIntelIndicatorSourceUrl() == null
                ^ this.getThreatIntelIndicatorSourceUrl() == null)
            return false;
        if (other.getThreatIntelIndicatorSourceUrl() != null
                && other.getThreatIntelIndicatorSourceUrl().equals(
                        this.getThreatIntelIndicatorSourceUrl()) == false)
            return false;
        if (other.getResourceType() == null ^ this.getResourceType() == null)
            return false;
        if (other.getResourceType() != null
                && other.getResourceType().equals(this.getResourceType()) == false)
            return false;
        if (other.getResourceId() == null ^ this.getResourceId() == null)
            return false;
        if (other.getResourceId() != null
                && other.getResourceId().equals(this.getResourceId()) == false)
            return false;
        if (other.getResourcePartition() == null ^ this.getResourcePartition() == null)
            return false;
        if (other.getResourcePartition() != null
                && other.getResourcePartition().equals(this.getResourcePartition()) == false)
            return false;
        if (other.getResourceRegion() == null ^ this.getResourceRegion() == null)
            return false;
        if (other.getResourceRegion() != null
                && other.getResourceRegion().equals(this.getResourceRegion()) == false)
            return false;
        if (other.getResourceTags() == null ^ this.getResourceTags() == null)
            return false;
        if (other.getResourceTags() != null
                && other.getResourceTags().equals(this.getResourceTags()) == false)
            return false;
        if (other.getResourceAwsEc2InstanceType() == null
                ^ this.getResourceAwsEc2InstanceType() == null)
            return false;
        if (other.getResourceAwsEc2InstanceType() != null
                && other.getResourceAwsEc2InstanceType().equals(
                        this.getResourceAwsEc2InstanceType()) == false)
            return false;
        if (other.getResourceAwsEc2InstanceImageId() == null
                ^ this.getResourceAwsEc2InstanceImageId() == null)
            return false;
        if (other.getResourceAwsEc2InstanceImageId() != null
                && other.getResourceAwsEc2InstanceImageId().equals(
                        this.getResourceAwsEc2InstanceImageId()) == false)
            return false;
        if (other.getResourceAwsEc2InstanceIpV4Addresses() == null
                ^ this.getResourceAwsEc2InstanceIpV4Addresses() == null)
            return false;
        if (other.getResourceAwsEc2InstanceIpV4Addresses() != null
                && other.getResourceAwsEc2InstanceIpV4Addresses().equals(
                        this.getResourceAwsEc2InstanceIpV4Addresses()) == false)
            return false;
        if (other.getResourceAwsEc2InstanceIpV6Addresses() == null
                ^ this.getResourceAwsEc2InstanceIpV6Addresses() == null)
            return false;
        if (other.getResourceAwsEc2InstanceIpV6Addresses() != null
                && other.getResourceAwsEc2InstanceIpV6Addresses().equals(
                        this.getResourceAwsEc2InstanceIpV6Addresses()) == false)
            return false;
        if (other.getResourceAwsEc2InstanceKeyName() == null
                ^ this.getResourceAwsEc2InstanceKeyName() == null)
            return false;
        if (other.getResourceAwsEc2InstanceKeyName() != null
                && other.getResourceAwsEc2InstanceKeyName().equals(
                        this.getResourceAwsEc2InstanceKeyName()) == false)
            return false;
        if (other.getResourceAwsEc2InstanceIamInstanceProfileArn() == null
                ^ this.getResourceAwsEc2InstanceIamInstanceProfileArn() == null)
            return false;
        if (other.getResourceAwsEc2InstanceIamInstanceProfileArn() != null
                && other.getResourceAwsEc2InstanceIamInstanceProfileArn().equals(
                        this.getResourceAwsEc2InstanceIamInstanceProfileArn()) == false)
            return false;
        if (other.getResourceAwsEc2InstanceVpcId() == null
                ^ this.getResourceAwsEc2InstanceVpcId() == null)
            return false;
        if (other.getResourceAwsEc2InstanceVpcId() != null
                && other.getResourceAwsEc2InstanceVpcId().equals(
                        this.getResourceAwsEc2InstanceVpcId()) == false)
            return false;
        if (other.getResourceAwsEc2InstanceSubnetId() == null
                ^ this.getResourceAwsEc2InstanceSubnetId() == null)
            return false;
        if (other.getResourceAwsEc2InstanceSubnetId() != null
                && other.getResourceAwsEc2InstanceSubnetId().equals(
                        this.getResourceAwsEc2InstanceSubnetId()) == false)
            return false;
        if (other.getResourceAwsEc2InstanceLaunchedAt() == null
                ^ this.getResourceAwsEc2InstanceLaunchedAt() == null)
            return false;
        if (other.getResourceAwsEc2InstanceLaunchedAt() != null
                && other.getResourceAwsEc2InstanceLaunchedAt().equals(
                        this.getResourceAwsEc2InstanceLaunchedAt()) == false)
            return false;
        if (other.getResourceAwsS3BucketOwnerId() == null
                ^ this.getResourceAwsS3BucketOwnerId() == null)
            return false;
        if (other.getResourceAwsS3BucketOwnerId() != null
                && other.getResourceAwsS3BucketOwnerId().equals(
                        this.getResourceAwsS3BucketOwnerId()) == false)
            return false;
        if (other.getResourceAwsS3BucketOwnerName() == null
                ^ this.getResourceAwsS3BucketOwnerName() == null)
            return false;
        if (other.getResourceAwsS3BucketOwnerName() != null
                && other.getResourceAwsS3BucketOwnerName().equals(
                        this.getResourceAwsS3BucketOwnerName()) == false)
            return false;
        if (other.getResourceAwsIamAccessKeyUserName() == null
                ^ this.getResourceAwsIamAccessKeyUserName() == null)
            return false;
        if (other.getResourceAwsIamAccessKeyUserName() != null
                && other.getResourceAwsIamAccessKeyUserName().equals(
                        this.getResourceAwsIamAccessKeyUserName()) == false)
            return false;
        if (other.getResourceAwsIamAccessKeyStatus() == null
                ^ this.getResourceAwsIamAccessKeyStatus() == null)
            return false;
        if (other.getResourceAwsIamAccessKeyStatus() != null
                && other.getResourceAwsIamAccessKeyStatus().equals(
                        this.getResourceAwsIamAccessKeyStatus()) == false)
            return false;
        if (other.getResourceAwsIamAccessKeyCreatedAt() == null
                ^ this.getResourceAwsIamAccessKeyCreatedAt() == null)
            return false;
        if (other.getResourceAwsIamAccessKeyCreatedAt() != null
                && other.getResourceAwsIamAccessKeyCreatedAt().equals(
                        this.getResourceAwsIamAccessKeyCreatedAt()) == false)
            return false;
        if (other.getResourceContainerName() == null ^ this.getResourceContainerName() == null)
            return false;
        if (other.getResourceContainerName() != null
                && other.getResourceContainerName().equals(this.getResourceContainerName()) == false)
            return false;
        if (other.getResourceContainerImageId() == null
                ^ this.getResourceContainerImageId() == null)
            return false;
        if (other.getResourceContainerImageId() != null
                && other.getResourceContainerImageId().equals(this.getResourceContainerImageId()) == false)
            return false;
        if (other.getResourceContainerImageName() == null
                ^ this.getResourceContainerImageName() == null)
            return false;
        if (other.getResourceContainerImageName() != null
                && other.getResourceContainerImageName().equals(
                        this.getResourceContainerImageName()) == false)
            return false;
        if (other.getResourceContainerLaunchedAt() == null
                ^ this.getResourceContainerLaunchedAt() == null)
            return false;
        if (other.getResourceContainerLaunchedAt() != null
                && other.getResourceContainerLaunchedAt().equals(
                        this.getResourceContainerLaunchedAt()) == false)
            return false;
        if (other.getResourceDetailsOther() == null ^ this.getResourceDetailsOther() == null)
            return false;
        if (other.getResourceDetailsOther() != null
                && other.getResourceDetailsOther().equals(this.getResourceDetailsOther()) == false)
            return false;
        if (other.getComplianceStatus() == null ^ this.getComplianceStatus() == null)
            return false;
        if (other.getComplianceStatus() != null
                && other.getComplianceStatus().equals(this.getComplianceStatus()) == false)
            return false;
        if (other.getVerificationState() == null ^ this.getVerificationState() == null)
            return false;
        if (other.getVerificationState() != null
                && other.getVerificationState().equals(this.getVerificationState()) == false)
            return false;
        if (other.getWorkflowState() == null ^ this.getWorkflowState() == null)
            return false;
        if (other.getWorkflowState() != null
                && other.getWorkflowState().equals(this.getWorkflowState()) == false)
            return false;
        if (other.getWorkflowStatus() == null ^ this.getWorkflowStatus() == null)
            return false;
        if (other.getWorkflowStatus() != null
                && other.getWorkflowStatus().equals(this.getWorkflowStatus()) == false)
            return false;
        if (other.getRecordState() == null ^ this.getRecordState() == null)
            return false;
        if (other.getRecordState() != null
                && other.getRecordState().equals(this.getRecordState()) == false)
            return false;
        if (other.getRelatedFindingsProductArn() == null
                ^ this.getRelatedFindingsProductArn() == null)
            return false;
        if (other.getRelatedFindingsProductArn() != null
                && other.getRelatedFindingsProductArn().equals(this.getRelatedFindingsProductArn()) == false)
            return false;
        if (other.getRelatedFindingsId() == null ^ this.getRelatedFindingsId() == null)
            return false;
        if (other.getRelatedFindingsId() != null
                && other.getRelatedFindingsId().equals(this.getRelatedFindingsId()) == false)
            return false;
        if (other.getNoteText() == null ^ this.getNoteText() == null)
            return false;
        if (other.getNoteText() != null && other.getNoteText().equals(this.getNoteText()) == false)
            return false;
        if (other.getNoteUpdatedAt() == null ^ this.getNoteUpdatedAt() == null)
            return false;
        if (other.getNoteUpdatedAt() != null
                && other.getNoteUpdatedAt().equals(this.getNoteUpdatedAt()) == false)
            return false;
        if (other.getNoteUpdatedBy() == null ^ this.getNoteUpdatedBy() == null)
            return false;
        if (other.getNoteUpdatedBy() != null
                && other.getNoteUpdatedBy().equals(this.getNoteUpdatedBy()) == false)
            return false;
        if (other.getKeyword() == null ^ this.getKeyword() == null)
            return false;
        if (other.getKeyword() != null && other.getKeyword().equals(this.getKeyword()) == false)
            return false;
        return true;
    }
}
