/*
 * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package com.amazonaws.services.awssecurityhub.model;

import java.util.HashMap;
import java.util.Map;

/**
 * Malware Type
 */
public enum MalwareType {

    ADWARE("ADWARE"),
    BLENDED_THREAT("BLENDED_THREAT"),
    BOTNET_AGENT("BOTNET_AGENT"),
    COIN_MINER("COIN_MINER"),
    EXPLOIT_KIT("EXPLOIT_KIT"),
    KEYLOGGER("KEYLOGGER"),
    MACRO("MACRO"),
    POTENTIALLY_UNWANTED("POTENTIALLY_UNWANTED"),
    SPYWARE("SPYWARE"),
    RANSOMWARE("RANSOMWARE"),
    REMOTE_ACCESS("REMOTE_ACCESS"),
    ROOTKIT("ROOTKIT"),
    TROJAN("TROJAN"),
    VIRUS("VIRUS"),
    WORM("WORM");

    private String value;

    private MalwareType(String value) {
        this.value = value;
    }

    @Override
    public String toString() {
        return value;
    }

    private static final Map<String, MalwareType> enumMap;
    static {
        enumMap = new HashMap<String, MalwareType>();
        enumMap.put("ADWARE", ADWARE);
        enumMap.put("BLENDED_THREAT", BLENDED_THREAT);
        enumMap.put("BOTNET_AGENT", BOTNET_AGENT);
        enumMap.put("COIN_MINER", COIN_MINER);
        enumMap.put("EXPLOIT_KIT", EXPLOIT_KIT);
        enumMap.put("KEYLOGGER", KEYLOGGER);
        enumMap.put("MACRO", MACRO);
        enumMap.put("POTENTIALLY_UNWANTED", POTENTIALLY_UNWANTED);
        enumMap.put("SPYWARE", SPYWARE);
        enumMap.put("RANSOMWARE", RANSOMWARE);
        enumMap.put("REMOTE_ACCESS", REMOTE_ACCESS);
        enumMap.put("ROOTKIT", ROOTKIT);
        enumMap.put("TROJAN", TROJAN);
        enumMap.put("VIRUS", VIRUS);
        enumMap.put("WORM", WORM);
    }

    /**
     * Use this in place of valueOf.
     *
     * @param value real value
     * @return MalwareType corresponding to the value
     */
    public static MalwareType fromValue(String value) {
        if (value == null || value.isEmpty()) {
            throw new IllegalArgumentException("Value cannot be null or empty!");
        } else if (enumMap.containsKey(value)) {
            return enumMap.get(value);
        } else {
            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
        }
    }
}
