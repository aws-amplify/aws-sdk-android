/*
 * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package com.amazonaws.services.awsdatabasemigrationservice.model;

import java.io.Serializable;

import com.amazonaws.AmazonWebServiceRequest;

/**
 * <p>
 * Creates an AWS DMS event notification subscription.
 * </p>
 * <p>
 * You can specify the type of source (<code>SourceType</code>) you want to be
 * notified of, provide a list of AWS DMS source IDs (<code>SourceIds</code>)
 * that triggers the events, and provide a list of event categories (
 * <code>EventCategories</code>) for events you want to be notified of. If you
 * specify both the <code>SourceType</code> and <code>SourceIds</code>, such as
 * <code>SourceType = replication-instance</code> and
 * <code>SourceIdentifier = my-replinstance</code>, you will be notified of all
 * the replication instance events for the specified source. If you specify a
 * <code>SourceType</code> but don't specify a <code>SourceIdentifier</code>,
 * you receive notice of the events for that source type for all your AWS DMS
 * sources. If you don't specify either <code>SourceType</code> nor
 * <code>SourceIdentifier</code>, you will be notified of events generated from
 * all AWS DMS sources belonging to your customer account.
 * </p>
 * <p>
 * For more information about AWS DMS events, see <a
 * href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"
 * >Working with Events and Notifications</a> in the <i>AWS Database Migration
 * Service User Guide.</i>
 * </p>
 */
public class CreateEventSubscriptionRequest extends AmazonWebServiceRequest implements Serializable {
    /**
     * <p>
     * The name of the AWS DMS event notification subscription. This name must
     * be less than 255 characters.
     * </p>
     */
    private String subscriptionName;

    /**
     * <p>
     * The Amazon Resource Name (ARN) of the Amazon SNS topic created for event
     * notification. The ARN is created by Amazon SNS when you create a topic
     * and subscribe to it.
     * </p>
     */
    private String snsTopicArn;

    /**
     * <p>
     * The type of AWS DMS resource that generates the events. For example, if
     * you want to be notified of events generated by a replication instance,
     * you set this parameter to <code>replication-instance</code>. If this
     * value isn't specified, all events are returned.
     * </p>
     * <p>
     * Valid values: <code>replication-instance</code> |
     * <code>replication-task</code>
     * </p>
     */
    private String sourceType;

    /**
     * <p>
     * A list of event categories for a source type that you want to subscribe
     * to. For more information, see <a href=
     * "https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"
     * >Working with Events and Notifications</a> in the <i>AWS Database
     * Migration Service User Guide.</i>
     * </p>
     */
    private java.util.List<String> eventCategories;

    /**
     * <p>
     * A list of identifiers for which AWS DMS provides notification events.
     * </p>
     * <p>
     * If you don't specify a value, notifications are provided for all sources.
     * </p>
     * <p>
     * If you specify multiple values, they must be of the same type. For
     * example, if you specify a database instance ID, then all of the other
     * values must be database instance IDs.
     * </p>
     */
    private java.util.List<String> sourceIds;

    /**
     * <p>
     * A Boolean value; set to <code>true</code> to activate the subscription,
     * or set to <code>false</code> to create the subscription but not activate
     * it.
     * </p>
     */
    private Boolean enabled;

    /**
     * <p>
     * One or more tags to be assigned to the event subscription.
     * </p>
     */
    private java.util.List<Tag> tags;

    /**
     * <p>
     * The name of the AWS DMS event notification subscription. This name must
     * be less than 255 characters.
     * </p>
     *
     * @return <p>
     *         The name of the AWS DMS event notification subscription. This
     *         name must be less than 255 characters.
     *         </p>
     */
    public String getSubscriptionName() {
        return subscriptionName;
    }

    /**
     * <p>
     * The name of the AWS DMS event notification subscription. This name must
     * be less than 255 characters.
     * </p>
     *
     * @param subscriptionName <p>
     *            The name of the AWS DMS event notification subscription. This
     *            name must be less than 255 characters.
     *            </p>
     */
    public void setSubscriptionName(String subscriptionName) {
        this.subscriptionName = subscriptionName;
    }

    /**
     * <p>
     * The name of the AWS DMS event notification subscription. This name must
     * be less than 255 characters.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param subscriptionName <p>
     *            The name of the AWS DMS event notification subscription. This
     *            name must be less than 255 characters.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public CreateEventSubscriptionRequest withSubscriptionName(String subscriptionName) {
        this.subscriptionName = subscriptionName;
        return this;
    }

    /**
     * <p>
     * The Amazon Resource Name (ARN) of the Amazon SNS topic created for event
     * notification. The ARN is created by Amazon SNS when you create a topic
     * and subscribe to it.
     * </p>
     *
     * @return <p>
     *         The Amazon Resource Name (ARN) of the Amazon SNS topic created
     *         for event notification. The ARN is created by Amazon SNS when you
     *         create a topic and subscribe to it.
     *         </p>
     */
    public String getSnsTopicArn() {
        return snsTopicArn;
    }

    /**
     * <p>
     * The Amazon Resource Name (ARN) of the Amazon SNS topic created for event
     * notification. The ARN is created by Amazon SNS when you create a topic
     * and subscribe to it.
     * </p>
     *
     * @param snsTopicArn <p>
     *            The Amazon Resource Name (ARN) of the Amazon SNS topic created
     *            for event notification. The ARN is created by Amazon SNS when
     *            you create a topic and subscribe to it.
     *            </p>
     */
    public void setSnsTopicArn(String snsTopicArn) {
        this.snsTopicArn = snsTopicArn;
    }

    /**
     * <p>
     * The Amazon Resource Name (ARN) of the Amazon SNS topic created for event
     * notification. The ARN is created by Amazon SNS when you create a topic
     * and subscribe to it.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param snsTopicArn <p>
     *            The Amazon Resource Name (ARN) of the Amazon SNS topic created
     *            for event notification. The ARN is created by Amazon SNS when
     *            you create a topic and subscribe to it.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public CreateEventSubscriptionRequest withSnsTopicArn(String snsTopicArn) {
        this.snsTopicArn = snsTopicArn;
        return this;
    }

    /**
     * <p>
     * The type of AWS DMS resource that generates the events. For example, if
     * you want to be notified of events generated by a replication instance,
     * you set this parameter to <code>replication-instance</code>. If this
     * value isn't specified, all events are returned.
     * </p>
     * <p>
     * Valid values: <code>replication-instance</code> |
     * <code>replication-task</code>
     * </p>
     *
     * @return <p>
     *         The type of AWS DMS resource that generates the events. For
     *         example, if you want to be notified of events generated by a
     *         replication instance, you set this parameter to
     *         <code>replication-instance</code>. If this value isn't specified,
     *         all events are returned.
     *         </p>
     *         <p>
     *         Valid values: <code>replication-instance</code> |
     *         <code>replication-task</code>
     *         </p>
     */
    public String getSourceType() {
        return sourceType;
    }

    /**
     * <p>
     * The type of AWS DMS resource that generates the events. For example, if
     * you want to be notified of events generated by a replication instance,
     * you set this parameter to <code>replication-instance</code>. If this
     * value isn't specified, all events are returned.
     * </p>
     * <p>
     * Valid values: <code>replication-instance</code> |
     * <code>replication-task</code>
     * </p>
     *
     * @param sourceType <p>
     *            The type of AWS DMS resource that generates the events. For
     *            example, if you want to be notified of events generated by a
     *            replication instance, you set this parameter to
     *            <code>replication-instance</code>. If this value isn't
     *            specified, all events are returned.
     *            </p>
     *            <p>
     *            Valid values: <code>replication-instance</code> |
     *            <code>replication-task</code>
     *            </p>
     */
    public void setSourceType(String sourceType) {
        this.sourceType = sourceType;
    }

    /**
     * <p>
     * The type of AWS DMS resource that generates the events. For example, if
     * you want to be notified of events generated by a replication instance,
     * you set this parameter to <code>replication-instance</code>. If this
     * value isn't specified, all events are returned.
     * </p>
     * <p>
     * Valid values: <code>replication-instance</code> |
     * <code>replication-task</code>
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param sourceType <p>
     *            The type of AWS DMS resource that generates the events. For
     *            example, if you want to be notified of events generated by a
     *            replication instance, you set this parameter to
     *            <code>replication-instance</code>. If this value isn't
     *            specified, all events are returned.
     *            </p>
     *            <p>
     *            Valid values: <code>replication-instance</code> |
     *            <code>replication-task</code>
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public CreateEventSubscriptionRequest withSourceType(String sourceType) {
        this.sourceType = sourceType;
        return this;
    }

    /**
     * <p>
     * A list of event categories for a source type that you want to subscribe
     * to. For more information, see <a href=
     * "https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"
     * >Working with Events and Notifications</a> in the <i>AWS Database
     * Migration Service User Guide.</i>
     * </p>
     *
     * @return <p>
     *         A list of event categories for a source type that you want to
     *         subscribe to. For more information, see <a href=
     *         "https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"
     *         >Working with Events and Notifications</a> in the <i>AWS Database
     *         Migration Service User Guide.</i>
     *         </p>
     */
    public java.util.List<String> getEventCategories() {
        return eventCategories;
    }

    /**
     * <p>
     * A list of event categories for a source type that you want to subscribe
     * to. For more information, see <a href=
     * "https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"
     * >Working with Events and Notifications</a> in the <i>AWS Database
     * Migration Service User Guide.</i>
     * </p>
     *
     * @param eventCategories <p>
     *            A list of event categories for a source type that you want to
     *            subscribe to. For more information, see <a href=
     *            "https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"
     *            >Working with Events and Notifications</a> in the <i>AWS
     *            Database Migration Service User Guide.</i>
     *            </p>
     */
    public void setEventCategories(java.util.Collection<String> eventCategories) {
        if (eventCategories == null) {
            this.eventCategories = null;
            return;
        }

        this.eventCategories = new java.util.ArrayList<String>(eventCategories);
    }

    /**
     * <p>
     * A list of event categories for a source type that you want to subscribe
     * to. For more information, see <a href=
     * "https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"
     * >Working with Events and Notifications</a> in the <i>AWS Database
     * Migration Service User Guide.</i>
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param eventCategories <p>
     *            A list of event categories for a source type that you want to
     *            subscribe to. For more information, see <a href=
     *            "https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"
     *            >Working with Events and Notifications</a> in the <i>AWS
     *            Database Migration Service User Guide.</i>
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public CreateEventSubscriptionRequest withEventCategories(String... eventCategories) {
        if (getEventCategories() == null) {
            this.eventCategories = new java.util.ArrayList<String>(eventCategories.length);
        }
        for (String value : eventCategories) {
            this.eventCategories.add(value);
        }
        return this;
    }

    /**
     * <p>
     * A list of event categories for a source type that you want to subscribe
     * to. For more information, see <a href=
     * "https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"
     * >Working with Events and Notifications</a> in the <i>AWS Database
     * Migration Service User Guide.</i>
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param eventCategories <p>
     *            A list of event categories for a source type that you want to
     *            subscribe to. For more information, see <a href=
     *            "https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"
     *            >Working with Events and Notifications</a> in the <i>AWS
     *            Database Migration Service User Guide.</i>
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public CreateEventSubscriptionRequest withEventCategories(
            java.util.Collection<String> eventCategories) {
        setEventCategories(eventCategories);
        return this;
    }

    /**
     * <p>
     * A list of identifiers for which AWS DMS provides notification events.
     * </p>
     * <p>
     * If you don't specify a value, notifications are provided for all sources.
     * </p>
     * <p>
     * If you specify multiple values, they must be of the same type. For
     * example, if you specify a database instance ID, then all of the other
     * values must be database instance IDs.
     * </p>
     *
     * @return <p>
     *         A list of identifiers for which AWS DMS provides notification
     *         events.
     *         </p>
     *         <p>
     *         If you don't specify a value, notifications are provided for all
     *         sources.
     *         </p>
     *         <p>
     *         If you specify multiple values, they must be of the same type.
     *         For example, if you specify a database instance ID, then all of
     *         the other values must be database instance IDs.
     *         </p>
     */
    public java.util.List<String> getSourceIds() {
        return sourceIds;
    }

    /**
     * <p>
     * A list of identifiers for which AWS DMS provides notification events.
     * </p>
     * <p>
     * If you don't specify a value, notifications are provided for all sources.
     * </p>
     * <p>
     * If you specify multiple values, they must be of the same type. For
     * example, if you specify a database instance ID, then all of the other
     * values must be database instance IDs.
     * </p>
     *
     * @param sourceIds <p>
     *            A list of identifiers for which AWS DMS provides notification
     *            events.
     *            </p>
     *            <p>
     *            If you don't specify a value, notifications are provided for
     *            all sources.
     *            </p>
     *            <p>
     *            If you specify multiple values, they must be of the same type.
     *            For example, if you specify a database instance ID, then all
     *            of the other values must be database instance IDs.
     *            </p>
     */
    public void setSourceIds(java.util.Collection<String> sourceIds) {
        if (sourceIds == null) {
            this.sourceIds = null;
            return;
        }

        this.sourceIds = new java.util.ArrayList<String>(sourceIds);
    }

    /**
     * <p>
     * A list of identifiers for which AWS DMS provides notification events.
     * </p>
     * <p>
     * If you don't specify a value, notifications are provided for all sources.
     * </p>
     * <p>
     * If you specify multiple values, they must be of the same type. For
     * example, if you specify a database instance ID, then all of the other
     * values must be database instance IDs.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param sourceIds <p>
     *            A list of identifiers for which AWS DMS provides notification
     *            events.
     *            </p>
     *            <p>
     *            If you don't specify a value, notifications are provided for
     *            all sources.
     *            </p>
     *            <p>
     *            If you specify multiple values, they must be of the same type.
     *            For example, if you specify a database instance ID, then all
     *            of the other values must be database instance IDs.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public CreateEventSubscriptionRequest withSourceIds(String... sourceIds) {
        if (getSourceIds() == null) {
            this.sourceIds = new java.util.ArrayList<String>(sourceIds.length);
        }
        for (String value : sourceIds) {
            this.sourceIds.add(value);
        }
        return this;
    }

    /**
     * <p>
     * A list of identifiers for which AWS DMS provides notification events.
     * </p>
     * <p>
     * If you don't specify a value, notifications are provided for all sources.
     * </p>
     * <p>
     * If you specify multiple values, they must be of the same type. For
     * example, if you specify a database instance ID, then all of the other
     * values must be database instance IDs.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param sourceIds <p>
     *            A list of identifiers for which AWS DMS provides notification
     *            events.
     *            </p>
     *            <p>
     *            If you don't specify a value, notifications are provided for
     *            all sources.
     *            </p>
     *            <p>
     *            If you specify multiple values, they must be of the same type.
     *            For example, if you specify a database instance ID, then all
     *            of the other values must be database instance IDs.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public CreateEventSubscriptionRequest withSourceIds(java.util.Collection<String> sourceIds) {
        setSourceIds(sourceIds);
        return this;
    }

    /**
     * <p>
     * A Boolean value; set to <code>true</code> to activate the subscription,
     * or set to <code>false</code> to create the subscription but not activate
     * it.
     * </p>
     *
     * @return <p>
     *         A Boolean value; set to <code>true</code> to activate the
     *         subscription, or set to <code>false</code> to create the
     *         subscription but not activate it.
     *         </p>
     */
    public Boolean isEnabled() {
        return enabled;
    }

    /**
     * <p>
     * A Boolean value; set to <code>true</code> to activate the subscription,
     * or set to <code>false</code> to create the subscription but not activate
     * it.
     * </p>
     *
     * @return <p>
     *         A Boolean value; set to <code>true</code> to activate the
     *         subscription, or set to <code>false</code> to create the
     *         subscription but not activate it.
     *         </p>
     */
    public Boolean getEnabled() {
        return enabled;
    }

    /**
     * <p>
     * A Boolean value; set to <code>true</code> to activate the subscription,
     * or set to <code>false</code> to create the subscription but not activate
     * it.
     * </p>
     *
     * @param enabled <p>
     *            A Boolean value; set to <code>true</code> to activate the
     *            subscription, or set to <code>false</code> to create the
     *            subscription but not activate it.
     *            </p>
     */
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    /**
     * <p>
     * A Boolean value; set to <code>true</code> to activate the subscription,
     * or set to <code>false</code> to create the subscription but not activate
     * it.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param enabled <p>
     *            A Boolean value; set to <code>true</code> to activate the
     *            subscription, or set to <code>false</code> to create the
     *            subscription but not activate it.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public CreateEventSubscriptionRequest withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * <p>
     * One or more tags to be assigned to the event subscription.
     * </p>
     *
     * @return <p>
     *         One or more tags to be assigned to the event subscription.
     *         </p>
     */
    public java.util.List<Tag> getTags() {
        return tags;
    }

    /**
     * <p>
     * One or more tags to be assigned to the event subscription.
     * </p>
     *
     * @param tags <p>
     *            One or more tags to be assigned to the event subscription.
     *            </p>
     */
    public void setTags(java.util.Collection<Tag> tags) {
        if (tags == null) {
            this.tags = null;
            return;
        }

        this.tags = new java.util.ArrayList<Tag>(tags);
    }

    /**
     * <p>
     * One or more tags to be assigned to the event subscription.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param tags <p>
     *            One or more tags to be assigned to the event subscription.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public CreateEventSubscriptionRequest withTags(Tag... tags) {
        if (getTags() == null) {
            this.tags = new java.util.ArrayList<Tag>(tags.length);
        }
        for (Tag value : tags) {
            this.tags.add(value);
        }
        return this;
    }

    /**
     * <p>
     * One or more tags to be assigned to the event subscription.
     * </p>
     * <p>
     * Returns a reference to this object so that method calls can be chained
     * together.
     *
     * @param tags <p>
     *            One or more tags to be assigned to the event subscription.
     *            </p>
     * @return A reference to this updated object so that method calls can be
     *         chained together.
     */
    public CreateEventSubscriptionRequest withTags(java.util.Collection<Tag> tags) {
        setTags(tags);
        return this;
    }

    /**
     * Returns a string representation of this object; useful for testing and
     * debugging.
     *
     * @return A string representation of this object.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("{");
        if (getSubscriptionName() != null)
            sb.append("SubscriptionName: " + getSubscriptionName() + ",");
        if (getSnsTopicArn() != null)
            sb.append("SnsTopicArn: " + getSnsTopicArn() + ",");
        if (getSourceType() != null)
            sb.append("SourceType: " + getSourceType() + ",");
        if (getEventCategories() != null)
            sb.append("EventCategories: " + getEventCategories() + ",");
        if (getSourceIds() != null)
            sb.append("SourceIds: " + getSourceIds() + ",");
        if (getEnabled() != null)
            sb.append("Enabled: " + getEnabled() + ",");
        if (getTags() != null)
            sb.append("Tags: " + getTags());
        sb.append("}");
        return sb.toString();
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int hashCode = 1;

        hashCode = prime * hashCode
                + ((getSubscriptionName() == null) ? 0 : getSubscriptionName().hashCode());
        hashCode = prime * hashCode
                + ((getSnsTopicArn() == null) ? 0 : getSnsTopicArn().hashCode());
        hashCode = prime * hashCode + ((getSourceType() == null) ? 0 : getSourceType().hashCode());
        hashCode = prime * hashCode
                + ((getEventCategories() == null) ? 0 : getEventCategories().hashCode());
        hashCode = prime * hashCode + ((getSourceIds() == null) ? 0 : getSourceIds().hashCode());
        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
        hashCode = prime * hashCode + ((getTags() == null) ? 0 : getTags().hashCode());
        return hashCode;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;

        if (obj instanceof CreateEventSubscriptionRequest == false)
            return false;
        CreateEventSubscriptionRequest other = (CreateEventSubscriptionRequest) obj;

        if (other.getSubscriptionName() == null ^ this.getSubscriptionName() == null)
            return false;
        if (other.getSubscriptionName() != null
                && other.getSubscriptionName().equals(this.getSubscriptionName()) == false)
            return false;
        if (other.getSnsTopicArn() == null ^ this.getSnsTopicArn() == null)
            return false;
        if (other.getSnsTopicArn() != null
                && other.getSnsTopicArn().equals(this.getSnsTopicArn()) == false)
            return false;
        if (other.getSourceType() == null ^ this.getSourceType() == null)
            return false;
        if (other.getSourceType() != null
                && other.getSourceType().equals(this.getSourceType()) == false)
            return false;
        if (other.getEventCategories() == null ^ this.getEventCategories() == null)
            return false;
        if (other.getEventCategories() != null
                && other.getEventCategories().equals(this.getEventCategories()) == false)
            return false;
        if (other.getSourceIds() == null ^ this.getSourceIds() == null)
            return false;
        if (other.getSourceIds() != null
                && other.getSourceIds().equals(this.getSourceIds()) == false)
            return false;
        if (other.getEnabled() == null ^ this.getEnabled() == null)
            return false;
        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
            return false;
        if (other.getTags() == null ^ this.getTags() == null)
            return false;
        if (other.getTags() != null && other.getTags().equals(this.getTags()) == false)
            return false;
        return true;
    }
}
